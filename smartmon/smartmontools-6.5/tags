!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AACRAID_SAS_SIGNATURE	aacraid.h	39;"	d
ABORT_SELF_TEST	atacmds.h	116;"	d
ACCEPT_MB_NODE	regex/regex_internal.h	284;"	d
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5\/missing aclocal-1.15$/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ALL_MODE_PAGES	scsicmds.h	237;"	d
ALT	regex/regex_internal.h	/^  ALT,$/;"	e	enum:__anon117
AMCC_3WARE_678K	os_linux.cpp	/^    AMCC_3WARE_678K,$/;"	e	enum:os_linux::linux_escalade_device::escalade_type_t	file:
AMCC_3WARE_678K_CHAR	os_linux.cpp	/^    AMCC_3WARE_678K_CHAR,$/;"	e	enum:os_linux::linux_escalade_device::escalade_type_t	file:
AMCC_3WARE_9000_CHAR	os_linux.cpp	/^    AMCC_3WARE_9000_CHAR,$/;"	e	enum:os_linux::linux_escalade_device::escalade_type_t	file:
AMCC_3WARE_9700_CHAR	os_linux.cpp	/^    AMCC_3WARE_9700_CHAR$/;"	e	enum:os_linux::linux_escalade_device::escalade_type_t	file:
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = -DBUILD_INFO='$(BUILD_INFO)' \\$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = cscope$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCAS	Makefile	/^AM_V_CCAS = $(am__v_CCAS_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CXX	Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
ANCHOR	regex/regex_internal.h	/^  ANCHOR,$/;"	e	enum:__anon117
APPLICATION_CLIENT_LPAGE	scsicmds.h	191;"	d
ARCIOCTL_SEND_RAW_SRB	aacraid.h	38;"	d
ARCMSR_CLEAR_RQBUFFER	dev_areca.h	/^ARCMSR_CLEAR_RQBUFFER,$/;"	e	enum:_GENERIC_ARCMSR_CMDS
ARCMSR_CLEAR_WQBUFFER	dev_areca.h	/^ARCMSR_CLEAR_WQBUFFER,$/;"	e	enum:_GENERIC_ARCMSR_CMDS
ARCMSR_CMD_TOTAL	dev_areca.h	/^ARCMSR_CMD_TOTAL$/;"	e	enum:_GENERIC_ARCMSR_CMDS
ARCMSR_IOCTL_CLEAR_RQBUFFER	dev_areca.h	42;"	d
ARCMSR_IOCTL_CLEAR_RQBUFFER	dev_areca.h	58;"	d
ARCMSR_IOCTL_CLEAR_RQBUFFER	dev_areca.h	74;"	d
ARCMSR_IOCTL_CLEAR_WQBUFFER	dev_areca.h	43;"	d
ARCMSR_IOCTL_CLEAR_WQBUFFER	dev_areca.h	59;"	d
ARCMSR_IOCTL_CLEAR_WQBUFFER	dev_areca.h	75;"	d
ARCMSR_IOCTL_READ_RQBUFFER	dev_areca.h	40;"	d
ARCMSR_IOCTL_READ_RQBUFFER	dev_areca.h	56;"	d
ARCMSR_IOCTL_READ_RQBUFFER	dev_areca.h	72;"	d
ARCMSR_IOCTL_RETURN_CODE_3F	dev_areca.h	44;"	d
ARCMSR_IOCTL_RETURN_CODE_3F	dev_areca.h	60;"	d
ARCMSR_IOCTL_RETURN_CODE_3F	dev_areca.h	76;"	d
ARCMSR_IOCTL_WRITE_WQBUFFER	dev_areca.h	41;"	d
ARCMSR_IOCTL_WRITE_WQBUFFER	dev_areca.h	57;"	d
ARCMSR_IOCTL_WRITE_WQBUFFER	dev_areca.h	73;"	d
ARCMSR_READ_RQBUFFER	dev_areca.h	/^ARCMSR_READ_RQBUFFER = 0,$/;"	e	enum:_GENERIC_ARCMSR_CMDS
ARCMSR_RETURN_CODE_3F	dev_areca.h	/^ARCMSR_RETURN_CODE_3F,$/;"	e	enum:_GENERIC_ARCMSR_CMDS
ARCMSR_WRITE_WQBUFFER	dev_areca.h	/^ARCMSR_WRITE_WQBUFFER,$/;"	e	enum:_GENERIC_ARCMSR_CMDS
ARECA_MAX_CTLR_NUM	os_win32.cpp	3910;"	d	file:
ARECA_SATA_RAID	dev_areca.h	47;"	d
ARECA_SIG_STR	dev_areca.h	37;"	d
ARGUSED	os_freebsd.cpp	128;"	d	file:
ARGUSED	os_generic.cpp	91;"	d	file:
ARGUSED	os_linux.cpp	103;"	d	file:
ARGUSED	os_qnxnto.cpp	28;"	d	file:
ARGUSED	os_solaris.cpp	38;"	d	file:
ARGUSED	os_win32/syslog_win32.cpp	45;"	d	file:
ASCQ_ATA_PASS_THRU_INFO_AVAIL	os_qnxnto.h	222;"	d
ASCQ_BECOMING_READY	os_qnxnto.h	228;"	d
ASCQ_BOPM_DETECTED	os_qnxnto.h	218;"	d
ASCQ_CAUSE_NOT_REPORTABLE	os_qnxnto.h	227;"	d
ASCQ_EOPM_DETECTED	os_qnxnto.h	216;"	d
ASCQ_FILEMARK_DETECTED	os_qnxnto.h	215;"	d
ASCQ_FORMAT_IN_PROGRESS	os_qnxnto.h	231;"	d
ASCQ_INIT_COMMAND_REQUIRED	os_qnxnto.h	229;"	d
ASCQ_MANUAL_INTERVENTION_REQUIRED	os_qnxnto.h	230;"	d
ASCQ_OPERATOR_MEDIUM_REMOVAL	os_qnxnto.h	263;"	d
ASCQ_READ_SCRAMBLED	os_qnxnto.h	254;"	d
ASCQ_RECORD_NOT_FOUND	os_qnxnto.h	240;"	d
ASCQ_SETMARK_DETECTED	os_qnxnto.h	217;"	d
ASCQ_UNKNOWN_CHANGED	os_qnxnto.h	232;"	d
ASCQ_UNRECOVERABLE_CIRC	os_qnxnto.h	247;"	d
ASC_ATA_PASS_THRU	os_qnxnto.h	221;"	d
ASC_BUS_RESET	os_qnxnto.h	260;"	d
ASC_COMMAND_SEQUENCE_ERROR	os_qnxnto.h	253;"	d
ASC_COPY_PROTECTION	os_qnxnto.h	256;"	d
ASC_ILLEGAL_MODE	os_qnxnto.h	255;"	d
ASC_INCOMPATIBLE_MEDIUM	os_qnxnto.h	242;"	d
ASC_INSUFFICIENT_TIME_FOR_OPERATION	os_qnxnto.h	261;"	d
ASC_INTERNAL_TARGET_FAILURE	os_qnxnto.h	245;"	d
ASC_INVALID_COMMAND	os_qnxnto.h	250;"	d
ASC_INVALID_FIELD	os_qnxnto.h	251;"	d
ASC_INVALID_FIELD_PARAMETER	os_qnxnto.h	252;"	d
ASC_MEDIA_FORMAT	os_qnxnto.h	233;"	d
ASC_MEDIA_LOAD_EJECT_FAILURE	os_qnxnto.h	246;"	d
ASC_MEDIA_NOT_PRESENT	os_qnxnto.h	234;"	d
ASC_MEDIUM_CHANGED	os_qnxnto.h	259;"	d
ASC_NOT_CONFIGURED	os_qnxnto.h	235;"	d
ASC_NOT_READY	os_qnxnto.h	226;"	d
ASC_NO_SEEK_COMPLETE	os_qnxnto.h	225;"	d
ASC_OPERATOR_REQUEST	os_qnxnto.h	262;"	d
ASC_RECORD_NOT_FOUND	os_qnxnto.h	239;"	d
ASC_UNABLE_TO_RECOVER_TOC	os_qnxnto.h	241;"	d
ASC_UNRECOVERABLE_READ_ERROR	os_qnxnto.h	238;"	d
ASC_WRITE_PROTECTED	os_qnxnto.h	266;"	d
ASFLAGS	Makefile	/^ASFLAGS = $/;"	m
ASSERT_CONST	os_win32.cpp	97;"	d	file:
ASSERT_SIZEOF	os_win32.cpp	99;"	d	file:
ASSERT_SIZEOF_STRUCT	atacmds.h	37;"	d
ASSERT_command_table_size	atacmdnames.cpp	/^typedef char ASSERT_command_table_size[$/;"	t	file:
ATACMDNAMES_H_	atacmdnames.h	24;"	d
ATACMDNAMES_H_CVSID	atacmdnames.h	26;"	d
ATACMDS_H_	atacmds.h	26;"	d
ATACMDS_H_CVSID	atacmds.h	28;"	d
ATACheckDevice	smartd.cpp	/^static int ATACheckDevice(const dev_config & cfg, dev_state & state, ata_device * atadev,$/;"	f	file:
ATADeviceScan	smartd.cpp	/^static int ATADeviceScan(dev_config & cfg, dev_state & state, ata_device * atadev)$/;"	f	file:
ATAIDENTIFY_H	ataidentify.h	19;"	d
ATAIDENTIFY_H_CVSID	ataidentify.h	21;"	d
ATAPRINT_H_	ataprint.h	26;"	d
ATAPRINT_H_CVSID	ataprint.h	28;"	d
ATA_CHECK_POWER_MODE	atacmds.h	71;"	d
ATA_DEVICE	os_freebsd.cpp	125;"	d	file:
ATA_DISABLE_AAM	atacmds.h	81;"	d
ATA_DISABLE_APM	atacmds.h	82;"	d
ATA_DISABLE_READ_LOOK_AHEAD	atacmds.h	84;"	d
ATA_DISABLE_WRITE_CACHE	atacmds.h	83;"	d
ATA_ENABLE_AAM	atacmds.h	85;"	d
ATA_ENABLE_APM	atacmds.h	86;"	d
ATA_ENABLE_READ_LOOK_AHEAD	atacmds.h	88;"	d
ATA_ENABLE_WRITE_CACHE	atacmds.h	87;"	d
ATA_FLAGS_48BIT_COMMAND	os_win32.cpp	180;"	d	file:
ATA_FLAGS_DATA_IN	os_win32.cpp	178;"	d	file:
ATA_FLAGS_DATA_OUT	os_win32.cpp	179;"	d	file:
ATA_FLAGS_DRDY_REQUIRED	os_win32.cpp	177;"	d	file:
ATA_FLAGS_NO_MULTIPLE	os_win32.cpp	182;"	d	file:
ATA_FLAGS_USE_DMA	os_win32.cpp	181;"	d	file:
ATA_FLG_BYT_BLOK	os_qnxnto.h	104;"	d
ATA_FLG_BYT_BLOK	os_qnxnto.h	767;"	d
ATA_FLG_CK_COND	os_qnxnto.h	102;"	d
ATA_FLG_CK_COND	os_qnxnto.h	765;"	d
ATA_FLG_TLEN_FEATURE	os_qnxnto.h	107;"	d
ATA_FLG_TLEN_FEATURE	os_qnxnto.h	770;"	d
ATA_FLG_TLEN_SECTOR_COUNT	os_qnxnto.h	106;"	d
ATA_FLG_TLEN_SECTOR_COUNT	os_qnxnto.h	769;"	d
ATA_FLG_TLEN_STPSIU	os_qnxnto.h	105;"	d
ATA_FLG_TLEN_STPSIU	os_qnxnto.h	768;"	d
ATA_FLG_T_DIR	os_qnxnto.h	103;"	d
ATA_FLG_T_DIR	os_qnxnto.h	766;"	d
ATA_IDENTIFY_DEVICE	atacmds.h	72;"	d
ATA_IDENTIFY_PACKET_DEVICE	atacmds.h	73;"	d
ATA_IDLE	atacmds.h	74;"	d
ATA_MCOUNT_MSK	os_qnxnto.h	100;"	d
ATA_MCOUNT_MSK	os_qnxnto.h	763;"	d
ATA_PASS_THROUGH	os_win32.cpp	/^} ATA_PASS_THROUGH;$/;"	t	typeref:struct:__anon93	file:
ATA_PASS_THROUGH_EX	os_win32.cpp	/^} ATA_PASS_THROUGH_EX;$/;"	t	typeref:struct:_ATA_PASS_THROUGH_EX	file:
ATA_PASS_THRU	os_qnxnto.h	/^typedef struct _ata_pass_thru   ATA_PASS_THRU;$/;"	t	typeref:struct:_ata_pass_thru
ATA_PROTO_DATA_NONE	os_qnxnto.h	758;"	d
ATA_PROTO_DATA_NONE	os_qnxnto.h	95;"	d
ATA_PROTO_DEVICE_DIAGNOSTIC	os_qnxnto.h	753;"	d
ATA_PROTO_DEVICE_DIAGNOSTIC	os_qnxnto.h	90;"	d
ATA_PROTO_DEVICE_RESET	os_qnxnto.h	752;"	d
ATA_PROTO_DEVICE_RESET	os_qnxnto.h	89;"	d
ATA_PROTO_DMA	os_qnxnto.h	755;"	d
ATA_PROTO_DMA	os_qnxnto.h	92;"	d
ATA_PROTO_DMA_QUEUED	os_qnxnto.h	754;"	d
ATA_PROTO_DMA_QUEUED	os_qnxnto.h	91;"	d
ATA_PROTO_EXTEND	os_qnxnto.h	761;"	d
ATA_PROTO_EXTEND	os_qnxnto.h	98;"	d
ATA_PROTO_FPDMA	os_qnxnto.h	749;"	d
ATA_PROTO_FPDMA	os_qnxnto.h	86;"	d
ATA_PROTO_HRST	os_qnxnto.h	760;"	d
ATA_PROTO_HRST	os_qnxnto.h	97;"	d
ATA_PROTO_MSK	os_qnxnto.h	747;"	d
ATA_PROTO_MSK	os_qnxnto.h	84;"	d
ATA_PROTO_PIO_DATA_IN	os_qnxnto.h	757;"	d
ATA_PROTO_PIO_DATA_IN	os_qnxnto.h	94;"	d
ATA_PROTO_PIO_DATA_OUT	os_qnxnto.h	756;"	d
ATA_PROTO_PIO_DATA_OUT	os_qnxnto.h	93;"	d
ATA_PROTO_RESPONSE	os_qnxnto.h	748;"	d
ATA_PROTO_RESPONSE	os_qnxnto.h	85;"	d
ATA_PROTO_SRST	os_qnxnto.h	759;"	d
ATA_PROTO_SRST	os_qnxnto.h	96;"	d
ATA_PROTO_UDMA_DATA_IN	os_qnxnto.h	751;"	d
ATA_PROTO_UDMA_DATA_IN	os_qnxnto.h	88;"	d
ATA_PROTO_UDMA_DATA_OUT	os_qnxnto.h	750;"	d
ATA_PROTO_UDMA_DATA_OUT	os_qnxnto.h	87;"	d
ATA_READ_LOG_EXT	atacmds.h	91;"	d
ATA_READ_LOG_EXT	os_freebsd.cpp	42;"	d	file:
ATA_RETURN_DESCRIPTOR	scsiata.cpp	99;"	d	file:
ATA_SD_DLEN	os_qnxnto.h	193;"	d
ATA_SD_FLG_EXTEND	os_qnxnto.h	195;"	d
ATA_SECURITY_FREEZE_LOCK	atacmds.h	76;"	d
ATA_SENSE	os_qnxnto.h	/^typedef struct _ata_sense       ATA_SENSE;$/;"	t	typeref:struct:_ata_sense
ATA_SET_FEATURES	atacmds.h	77;"	d
ATA_SMART_AUTOSAVE	atacmds.h	97;"	d
ATA_SMART_AUTO_OFFLINE	atacmds.h	108;"	d
ATA_SMART_CMD	atacmds.h	75;"	d
ATA_SMART_DISABLE	atacmds.h	104;"	d
ATA_SMART_ENABLE	atacmds.h	103;"	d
ATA_SMART_IMMEDIATE_OFFLINE	atacmds.h	99;"	d
ATA_SMART_LBA_HI_SIG	os_qnxnto.h	79;"	d
ATA_SMART_LBA_MID_SIG	os_qnxnto.h	78;"	d
ATA_SMART_READ_LOG_SECTOR	atacmds.h	100;"	d
ATA_SMART_READ_THRESHOLDS	atacmds.h	96;"	d
ATA_SMART_READ_VALUES	atacmds.h	95;"	d
ATA_SMART_SAVE	atacmds.h	98;"	d
ATA_SMART_SIG	os_qnxnto.h	80;"	d
ATA_SMART_STATUS	atacmds.h	105;"	d
ATA_SMART_WRITE_LOG_SECTOR	atacmds.h	101;"	d
ATA_SMART_WRITE_THRESHOLDS	atacmds.h	102;"	d
ATA_STANDBY_IMMEDIATE	atacmds.h	78;"	d
ATA_STATUS_DESCRIPTOR	os_qnxnto.h	/^} ATA_STATUS_DESCRIPTOR;$/;"	t	typeref:struct:_ata_status_descriptor
ATTRFLAG_HDD_ONLY	atacmds.h	/^  ATTRFLAG_HDD_ONLY    = 0x08, \/\/ DEFAULT setting for HDD only$/;"	e	enum:__anon50
ATTRFLAG_INCREASING	atacmds.h	/^  ATTRFLAG_INCREASING  = 0x01, \/\/ Value not reset (for reallocated\/pending counts)$/;"	e	enum:__anon50
ATTRFLAG_NO_NORMVAL	atacmds.h	/^  ATTRFLAG_NO_NORMVAL  = 0x02, \/\/ Normalized value not valid$/;"	e	enum:__anon50
ATTRFLAG_NO_WORSTVAL	atacmds.h	/^  ATTRFLAG_NO_WORSTVAL = 0x04, \/\/ Worst value not valid$/;"	e	enum:__anon50
ATTRFLAG_SSD_ONLY	atacmds.h	/^  ATTRFLAG_SSD_ONLY    = 0x10, \/\/ DEFAULT setting for SSD only$/;"	e	enum:__anon50
ATTRIBUTE_FLAGS_ERRORRATE	atacmds.h	197;"	d
ATTRIBUTE_FLAGS_EVENTCOUNT	atacmds.h	200;"	d
ATTRIBUTE_FLAGS_ONLINE	atacmds.h	188;"	d
ATTRIBUTE_FLAGS_OTHER	atacmds.h	206;"	d
ATTRIBUTE_FLAGS_PERFORMANCE	atacmds.h	194;"	d
ATTRIBUTE_FLAGS_PREFAILURE	atacmds.h	178;"	d
ATTRIBUTE_FLAGS_SELFPRESERVING	atacmds.h	203;"	d
ATTRSTATE_FAILED_NOW	atacmds.h	/^  ATTRSTATE_FAILED_NOW      \/\/ Failed now$/;"	e	enum:ata_attr_state
ATTRSTATE_FAILED_PAST	atacmds.h	/^  ATTRSTATE_FAILED_PAST,    \/\/ Failed in the past$/;"	e	enum:ata_attr_state
ATTRSTATE_NON_EXISTING	atacmds.h	/^  ATTRSTATE_NON_EXISTING,   \/\/ No such Attribute$/;"	e	enum:ata_attr_state
ATTRSTATE_NO_NORMVAL	atacmds.h	/^  ATTRSTATE_NO_NORMVAL,     \/\/ Normalized value not valid$/;"	e	enum:ata_attr_state
ATTRSTATE_NO_THRESHOLD	atacmds.h	/^  ATTRSTATE_NO_THRESHOLD,   \/\/ Unknown or no threshold$/;"	e	enum:ata_attr_state
ATTRSTATE_OK	atacmds.h	/^  ATTRSTATE_OK,             \/\/ Never failed$/;"	e	enum:ata_attr_state
ATTR_ACA	cissio_freebsd.h	99;"	d
ATTR_HEADOFQUEUE	cissio_freebsd.h	97;"	d
ATTR_ORDERED	cissio_freebsd.h	98;"	d
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_identify_device
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_sct_data_table_command
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_sct_error_recovery_control_command
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_sct_feature_control_command
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_sct_status_response
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_sct_temperature_history_table
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_selective_self_test_log
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_attribute
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_errorlog
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_errorlog_command_struct
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_errorlog_error_struct
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_errorlog_struct
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_exterrlog
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_exterrlog_command
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_exterrlog_error
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_exterrlog_error_log
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_extselftestlog
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_extselftestlog_desc
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_log_directory
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_log_entry
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_selftestlog
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_selftestlog_struct
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_threshold_entry
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_thresholds_pvt
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:ata_smart_values
ATTR_PACKED	atacmds.h	/^} ATTR_PACKED;$/;"	v	typeref:struct:test_span
ATTR_PACKED	atacmds.h	43;"	d
ATTR_PACKED	atacmds.h	45;"	d
ATTR_SIMPLE	cissio_freebsd.h	96;"	d
ATTR_UNTAGGED	cissio_freebsd.h	95;"	d
ATTR_UNUSED	os_win32.cpp	91;"	d	file:
ATTR_UNUSED	os_win32.cpp	93;"	d	file:
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5\/missing automake-1.15$/;"	m
AUTOSAVE	atacmds.h	/^  AUTOSAVE,$/;"	e	enum:__anon48
AUTO_OFFLINE	atacmds.h	/^  AUTO_OFFLINE,$/;"	e	enum:__anon48
AWK	Makefile	/^AWK = gawk$/;"	m
AdditionalParameters	os_win32.cpp	/^  UCHAR AdditionalParameters[1];$/;"	m	struct:_STORAGE_PROPERTY_QUERY	file:
AtaFlags	os_win32.cpp	/^  USHORT AtaFlags;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
Attached	csmisas.h	/^   CSMI_SAS_IDENTIFY Attached;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
Attribute	cissio_freebsd.h	/^	u_int8_t	Attribute:3;$/;"	m	struct:__anon105::__anon106
BACKGROUND_CONTROL_M_SUBPAGE	scsicmds.h	235;"	d
BACKGROUND_RESULTS_LPAGE	scsicmds.h	194;"	d
BACK_SLASH	regex/regex_internal.h	/^  BACK_SLASH,$/;"	e	enum:__anon117
BAD_KERNEL	os_freebsd.cpp	89;"	d	file:
BAD_SMART	os_freebsd.cpp	87;"	d	file:
BAD_SMART	os_netbsd.cpp	/^  BAD_SMART, MAX_MSG$/;"	e	enum:warnings	file:
BAD_SMART	os_openbsd.cpp	/^  BAD_SMART, MAX_MSG$/;"	e	enum:warnings	file:
BE	regex/regex_internal.h	82;"	d
BE	regex/regex_internal.h	84;"	d
BITSET_UINTS	regex/regex_internal.h	115;"	d
BRACKET_NAME_BUF_SIZE	regex/regcomp.c	2349;"	d	file:
BUFFER_LENGTH	os_linux.cpp	259;"	d	file:
BUFFER_LEN_678K	os_linux.cpp	1691;"	d	file:
BUFFER_LEN_678K_CHAR	os_freebsd.cpp	120;"	d	file:
BUFFER_LEN_678K_CHAR	os_linux.cpp	1692;"	d	file:
BUFFER_LEN_9000	os_linux.cpp	1693;"	d	file:
BUFFER_LEN_9000_CHAR	os_freebsd.cpp	121;"	d	file:
BUFFER_OVERRUN_LPAGE	scsicmds.h	180;"	d
BUF_FIRST	regex/regex_internal.h	/^  BUF_FIRST = PREV_BEGBUF_CONSTRAINT,$/;"	e	enum:__anon115
BUF_LAST	regex/regex_internal.h	/^  BUF_LAST = NEXT_ENDBUF_CONSTRAINT,$/;"	e	enum:__anon115
BUG_NOLOGDIR	atacmds.h	/^  BUG_NOLOGDIR,$/;"	e	enum:firmwarebug_t
BUG_NONE	atacmds.h	/^  BUG_NONE = 0,$/;"	e	enum:firmwarebug_t
BUG_SAMSUNG	atacmds.h	/^  BUG_SAMSUNG,$/;"	e	enum:firmwarebug_t
BUG_SAMSUNG2	atacmds.h	/^  BUG_SAMSUNG2,$/;"	e	enum:firmwarebug_t
BUG_SAMSUNG3	atacmds.h	/^  BUG_SAMSUNG3,$/;"	e	enum:firmwarebug_t
BUG_XERRORLBA	atacmds.h	/^  BUG_XERRORLBA$/;"	e	enum:firmwarebug_t
BUILD_CHARCLASS_LOOP	regex/regcomp.c	3238;"	d	file:
BUILD_INFO	Makefile	/^BUILD_INFO = "(local build)"$/;"	m
BUILD_INFO	utility.cpp	79;"	d	file:
BYTE	csmisas.h	/^typedef unsigned char BYTE;$/;"	t
BYTE_BITS	regex/regex_internal.h	89;"	d
BaseMemoryAddress	csmisas.h	/^   } BaseMemoryAddress;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG	typeref:struct:_CSMI_SAS_CNTLR_CONFIG::__anon144
Bus	cissio_freebsd.h	/^	u_int8_t	Bus:3;$/;"	m	struct:__anon98::__anon101
Bus	cissio_freebsd.h	/^	u_int8_t	Bus:6;$/;"	m	struct:__anon98::__anon99
Bus	cissio_freebsd.h	/^    u_int32_t		Bus:6;$/;"	m	struct:__anon102
BusAddress	csmisas.h	/^   CSMI_SAS_IO_BUS_ADDRESS BusAddress;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
BusType	os_win32.cpp	/^  STORAGE_BUS_TYPE BusType;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
BusTypes_type	cissio_freebsd.h	/^typedef u_int32_t	BusTypes_type;$/;"	t
CACHING_PAGE	scsicmds.h	218;"	d
CAM_FAILURE	os_qnxnto.h	69;"	d
CAM_FALSE	os_qnxnto.h	71;"	d
CAM_SUCCESS	os_qnxnto.h	68;"	d
CAM_TRUE	os_qnxnto.h	72;"	d
CAPNG_LDADD	Makefile	/^CAPNG_LDADD = -lcap-ng$/;"	m
CAPTIVE_MASK	atacmds.h	121;"	d
CC	Makefile	/^CC = gcc$/;"	m
CCAS	Makefile	/^CCAS = gcc$/;"	m
CCASCOMPILE	Makefile	/^CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)$/;"	m
CCASDEPMODE	Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASFLAGS	Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCB	os_qnxnto.h	/^typedef void CCB;$/;"	t
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCISS_GETBUSTYPES	cissio_freebsd.h	225;"	d
CCISS_GETDRIVERVER	cissio_freebsd.h	227;"	d
CCISS_GETFIRMVER	cissio_freebsd.h	226;"	d
CCISS_GETHEARTBEAT	cissio_freebsd.h	224;"	d
CCISS_GETINTINFO	cissio_freebsd.h	220;"	d
CCISS_GETNODENAME	cissio_freebsd.h	222;"	d
CCISS_GETPCIINFO	cissio_freebsd.h	219;"	d
CCISS_GETQSTATS	cissio_freebsd.h	233;"	d
CCISS_H_	cciss.h	2;"	d
CCISS_H_CVSID	cciss.h	4;"	d
CCISS_PASSTHRU	cissio_freebsd.h	229;"	d
CCISS_PASSTHRU32	cissio_freebsd.h	231;"	d
CCISS_REVALIDVOLS	cissio_freebsd.h	228;"	d
CCISS_SETINTINFO	cissio_freebsd.h	221;"	d
CCISS_SETNODENAME	cissio_freebsd.h	223;"	d
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CC_CSMI_SAS_FIRMWARE_DOWNLOAD	csmisas.h	158;"	d
CC_CSMI_SAS_FIRMWARE_DOWNLOAD	csmisas.h	256;"	d
CC_CSMI_SAS_FIRMWARE_DOWNLOAD	csmisas.h	344;"	d
CC_CSMI_SAS_GET_CNTLR_CONFIG	csmisas.h	156;"	d
CC_CSMI_SAS_GET_CNTLR_CONFIG	csmisas.h	254;"	d
CC_CSMI_SAS_GET_CNTLR_CONFIG	csmisas.h	342;"	d
CC_CSMI_SAS_GET_CNTLR_STATUS	csmisas.h	157;"	d
CC_CSMI_SAS_GET_CNTLR_STATUS	csmisas.h	255;"	d
CC_CSMI_SAS_GET_CNTLR_STATUS	csmisas.h	343;"	d
CC_CSMI_SAS_GET_CONNECTOR_INFO	csmisas.h	181;"	d
CC_CSMI_SAS_GET_CONNECTOR_INFO	csmisas.h	279;"	d
CC_CSMI_SAS_GET_CONNECTOR_INFO	csmisas.h	367;"	d
CC_CSMI_SAS_GET_DEVICE_ADDRESS	csmisas.h	179;"	d
CC_CSMI_SAS_GET_DEVICE_ADDRESS	csmisas.h	277;"	d
CC_CSMI_SAS_GET_DEVICE_ADDRESS	csmisas.h	365;"	d
CC_CSMI_SAS_GET_DRIVER_INFO	csmisas.h	155;"	d
CC_CSMI_SAS_GET_DRIVER_INFO	csmisas.h	253;"	d
CC_CSMI_SAS_GET_DRIVER_INFO	csmisas.h	341;"	d
CC_CSMI_SAS_GET_LINK_ERRORS	csmisas.h	173;"	d
CC_CSMI_SAS_GET_LINK_ERRORS	csmisas.h	271;"	d
CC_CSMI_SAS_GET_LINK_ERRORS	csmisas.h	359;"	d
CC_CSMI_SAS_GET_LOCATION	csmisas.h	182;"	d
CC_CSMI_SAS_GET_LOCATION	csmisas.h	280;"	d
CC_CSMI_SAS_GET_LOCATION	csmisas.h	368;"	d
CC_CSMI_SAS_GET_PHY_INFO	csmisas.h	171;"	d
CC_CSMI_SAS_GET_PHY_INFO	csmisas.h	269;"	d
CC_CSMI_SAS_GET_PHY_INFO	csmisas.h	357;"	d
CC_CSMI_SAS_GET_RAID_CONFIG	csmisas.h	163;"	d
CC_CSMI_SAS_GET_RAID_CONFIG	csmisas.h	261;"	d
CC_CSMI_SAS_GET_RAID_CONFIG	csmisas.h	349;"	d
CC_CSMI_SAS_GET_RAID_ELEMENT	csmisas.h	166;"	d
CC_CSMI_SAS_GET_RAID_ELEMENT	csmisas.h	264;"	d
CC_CSMI_SAS_GET_RAID_ELEMENT	csmisas.h	352;"	d
CC_CSMI_SAS_GET_RAID_FEATURES	csmisas.h	164;"	d
CC_CSMI_SAS_GET_RAID_FEATURES	csmisas.h	262;"	d
CC_CSMI_SAS_GET_RAID_FEATURES	csmisas.h	350;"	d
CC_CSMI_SAS_GET_RAID_INFO	csmisas.h	162;"	d
CC_CSMI_SAS_GET_RAID_INFO	csmisas.h	260;"	d
CC_CSMI_SAS_GET_RAID_INFO	csmisas.h	348;"	d
CC_CSMI_SAS_GET_SATA_SIGNATURE	csmisas.h	177;"	d
CC_CSMI_SAS_GET_SATA_SIGNATURE	csmisas.h	275;"	d
CC_CSMI_SAS_GET_SATA_SIGNATURE	csmisas.h	363;"	d
CC_CSMI_SAS_GET_SCSI_ADDRESS	csmisas.h	178;"	d
CC_CSMI_SAS_GET_SCSI_ADDRESS	csmisas.h	276;"	d
CC_CSMI_SAS_GET_SCSI_ADDRESS	csmisas.h	364;"	d
CC_CSMI_SAS_PHY_CONTROL	csmisas.h	187;"	d
CC_CSMI_SAS_PHY_CONTROL	csmisas.h	284;"	d
CC_CSMI_SAS_PHY_CONTROL	csmisas.h	372;"	d
CC_CSMI_SAS_SET_PHY_INFO	csmisas.h	172;"	d
CC_CSMI_SAS_SET_PHY_INFO	csmisas.h	270;"	d
CC_CSMI_SAS_SET_PHY_INFO	csmisas.h	358;"	d
CC_CSMI_SAS_SET_RAID_CONTROL	csmisas.h	165;"	d
CC_CSMI_SAS_SET_RAID_CONTROL	csmisas.h	263;"	d
CC_CSMI_SAS_SET_RAID_CONTROL	csmisas.h	351;"	d
CC_CSMI_SAS_SET_RAID_OPERATION	csmisas.h	167;"	d
CC_CSMI_SAS_SET_RAID_OPERATION	csmisas.h	265;"	d
CC_CSMI_SAS_SET_RAID_OPERATION	csmisas.h	353;"	d
CC_CSMI_SAS_SMP_PASSTHRU	csmisas.h	174;"	d
CC_CSMI_SAS_SMP_PASSTHRU	csmisas.h	272;"	d
CC_CSMI_SAS_SMP_PASSTHRU	csmisas.h	360;"	d
CC_CSMI_SAS_SSP_PASSTHRU	csmisas.h	175;"	d
CC_CSMI_SAS_SSP_PASSTHRU	csmisas.h	273;"	d
CC_CSMI_SAS_SSP_PASSTHRU	csmisas.h	361;"	d
CC_CSMI_SAS_STP_PASSTHRU	csmisas.h	176;"	d
CC_CSMI_SAS_STP_PASSTHRU	csmisas.h	274;"	d
CC_CSMI_SAS_STP_PASSTHRU	csmisas.h	362;"	d
CC_CSMI_SAS_TASK_MANAGEMENT	csmisas.h	180;"	d
CC_CSMI_SAS_TASK_MANAGEMENT	csmisas.h	278;"	d
CC_CSMI_SAS_TASK_MANAGEMENT	csmisas.h	366;"	d
CDB	cissio_freebsd.h	/^    u_int8_t	CDB[16];$/;"	m	struct:__anon105
CDB	os_qnxnto.h	/^} CDB;$/;"	t	typeref:union:_cdb
CDBLen	cissio_freebsd.h	/^    u_int8_t	CDBLen;$/;"	m	struct:__anon105
CD_AUDIO_CONTROL_PAGE	scsicmds.h	225;"	d
CD_DEVICE_PAGE	scsicmds.h	224;"	d
CD_FRAME_AUX_SIZE	os_qnxnto.h	697;"	d
CD_FRAME_BLOCK_ERR_SIZE	os_qnxnto.h	701;"	d
CD_FRAME_C2_ERR_SIZE	os_qnxnto.h	700;"	d
CD_FRAME_ECC_SIZE	os_qnxnto.h	696;"	d
CD_FRAME_EDC_SIZE	os_qnxnto.h	695;"	d
CD_FRAME_HDR_SIZE	os_qnxnto.h	693;"	d
CD_FRAME_SPARE_SIZE	os_qnxnto.h	699;"	d
CD_FRAME_SUB_HDR_SIZE	os_qnxnto.h	694;"	d
CD_FRAME_SYNC_SIZE	os_qnxnto.h	692;"	d
CD_FRAME_ZERO_SIZE	os_qnxnto.h	698;"	d
CD_SCAN_DIR_FORWARD	os_qnxnto.h	566;"	d
CD_SCAN_DIR_REVERSE	os_qnxnto.h	567;"	d
CD_SCAN_TYPE_LBA	os_qnxnto.h	570;"	d
CD_SCAN_TYPE_MSF	os_qnxnto.h	571;"	d
CD_SCAN_TYPE_MSK	os_qnxnto.h	573;"	d
CD_SCAN_TYPE_TRK	os_qnxnto.h	572;"	d
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CF_DPO	os_qnxnto.h	286;"	d
CF_FLAG	os_qnxnto.h	281;"	d
CF_FUA	os_qnxnto.h	285;"	d
CF_LINK	os_qnxnto.h	280;"	d
CF_VENDOR0	os_qnxnto.h	282;"	d
CF_VENDOR1	os_qnxnto.h	283;"	d
CHARACTER	regex/regex_internal.h	/^  CHARACTER,$/;"	e	enum:__anon117
CHAR_CLASS	regex/regex_internal.h	/^  CHAR_CLASS$/;"	e	enum:__anon127
CHECKSUM_ERR_EXIT	smartctl.cpp	/^  CHECKSUM_ERR_WARN, CHECKSUM_ERR_EXIT, CHECKSUM_ERR_IGNORE$/;"	e	enum:checksum_err_mode_t	file:
CHECKSUM_ERR_IGNORE	smartctl.cpp	/^  CHECKSUM_ERR_WARN, CHECKSUM_ERR_EXIT, CHECKSUM_ERR_IGNORE$/;"	e	enum:checksum_err_mode_t	file:
CHECKSUM_ERR_WARN	smartctl.cpp	/^  CHECKSUM_ERR_WARN, CHECKSUM_ERR_EXIT, CHECKSUM_ERR_IGNORE$/;"	e	enum:checksum_err_mode_t	file:
CHECKTIME	smartd.cpp	129;"	d	file:
CHECK_POWER_MODE	atacmds.h	/^  CHECK_POWER_MODE,$/;"	e	enum:__anon48
CIMTYPE	os_win32/wbemcli_small.h	/^  typedef long CIMTYPE;$/;"	t
CISSQ_COUNT	cissio_freebsd.h	203;"	d
CISSQ_FREE	cissio_freebsd.h	201;"	d
CISSQ_NOTIFY	cissio_freebsd.h	202;"	d
CISS_FIBRE1G	cissio_freebsd.h	60;"	d
CISS_FIBRE2G	cissio_freebsd.h	61;"	d
CISS_LOCATION	config.h	8;"	d
CISS_MAX_LUN	cciss.cpp	53;"	d	file:
CISS_MAX_LUN	cissio_freebsd.h	69;"	d
CISS_MAX_PHYS_LUN	cciss.cpp	55;"	d	file:
CISS_PARCSCIU3	cissio_freebsd.h	59;"	d
CISS_PARSCSIU2	cissio_freebsd.h	58;"	d
CISS_REPORT_PHYS	cciss.cpp	56;"	d	file:
CLEANFILES	Makefile	/^CLEANFILES = smartd.conf.5 smartd.conf.4 smartd.8 smartd.1m \\$/;"	m
CLSID_WbemLocator	os_win32/wbemcli_small.h	/^  EXTERN_C const CLSID CLSID_WbemLocator;$/;"	v
CMD_ABORTED	cissio_freebsd.h	82;"	d
CMD_ABORT_FAILED	cissio_freebsd.h	83;"	d
CMD_CONNECTION_LOST	cissio_freebsd.h	81;"	d
CMD_DATA_OVERRUN	cissio_freebsd.h	77;"	d
CMD_DATA_UNDERRUN	cissio_freebsd.h	76;"	d
CMD_HARDWARE_ERR	cissio_freebsd.h	80;"	d
CMD_INVALID	cissio_freebsd.h	78;"	d
CMD_PROTOCOL_ERR	cissio_freebsd.h	79;"	d
CMD_SUCCESS	cissio_freebsd.h	74;"	d
CMD_TARGET_STATUS	cissio_freebsd.h	75;"	d
CMD_TIMEOUT	cissio_freebsd.h	85;"	d
CMD_UNABORTABLE	cissio_freebsd.h	86;"	d
CMD_UNSOLICITED_ABORT	cissio_freebsd.h	84;"	d
COLL_ELEM_LEN_MAX	regex/regex_internal.h	93;"	d
COLL_SYM	regex/regex_internal.h	/^  COLL_SYM,$/;"	e	enum:__anon127
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPLEX_BRACKET	regex/regex_internal.h	/^  COMPLEX_BRACKET,$/;"	e	enum:__anon117
CONCAT	regex/regex_internal.h	/^  CONCAT,$/;"	e	enum:__anon117
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_H_CVSID	config.h	11;"	d
CONTEXT_BEGBUF	regex/regex_internal.h	407;"	d
CONTEXT_ENDBUF	regex/regex_internal.h	408;"	d
CONTEXT_NEWLINE	regex/regex_internal.h	406;"	d
CONTEXT_WORD	regex/regex_internal.h	405;"	d
CONTROLLER_3WARE_678K_CHAR	os_freebsd.cpp	77;"	d	file:
CONTROLLER_3WARE_9000_CHAR	os_freebsd.cpp	76;"	d	file:
CONTROLLER_ATA	utility.h	299;"	d
CONTROLLER_SCSI	utility.h	300;"	d
CONTROLLER_UNKNOWN	utility.h	298;"	d
CONTROL_MODE_PAGE	scsicmds.h	221;"	d
CONVEYANCE_CAPTIVE_SELF_TEST	atacmds.h	119;"	d
CONVEYANCE_SELF_TEST	atacmds.h	114;"	d
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CSMI_ALL_SIGNATURE	csmisas.h	403;"	d
CSMI_ALL_TIMEOUT	csmisas.h	408;"	d
CSMI_MAJOR_REVISION	csmisas.h	94;"	d
CSMI_MINOR_REVISION	csmisas.h	95;"	d
CSMI_PHY_SIGNATURE	csmisas.h	944;"	d
CSMI_RAID_SIGNATURE	csmisas.h	495;"	d
CSMI_RAID_TIMEOUT	csmisas.h	500;"	d
CSMI_SAS_BEGIN_PACK	csmisas.h	299;"	d
CSMI_SAS_BUS_TYPE_PCI	csmisas.h	419;"	d
CSMI_SAS_BUS_TYPE_PCMCIA	csmisas.h	420;"	d
CSMI_SAS_CHARACTER	csmisas.h	/^} CSMI_SAS_CHARACTER,$/;"	t	typeref:struct:_CSMI_SAS_CHARACTER
CSMI_SAS_CNTLR_CLASS_HBA	csmisas.h	441;"	d
CSMI_SAS_CNTLR_CONFIG	csmisas.h	/^} CSMI_SAS_CNTLR_CONFIG,$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_CONFIG
CSMI_SAS_CNTLR_CONFIG_BUFFER	csmisas.h	/^} CSMI_SAS_CNTLR_CONFIG_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_CONFIG_BUFFER
CSMI_SAS_CNTLR_FWD_HRESET	csmisas.h	456;"	d
CSMI_SAS_CNTLR_FWD_ONLINE	csmisas.h	454;"	d
CSMI_SAS_CNTLR_FWD_RROM	csmisas.h	457;"	d
CSMI_SAS_CNTLR_FWD_SRESET	csmisas.h	455;"	d
CSMI_SAS_CNTLR_FWD_SUPPORT	csmisas.h	453;"	d
CSMI_SAS_CNTLR_RAID_CFG_SUPPORT	csmisas.h	460;"	d
CSMI_SAS_CNTLR_SAS_HBA	csmisas.h	446;"	d
CSMI_SAS_CNTLR_SAS_RAID	csmisas.h	447;"	d
CSMI_SAS_CNTLR_SATA_HBA	csmisas.h	448;"	d
CSMI_SAS_CNTLR_SATA_RAID	csmisas.h	449;"	d
CSMI_SAS_CNTLR_SMART_ARRAY	csmisas.h	450;"	d
CSMI_SAS_CNTLR_STATUS	csmisas.h	/^} CSMI_SAS_CNTLR_STATUS,$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_STATUS
CSMI_SAS_CNTLR_STATUS_BUFFER	csmisas.h	/^} CSMI_SAS_CNTLR_STATUS_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_STATUS_BUFFER
CSMI_SAS_CNTLR_STATUS_FAILED	csmisas.h	426;"	d
CSMI_SAS_CNTLR_STATUS_GOOD	csmisas.h	425;"	d
CSMI_SAS_CNTLR_STATUS_OFFLINE	csmisas.h	427;"	d
CSMI_SAS_CNTLR_STATUS_POWEROFF	csmisas.h	428;"	d
CSMI_SAS_CONNECTION_FAILED	csmisas.h	702;"	d
CSMI_SAS_CONNECTOR_INFO	csmisas.h	/^} CSMI_SAS_CONNECTOR_INFO,$/;"	t	typeref:struct:_CSMI_SAS_GET_CONNECTOR_INFO
CSMI_SAS_CONNECTOR_INFO_BUFFER	csmisas.h	/^} CSMI_SAS_CONNECTOR_INFO_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_CONNECTOR_INFO_BUFFER
CSMI_SAS_CON_AUTO	csmisas.h	914;"	d
CSMI_SAS_CON_EXTERNAL	csmisas.h	912;"	d
CSMI_SAS_CON_INTERNAL	csmisas.h	911;"	d
CSMI_SAS_CON_NOT_CONNECTED	csmisas.h	916;"	d
CSMI_SAS_CON_NOT_PRESENT	csmisas.h	915;"	d
CSMI_SAS_CON_SFF_8470_LANE_1	csmisas.h	897;"	d
CSMI_SAS_CON_SFF_8470_LANE_2	csmisas.h	898;"	d
CSMI_SAS_CON_SFF_8470_LANE_3	csmisas.h	899;"	d
CSMI_SAS_CON_SFF_8470_LANE_4	csmisas.h	900;"	d
CSMI_SAS_CON_SFF_8482	csmisas.h	896;"	d
CSMI_SAS_CON_SFF_8484_LANE_1	csmisas.h	901;"	d
CSMI_SAS_CON_SFF_8484_LANE_2	csmisas.h	902;"	d
CSMI_SAS_CON_SFF_8484_LANE_3	csmisas.h	903;"	d
CSMI_SAS_CON_SFF_8484_LANE_4	csmisas.h	904;"	d
CSMI_SAS_CON_SWITCHABLE	csmisas.h	913;"	d
CSMI_SAS_CON_UNKNOWN	csmisas.h	895;"	d
CSMI_SAS_DATA_READ	csmisas.h	412;"	d
CSMI_SAS_DATA_WRITE	csmisas.h	413;"	d
CSMI_SAS_DISCOVER_COMPLETE	csmisas.h	756;"	d
CSMI_SAS_DISCOVER_ERROR	csmisas.h	757;"	d
CSMI_SAS_DISCOVER_IN_PROGRESS	csmisas.h	755;"	d
CSMI_SAS_DISCOVER_NOT_STARTED	csmisas.h	754;"	d
CSMI_SAS_DISCOVER_NOT_SUPPORTED	csmisas.h	753;"	d
CSMI_SAS_DRIVER_INFO	csmisas.h	/^} CSMI_SAS_DRIVER_INFO,$/;"	t	typeref:struct:_CSMI_SAS_DRIVER_INFO
CSMI_SAS_DRIVER_INFO_BUFFER	csmisas.h	/^} CSMI_SAS_DRIVER_INFO_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_DRIVER_INFO_BUFFER
CSMI_SAS_DRIVE_CONFIG_MEMBER	csmisas.h	553;"	d
CSMI_SAS_DRIVE_CONFIG_NOT_USED	csmisas.h	552;"	d
CSMI_SAS_DRIVE_CONFIG_SPARE	csmisas.h	554;"	d
CSMI_SAS_DRIVE_CONFIG_SPARE_ACTIVE	csmisas.h	555;"	d
CSMI_SAS_DRIVE_EXTENT_INFO	csmisas.h	/^} CSMI_SAS_DRIVE_EXTENT_INFO,$/;"	t	typeref:struct:_CSMI_SAS_DRIVE_EXTENT_INFO
CSMI_SAS_DRIVE_INFO	csmisas.h	/^} CSMI_SAS_DRIVE_INFO,$/;"	t	typeref:struct:_CSMI_SAS_DRIVE_INFO
CSMI_SAS_DRIVE_LOCATION	csmisas.h	/^} CSMI_SAS_DRIVE_LOCATION,$/;"	t	typeref:struct:_CSMI_SAS_DRIVE_LOCATION
CSMI_SAS_DRIVE_STATUS_DEGRADED	csmisas.h	546;"	d
CSMI_SAS_DRIVE_STATUS_FAILED	csmisas.h	545;"	d
CSMI_SAS_DRIVE_STATUS_OFFLINE	csmisas.h	547;"	d
CSMI_SAS_DRIVE_STATUS_OK	csmisas.h	543;"	d
CSMI_SAS_DRIVE_STATUS_QUEUED_FOR_REBUILD	csmisas.h	548;"	d
CSMI_SAS_DRIVE_STATUS_REBUILDING	csmisas.h	544;"	d
CSMI_SAS_DRIVE_TYPE_DUAL_PORT_SAS	csmisas.h	561;"	d
CSMI_SAS_DRIVE_TYPE_OTHER	csmisas.h	564;"	d
CSMI_SAS_DRIVE_TYPE_SATA	csmisas.h	562;"	d
CSMI_SAS_DRIVE_TYPE_SATA_PS	csmisas.h	563;"	d
CSMI_SAS_DRIVE_TYPE_SINGLE_PORT_SAS	csmisas.h	560;"	d
CSMI_SAS_DRIVE_TYPE_UNKNOWN	csmisas.h	559;"	d
CSMI_SAS_EDGE_EXPANDER_DEVICE	csmisas.h	727;"	d
CSMI_SAS_END_DEVICE	csmisas.h	726;"	d
CSMI_SAS_END_PACK	csmisas.h	300;"	d
CSMI_SAS_FAIL_CODE_BLOCK_COUNT_INVALID	csmisas.h	635;"	d
CSMI_SAS_FAIL_CODE_CACHE_RATIO_INVALID	csmisas.h	629;"	d
CSMI_SAS_FAIL_CODE_CHANGE_COUNT_INVALID	csmisas.h	641;"	d
CSMI_SAS_FAIL_CODE_CLEAR_CONFIGURATION_INVALID	csmisas.h	631;"	d
CSMI_SAS_FAIL_CODE_DRIVE_INDEX_INVALID	csmisas.h	636;"	d
CSMI_SAS_FAIL_CODE_DUPLICATE_LUN	csmisas.h	645;"	d
CSMI_SAS_FAIL_CODE_ELEMENT_INDEX_INVALID	csmisas.h	632;"	d
CSMI_SAS_FAIL_CODE_ENUMERATION_TYPE_INVALID	csmisas.h	642;"	d
CSMI_SAS_FAIL_CODE_EXCEEDED_RAID_SET_COUNT	csmisas.h	644;"	d
CSMI_SAS_FAIL_CODE_EXISTING_LUN_INVALID	csmisas.h	637;"	d
CSMI_SAS_FAIL_CODE_EXTENT_INVALID	csmisas.h	634;"	d
CSMI_SAS_FAIL_CODE_OK	csmisas.h	625;"	d
CSMI_SAS_FAIL_CODE_PARAMETER_INVALID	csmisas.h	626;"	d
CSMI_SAS_FAIL_CODE_RAID_TYPE_INVALID	csmisas.h	638;"	d
CSMI_SAS_FAIL_CODE_REBUILD_PRIORITY_INVALID	csmisas.h	628;"	d
CSMI_SAS_FAIL_CODE_STRIPE_SIZE_INVALID	csmisas.h	639;"	d
CSMI_SAS_FAIL_CODE_SUBELEMENT_INDEX_INVALID	csmisas.h	633;"	d
CSMI_SAS_FAIL_CODE_SURFACE_SCAN_INVALID	csmisas.h	630;"	d
CSMI_SAS_FAIL_CODE_TRANSFORMATION_INVALID	csmisas.h	640;"	d
CSMI_SAS_FAIL_CODE_TRANSFORM_PRIORITY_INVALID	csmisas.h	627;"	d
CSMI_SAS_FAIL_CODE_WAIT_FOR_OPERATION	csmisas.h	647;"	d
CSMI_SAS_FANOUT_EXPANDER_DEVICE	csmisas.h	728;"	d
CSMI_SAS_FIRMWARE_DOWNLOAD	csmisas.h	/^} CSMI_SAS_FIRMWARE_DOWNLOAD,$/;"	t	typeref:struct:_CSMI_SAS_FIRMWARE_DOWNLOAD
CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER	csmisas.h	/^} CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER
CSMI_SAS_FWD_DOWNREV	csmisas.h	474;"	d
CSMI_SAS_FWD_ERROR	csmisas.h	480;"	d
CSMI_SAS_FWD_FAILED	csmisas.h	471;"	d
CSMI_SAS_FWD_FATAL	csmisas.h	481;"	d
CSMI_SAS_FWD_HARD_RESET	csmisas.h	466;"	d
CSMI_SAS_FWD_INFORMATION	csmisas.h	478;"	d
CSMI_SAS_FWD_REJECT	csmisas.h	473;"	d
CSMI_SAS_FWD_SOFT_RESET	csmisas.h	465;"	d
CSMI_SAS_FWD_SUCCESS	csmisas.h	470;"	d
CSMI_SAS_FWD_USING_RROM	csmisas.h	472;"	d
CSMI_SAS_FWD_VALIDATE	csmisas.h	464;"	d
CSMI_SAS_FWD_WARNING	csmisas.h	479;"	d
CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER	csmisas.h	/^} CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
CSMI_SAS_GET_LOCATION_BUFFER	csmisas.h	/^} CSMI_SAS_GET_LOCATION_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_GET_LOCATION_BUFFER
CSMI_SAS_GET_SCSI_ADDRESS_BUFFER	csmisas.h	/^} CSMI_SAS_GET_SCSI_ADDRESS_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
CSMI_SAS_HARD_RESET_SEQUENCE	csmisas.h	871;"	d
CSMI_SAS_IDENTIFY	csmisas.h	/^} CSMI_SAS_IDENTIFY,$/;"	t	typeref:struct:_CSMI_SAS_IDENTIFY
CSMI_SAS_IGNORE_PORT	csmisas.h	799;"	d
CSMI_SAS_IO_BUS_ADDRESS	csmisas.h	/^} CSMI_SAS_IO_BUS_ADDRESS,$/;"	t	typeref:union:_CSMI_SAS_IO_BUS_ADDRESS
CSMI_SAS_LINK_ERRORS	csmisas.h	/^} CSMI_SAS_LINK_ERRORS,$/;"	t	typeref:struct:_CSMI_SAS_LINK_ERRORS
CSMI_SAS_LINK_ERRORS_BUFFER	csmisas.h	/^} CSMI_SAS_LINK_ERRORS_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_LINK_ERRORS_BUFFER
CSMI_SAS_LINK_ERROR_DONT_RESET_COUNTS	csmisas.h	788;"	d
CSMI_SAS_LINK_ERROR_RESET_COUNTS	csmisas.h	789;"	d
CSMI_SAS_LINK_RATE_1_5_GBPS	csmisas.h	746;"	d
CSMI_SAS_LINK_RATE_1_5_GBPS	csmisas.h	805;"	d
CSMI_SAS_LINK_RATE_3_0_GBPS	csmisas.h	747;"	d
CSMI_SAS_LINK_RATE_3_0_GBPS	csmisas.h	806;"	d
CSMI_SAS_LINK_RATE_FAILED	csmisas.h	743;"	d
CSMI_SAS_LINK_RATE_NEGOTIATE	csmisas.h	774;"	d
CSMI_SAS_LINK_RATE_NEGOTIATED	csmisas.h	804;"	d
CSMI_SAS_LINK_RATE_OUT_OF_RANGE	csmisas.h	694;"	d
CSMI_SAS_LINK_RATE_PHY_DISABLED	csmisas.h	775;"	d
CSMI_SAS_LINK_RATE_UNKNOWN	csmisas.h	741;"	d
CSMI_SAS_LINK_VIRTUAL	csmisas.h	748;"	d
CSMI_SAS_LOCATE_BAY_IDENTIFIER_VALID	csmisas.h	933;"	d
CSMI_SAS_LOCATE_BAY_PREFIX_VALID	csmisas.h	932;"	d
CSMI_SAS_LOCATE_ENCLOSURE_IDENTIFIER_VALID	csmisas.h	930;"	d
CSMI_SAS_LOCATE_ENCLOSURE_NAME_VALID	csmisas.h	931;"	d
CSMI_SAS_LOCATE_FORCE_OFF	csmisas.h	922;"	d
CSMI_SAS_LOCATE_FORCE_ON	csmisas.h	923;"	d
CSMI_SAS_LOCATE_LOCATION_STATE_VALID	csmisas.h	934;"	d
CSMI_SAS_LOCATE_SAS_ADDRESS_VALID	csmisas.h	928;"	d
CSMI_SAS_LOCATE_SAS_LUN_VALID	csmisas.h	929;"	d
CSMI_SAS_LOCATE_UNKNOWN	csmisas.h	921;"	d
CSMI_SAS_LOCATION_IDENTIFIER	csmisas.h	/^} CSMI_SAS_LOCATION_IDENTIFIER,$/;"	t	typeref:struct:_CSMI_SAS_LOCATION_IDENTIFIER
CSMI_SAS_NOT_AN_END_DEVICE	csmisas.h	707;"	d
CSMI_SAS_NO_DEVICE_ADDRESS	csmisas.h	709;"	d
CSMI_SAS_NO_DEVICE_ATTACHED	csmisas.h	725;"	d
CSMI_SAS_NO_SATA_DEVICE	csmisas.h	704;"	d
CSMI_SAS_NO_SATA_SIGNATURE	csmisas.h	705;"	d
CSMI_SAS_NO_SCSI_ADDRESS	csmisas.h	708;"	d
CSMI_SAS_OFFLINE_REASON_BACKSIDE_BUS_DEGRADED	csmisas.h	435;"	d
CSMI_SAS_OFFLINE_REASON_BACKSIDE_BUS_FAILURE	csmisas.h	436;"	d
CSMI_SAS_OFFLINE_REASON_INITIALIZING	csmisas.h	434;"	d
CSMI_SAS_OFFLINE_REASON_NO_REASON	csmisas.h	433;"	d
CSMI_SAS_OPEN_ACCEPT	csmisas.h	811;"	d
CSMI_SAS_OPEN_REJECT_BAD_DESTINATION	csmisas.h	812;"	d
CSMI_SAS_OPEN_REJECT_NO_DESTINATION	csmisas.h	814;"	d
CSMI_SAS_OPEN_REJECT_PATHWAY_BLOCKED	csmisas.h	815;"	d
CSMI_SAS_OPEN_REJECT_PROTOCOL_NOT_SUPPORTED	csmisas.h	816;"	d
CSMI_SAS_OPEN_REJECT_RATE_NOT_SUPPORTED	csmisas.h	813;"	d
CSMI_SAS_OPEN_REJECT_RESERVE_ABANDON	csmisas.h	817;"	d
CSMI_SAS_OPEN_REJECT_RESERVE_CONTINUE	csmisas.h	818;"	d
CSMI_SAS_OPEN_REJECT_RESERVE_INITIALIZE	csmisas.h	819;"	d
CSMI_SAS_OPEN_REJECT_RESERVE_STOP	csmisas.h	820;"	d
CSMI_SAS_OPEN_REJECT_RETRY	csmisas.h	821;"	d
CSMI_SAS_OPEN_REJECT_STP_RESOURCES_BUSY	csmisas.h	822;"	d
CSMI_SAS_OPEN_REJECT_WRONG_DESTINATION	csmisas.h	823;"	d
CSMI_SAS_PCI_BUS_ADDRESS	csmisas.h	/^} CSMI_SAS_PCI_BUS_ADDRESS,$/;"	t	typeref:struct:_CSMI_SAS_PCI_BUS_ADDRESS
CSMI_SAS_PC_GET_PHY_SETTINGS	csmisas.h	956;"	d
CSMI_SAS_PC_HARD_RESET	csmisas.h	953;"	d
CSMI_SAS_PC_LINK_RESET	csmisas.h	952;"	d
CSMI_SAS_PC_NOP	csmisas.h	951;"	d
CSMI_SAS_PC_PHY_DISABLE	csmisas.h	954;"	d
CSMI_SAS_PHY_ACTIVATE_CONTROL	csmisas.h	959;"	d
CSMI_SAS_PHY_ALIGN	csmisas.h	990;"	d
CSMI_SAS_PHY_AUTO_COMWAKE	csmisas.h	961;"	d
CSMI_SAS_PHY_CANNOT_BE_SELECTED	csmisas.h	698;"	d
CSMI_SAS_PHY_CJPAT	csmisas.h	989;"	d
CSMI_SAS_PHY_CONTROL	csmisas.h	/^} CSMI_SAS_PHY_CONTROL,$/;"	t	typeref:struct:_CSMI_SAS_PHY_CONTROL
CSMI_SAS_PHY_CONTROL_BUFFER	csmisas.h	/^} CSMI_SAS_PHY_CONTROL_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_PHY_CONTROL_BUFFER
CSMI_SAS_PHY_CONTROL_CHARACTER	csmisas.h	996;"	d
CSMI_SAS_PHY_DISABLED	csmisas.h	742;"	d
CSMI_SAS_PHY_DISABLE_ALIGN	csmisas.h	981;"	d
CSMI_SAS_PHY_DISABLE_SCRAMBLING	csmisas.h	980;"	d
CSMI_SAS_PHY_DISABLE_SSC	csmisas.h	982;"	d
CSMI_SAS_PHY_DOES_NOT_EXIST	csmisas.h	696;"	d
CSMI_SAS_PHY_DOES_NOT_MATCH_PORT	csmisas.h	697;"	d
CSMI_SAS_PHY_ENTITY	csmisas.h	/^} CSMI_SAS_PHY_ENTITY,$/;"	t	typeref:struct:_CSMI_SAS_PHY_ENTITY
CSMI_SAS_PHY_EQUALIZATION_DISABLED	csmisas.h	975;"	d
CSMI_SAS_PHY_FIXED_PATTERN	csmisas.h	984;"	d
CSMI_SAS_PHY_INFO	csmisas.h	/^} CSMI_SAS_PHY_INFO,$/;"	t	typeref:struct:_CSMI_SAS_PHY_INFO
CSMI_SAS_PHY_INFO_BUFFER	csmisas.h	/^} CSMI_SAS_PHY_INFO_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_PHY_INFO_BUFFER
CSMI_SAS_PHY_INFO_CHANGED	csmisas.h	692;"	d
CSMI_SAS_PHY_INFO_NOT_CHANGEABLE	csmisas.h	693;"	d
CSMI_SAS_PHY_NEGATIVE_DISPARITY	csmisas.h	995;"	d
CSMI_SAS_PHY_POSITIVE_DISPARITY	csmisas.h	994;"	d
CSMI_SAS_PHY_PREEMPHASIS_DISABLED	csmisas.h	971;"	d
CSMI_SAS_PHY_UNUSED	csmisas.h	724;"	d
CSMI_SAS_PHY_UPDATE_SPINUP_RATE	csmisas.h	960;"	d
CSMI_SAS_PHY_USER_PATTERN	csmisas.h	985;"	d
CSMI_SAS_PHY_VIRTUAL_SMP	csmisas.h	761;"	d
CSMI_SAS_PORT_CANNOT_BE_SELECTED	csmisas.h	701;"	d
CSMI_SAS_PORT_DOES_NOT_EXIST	csmisas.h	700;"	d
CSMI_SAS_PRIORITY_AUTO	csmisas.h	595;"	d
CSMI_SAS_PRIORITY_HIGH	csmisas.h	599;"	d
CSMI_SAS_PRIORITY_LOW	csmisas.h	597;"	d
CSMI_SAS_PRIORITY_MEDIUM	csmisas.h	598;"	d
CSMI_SAS_PRIORITY_OFF	csmisas.h	596;"	d
CSMI_SAS_PRIORITY_UNCHANGED	csmisas.h	594;"	d
CSMI_SAS_PRIORITY_UNKNOWN	csmisas.h	593;"	d
CSMI_SAS_PROGRAMMED_LINK_RATE_1_5_GBPS	csmisas.h	768;"	d
CSMI_SAS_PROGRAMMED_LINK_RATE_3_0_GBPS	csmisas.h	769;"	d
CSMI_SAS_PROGRAMMED_LINK_RATE_UNCHANGED	csmisas.h	767;"	d
CSMI_SAS_PROTOCOL_SATA	csmisas.h	733;"	d
CSMI_SAS_PROTOCOL_SMP	csmisas.h	734;"	d
CSMI_SAS_PROTOCOL_SSP	csmisas.h	736;"	d
CSMI_SAS_PROTOCOL_STP	csmisas.h	735;"	d
CSMI_SAS_RAID_CACHE_RATIO_AUTO	csmisas.h	611;"	d
CSMI_SAS_RAID_CACHE_RATIO_DISABLE	csmisas.h	616;"	d
CSMI_SAS_RAID_CACHE_RATIO_ENABLE	csmisas.h	617;"	d
CSMI_SAS_RAID_CACHE_RATIO_END	csmisas.h	612;"	d
CSMI_SAS_RAID_CACHE_RATIO_FIXED	csmisas.h	610;"	d
CSMI_SAS_RAID_CACHE_RATIO_RANGE	csmisas.h	609;"	d
CSMI_SAS_RAID_CLEAR_CONFIGURATION_SIGNATURE	csmisas.h	621;"	d
CSMI_SAS_RAID_CONFIG	csmisas.h	/^} CSMI_SAS_RAID_CONFIG,$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONFIG
CSMI_SAS_RAID_CONFIG_BUFFER	csmisas.h	/^} CSMI_SAS_RAID_CONFIG_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONFIG_BUFFER
CSMI_SAS_RAID_CONTROL	csmisas.h	/^} CSMI_SAS_RAID_CONTROL,$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONTROL
CSMI_SAS_RAID_CONTROL_BUFFER	csmisas.h	/^} CSMI_SAS_RAID_CONTROL_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONTROL_BUFFER
CSMI_SAS_RAID_DATA_ADDITIONAL_DATA	csmisas.h	539;"	d
CSMI_SAS_RAID_DATA_DEVICE_ID	csmisas.h	538;"	d
CSMI_SAS_RAID_DATA_DRIVES	csmisas.h	537;"	d
CSMI_SAS_RAID_DEVICE_ID	csmisas.h	/^} CSMI_SAS_RAID_DEVICE_ID,$/;"	t	typeref:struct:_CSMI_SAS_RAID_DEVICE_ID
CSMI_SAS_RAID_DRIVES	csmisas.h	/^} CSMI_SAS_RAID_DRIVES,$/;"	t	typeref:struct:_CSMI_SAS_RAID_DRIVES
CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA	csmisas.h	/^} CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA,$/;"	t	typeref:struct:_CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA
CSMI_SAS_RAID_DRIVE_COUNT_SUPRESSED	csmisas.h	533;"	d
CSMI_SAS_RAID_DRIVE_COUNT_TOO_BIG	csmisas.h	532;"	d
CSMI_SAS_RAID_ELEMENT	csmisas.h	/^} CSMI_SAS_RAID_ELEMENT,$/;"	t	typeref:struct:_CSMI_SAS_RAID_ELEMENT
CSMI_SAS_RAID_ELEMENT_BUFFER	csmisas.h	/^} CSMI_SAS_RAID_ELEMENT_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_RAID_ELEMENT_BUFFER
CSMI_SAS_RAID_ELEMENT_TYPE_DRIVE	csmisas.h	651;"	d
CSMI_SAS_RAID_ELEMENT_TYPE_DRIVE_RAID_SET	csmisas.h	653;"	d
CSMI_SAS_RAID_ELEMENT_TYPE_EXTENT_DRIVE	csmisas.h	654;"	d
CSMI_SAS_RAID_ELEMENT_TYPE_MODULE	csmisas.h	652;"	d
CSMI_SAS_RAID_EXTENT_ALLOCATED	csmisas.h	660;"	d
CSMI_SAS_RAID_EXTENT_METADATA	csmisas.h	659;"	d
CSMI_SAS_RAID_EXTENT_RESERVED	csmisas.h	658;"	d
CSMI_SAS_RAID_EXTENT_UNALLOCATED	csmisas.h	661;"	d
CSMI_SAS_RAID_FEATURES	csmisas.h	/^} CSMI_SAS_RAID_FEATURES,$/;"	t	typeref:struct:_CSMI_SAS_RAID_FEATURES
CSMI_SAS_RAID_FEATURES_BUFFER	csmisas.h	/^} CSMI_SAS_RAID_FEATURES_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_RAID_FEATURES_BUFFER
CSMI_SAS_RAID_FEATURE_LUN_RENUMBER	csmisas.h	587;"	d
CSMI_SAS_RAID_FEATURE_MERGE_MIRROR	csmisas.h	586;"	d
CSMI_SAS_RAID_FEATURE_REBUILD	csmisas.h	584;"	d
CSMI_SAS_RAID_FEATURE_SPARES_SHARED	csmisas.h	589;"	d
CSMI_SAS_RAID_FEATURE_SPLIT_MIRROR	csmisas.h	585;"	d
CSMI_SAS_RAID_FEATURE_SURFACE_SCAN	csmisas.h	588;"	d
CSMI_SAS_RAID_FEATURE_TRANSFORMATION	csmisas.h	583;"	d
CSMI_SAS_RAID_INFO	csmisas.h	/^} CSMI_SAS_RAID_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_INFO
CSMI_SAS_RAID_INFO_BUFFER	csmisas.h	/^} CSMI_SAS_RAID_INFO_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_RAID_INFO_BUFFER
CSMI_SAS_RAID_MODULE_INFO	csmisas.h	/^} CSMI_SAS_RAID_MODULE_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_MODULE_INFO
CSMI_SAS_RAID_RULE_AVAILABLE_MEMORY	csmisas.h	603;"	d
CSMI_SAS_RAID_RULE_OVERLAPPED_EXTENTS	csmisas.h	604;"	d
CSMI_SAS_RAID_SET_ADDITIONAL_DATA	csmisas.h	/^} CSMI_SAS_RAID_SET_ADDITIONAL_DATA,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
CSMI_SAS_RAID_SET_BUFFER_TOO_SMALL	csmisas.h	489;"	d
CSMI_SAS_RAID_SET_CACHE	csmisas.h	670;"	d
CSMI_SAS_RAID_SET_CACHE_CORRUPT	csmisas.h	579;"	d
CSMI_SAS_RAID_SET_CACHE_DISABLED	csmisas.h	578;"	d
CSMI_SAS_RAID_SET_CACHE_ENABLED	csmisas.h	577;"	d
CSMI_SAS_RAID_SET_CACHE_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_CACHE_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_CACHE_INFO
CSMI_SAS_RAID_SET_CACHE_UNCHANGED	csmisas.h	576;"	d
CSMI_SAS_RAID_SET_CACHE_UNKNOWN	csmisas.h	575;"	d
CSMI_SAS_RAID_SET_CREATE	csmisas.h	665;"	d
CSMI_SAS_RAID_SET_CREATE_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_CREATE_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_CREATE_INFO
CSMI_SAS_RAID_SET_DATA_CHANGED	csmisas.h	490;"	d
CSMI_SAS_RAID_SET_DELETE	csmisas.h	668;"	d
CSMI_SAS_RAID_SET_DELETE_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_DELETE_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_DELETE_INFO
CSMI_SAS_RAID_SET_DRIVE_LIST	csmisas.h	/^} CSMI_SAS_RAID_SET_DRIVE_LIST,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_DRIVE_LIST
CSMI_SAS_RAID_SET_LABEL	csmisas.h	666;"	d
CSMI_SAS_RAID_SET_LABEL_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_LABEL_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_LABEL_INFO
CSMI_SAS_RAID_SET_LIST	csmisas.h	/^} CSMI_SAS_RAID_SET_LIST,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_LIST
CSMI_SAS_RAID_SET_MODIFY_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_MODIFY_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_MODIFY_INFO
CSMI_SAS_RAID_SET_ONLINE_STATE	csmisas.h	671;"	d
CSMI_SAS_RAID_SET_ONLINE_STATE_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_ONLINE_STATE_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_ONLINE_STATE_INFO
CSMI_SAS_RAID_SET_OPERATION	csmisas.h	/^} CSMI_SAS_RAID_SET_OPERATION,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_OPERATION
CSMI_SAS_RAID_SET_OPERATION_BUFFER	csmisas.h	/^} CSMI_SAS_RAID_SET_OPERATION_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_OPERATION_BUFFER
CSMI_SAS_RAID_SET_OUT_OF_RANGE	csmisas.h	488;"	d
CSMI_SAS_RAID_SET_SPARE	csmisas.h	672;"	d
CSMI_SAS_RAID_SET_SPARE_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_SPARE_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_SPARE_INFO
CSMI_SAS_RAID_SET_STATE_OFFLINE	csmisas.h	685;"	d
CSMI_SAS_RAID_SET_STATE_ONLINE	csmisas.h	684;"	d
CSMI_SAS_RAID_SET_STATE_UNKNOWN	csmisas.h	683;"	d
CSMI_SAS_RAID_SET_STATUS_DEGRADED	csmisas.h	522;"	d
CSMI_SAS_RAID_SET_STATUS_FAILED	csmisas.h	524;"	d
CSMI_SAS_RAID_SET_STATUS_OFFLINE	csmisas.h	525;"	d
CSMI_SAS_RAID_SET_STATUS_OK	csmisas.h	521;"	d
CSMI_SAS_RAID_SET_STATUS_QUEUED_FOR_REBUILD	csmisas.h	527;"	d
CSMI_SAS_RAID_SET_STATUS_QUEUED_FOR_TRANSFORMATION	csmisas.h	528;"	d
CSMI_SAS_RAID_SET_STATUS_REBUILDING	csmisas.h	523;"	d
CSMI_SAS_RAID_SET_STATUS_TRANSFORMING	csmisas.h	526;"	d
CSMI_SAS_RAID_SET_TRANSFORM	csmisas.h	667;"	d
CSMI_SAS_RAID_SET_TRANSFORM_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_TRANSFORM_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
CSMI_SAS_RAID_SET_TRANSFORM_LUN_RENUMBER	csmisas.h	678;"	d
CSMI_SAS_RAID_SET_TRANSFORM_MERGE_RAID_0	csmisas.h	677;"	d
CSMI_SAS_RAID_SET_TRANSFORM_RAID_SET	csmisas.h	679;"	d
CSMI_SAS_RAID_SET_TRANSFORM_SPLIT_MIRROR	csmisas.h	676;"	d
CSMI_SAS_RAID_SET_WRITE_PROTECT	csmisas.h	669;"	d
CSMI_SAS_RAID_SET_WRITE_PROTECT_DISABLED	csmisas.h	571;"	d
CSMI_SAS_RAID_SET_WRITE_PROTECT_ENABLED	csmisas.h	570;"	d
CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO	csmisas.h	/^} CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO,$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO
CSMI_SAS_RAID_SET_WRITE_PROTECT_UNCHANGED	csmisas.h	569;"	d
CSMI_SAS_RAID_SET_WRITE_PROTECT_UNKNOWN	csmisas.h	568;"	d
CSMI_SAS_RAID_TYPE_0	csmisas.h	505;"	d
CSMI_SAS_RAID_TYPE_1	csmisas.h	506;"	d
CSMI_SAS_RAID_TYPE_10	csmisas.h	507;"	d
CSMI_SAS_RAID_TYPE_15	csmisas.h	509;"	d
CSMI_SAS_RAID_TYPE_1E	csmisas.h	513;"	d
CSMI_SAS_RAID_TYPE_5	csmisas.h	508;"	d
CSMI_SAS_RAID_TYPE_50	csmisas.h	511;"	d
CSMI_SAS_RAID_TYPE_6	csmisas.h	510;"	d
CSMI_SAS_RAID_TYPE_DESCRIPTION	csmisas.h	/^} CSMI_SAS_RAID_TYPE_DESCRIPTION,$/;"	t	typeref:struct:_CSMI_SAS_RAID_TYPE_DESCRIPTION
CSMI_SAS_RAID_TYPE_END	csmisas.h	517;"	d
CSMI_SAS_RAID_TYPE_NONE	csmisas.h	504;"	d
CSMI_SAS_RAID_TYPE_OTHER	csmisas.h	514;"	d
CSMI_SAS_RAID_TYPE_VOLUME	csmisas.h	512;"	d
CSMI_SAS_SAS	csmisas.h	967;"	d
CSMI_SAS_SATA	csmisas.h	966;"	d
CSMI_SAS_SATA_PORT_SELECTOR	csmisas.h	745;"	d
CSMI_SAS_SATA_SIGNATURE	csmisas.h	/^} CSMI_SAS_SATA_SIGNATURE,$/;"	t	typeref:struct:_CSMI_SAS_SATA_SIGNATURE
CSMI_SAS_SATA_SIGNATURE_BUFFER	csmisas.h	/^} CSMI_SAS_SATA_SIGNATURE_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_SATA_SIGNATURE_BUFFER
CSMI_SAS_SATA_SPINUP_HOLD	csmisas.h	744;"	d
CSMI_SAS_SCSI_EMULATION	csmisas.h	706;"	d
CSMI_SAS_SELECT_PHY_OR_PORT	csmisas.h	699;"	d
CSMI_SAS_SET_PHY_INFO	csmisas.h	/^} CSMI_SAS_SET_PHY_INFO,$/;"	t	typeref:struct:_CSMI_SAS_SET_PHY_INFO
CSMI_SAS_SET_PHY_INFO_BUFFER	csmisas.h	/^} CSMI_SAS_SET_PHY_INFO_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_SET_PHY_INFO_BUFFER
CSMI_SAS_SIGNAL_CLASS_DIRECT	csmisas.h	781;"	d
CSMI_SAS_SIGNAL_CLASS_ENCLOSURE	csmisas.h	783;"	d
CSMI_SAS_SIGNAL_CLASS_SERVER	csmisas.h	782;"	d
CSMI_SAS_SIGNAL_CLASS_UNKNOWN	csmisas.h	780;"	d
CSMI_SAS_SIGNATURE	csmisas.h	714;"	d
CSMI_SAS_SMP_PASSTHRU	csmisas.h	/^} CSMI_SAS_SMP_PASSTHRU,$/;"	t	typeref:struct:_CSMI_SAS_SMP_PASSTHRU
CSMI_SAS_SMP_PASSTHRU_BUFFER	csmisas.h	/^} CSMI_SAS_SMP_PASSTHRU_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_SMP_PASSTHRU_BUFFER
CSMI_SAS_SMP_REQUEST	csmisas.h	/^} CSMI_SAS_SMP_REQUEST,$/;"	t	typeref:struct:_CSMI_SAS_SMP_REQUEST
CSMI_SAS_SMP_RESPONSE	csmisas.h	/^} CSMI_SAS_SMP_RESPONSE,$/;"	t	typeref:struct:_CSMI_SAS_SMP_RESPONSE
CSMI_SAS_SSP_ABORT_TASK	csmisas.h	877;"	d
CSMI_SAS_SSP_ABORT_TASK_SET	csmisas.h	878;"	d
CSMI_SAS_SSP_CLEAR_ACA	csmisas.h	881;"	d
CSMI_SAS_SSP_CLEAR_TASK_SET	csmisas.h	879;"	d
CSMI_SAS_SSP_DEMAND	csmisas.h	889;"	d
CSMI_SAS_SSP_EXCEEDED	csmisas.h	888;"	d
CSMI_SAS_SSP_LOGICAL_UNIT_RESET	csmisas.h	880;"	d
CSMI_SAS_SSP_NO_DATA_PRESENT	csmisas.h	850;"	d
CSMI_SAS_SSP_PASSTHRU	csmisas.h	/^} CSMI_SAS_SSP_PASSTHRU,$/;"	t	typeref:struct:_CSMI_SAS_SSP_PASSTHRU
CSMI_SAS_SSP_PASSTHRU_BUFFER	csmisas.h	/^} CSMI_SAS_SSP_PASSTHRU_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_SSP_PASSTHRU_BUFFER
CSMI_SAS_SSP_PASSTHRU_STATUS	csmisas.h	/^} CSMI_SAS_SSP_PASSTHRU_STATUS,$/;"	t	typeref:struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
CSMI_SAS_SSP_QUERY_TASK	csmisas.h	882;"	d
CSMI_SAS_SSP_READ	csmisas.h	838;"	d
CSMI_SAS_SSP_RESPONSE_DATA_PRESENT	csmisas.h	851;"	d
CSMI_SAS_SSP_SENSE_DATA_PRESENT	csmisas.h	852;"	d
CSMI_SAS_SSP_STATUS_COMPLETED	csmisas.h	830;"	d
CSMI_SAS_SSP_STATUS_FATAL_ERROR	csmisas.h	831;"	d
CSMI_SAS_SSP_STATUS_NO_TAG	csmisas.h	833;"	d
CSMI_SAS_SSP_STATUS_RETRY	csmisas.h	832;"	d
CSMI_SAS_SSP_STATUS_UNKNOWN	csmisas.h	828;"	d
CSMI_SAS_SSP_STATUS_WAITING	csmisas.h	829;"	d
CSMI_SAS_SSP_TASK_ATTRIBUTE_ACA	csmisas.h	845;"	d
CSMI_SAS_SSP_TASK_ATTRIBUTE_HEAD_OF_QUEUE	csmisas.h	843;"	d
CSMI_SAS_SSP_TASK_ATTRIBUTE_ORDERED	csmisas.h	844;"	d
CSMI_SAS_SSP_TASK_ATTRIBUTE_SIMPLE	csmisas.h	842;"	d
CSMI_SAS_SSP_TASK_IU	csmisas.h	/^} CSMI_SAS_SSP_TASK_IU,$/;"	t	typeref:struct:_CSMI_SAS_SSP_TASK_IU
CSMI_SAS_SSP_TASK_IU_BUFFER	csmisas.h	/^} CSMI_SAS_SSP_TASK_IU_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_SSP_TASK_IU_BUFFER
CSMI_SAS_SSP_TEST	csmisas.h	887;"	d
CSMI_SAS_SSP_TRIGGER	csmisas.h	890;"	d
CSMI_SAS_SSP_UNSPECIFIED	csmisas.h	840;"	d
CSMI_SAS_SSP_WRITE	csmisas.h	839;"	d
CSMI_SAS_STATUS_BAD_CNTL_CODE	csmisas.h	396;"	d
CSMI_SAS_STATUS_FAILED	csmisas.h	395;"	d
CSMI_SAS_STATUS_INVALID_PARAMETER	csmisas.h	397;"	d
CSMI_SAS_STATUS_SUCCESS	csmisas.h	394;"	d
CSMI_SAS_STATUS_WRITE_ATTEMPTED	csmisas.h	398;"	d
CSMI_SAS_STP_DMA	csmisas.h	861;"	d
CSMI_SAS_STP_DMA_QUEUED	csmisas.h	863;"	d
CSMI_SAS_STP_EXECUTE_DIAG	csmisas.h	864;"	d
CSMI_SAS_STP_PACKET	csmisas.h	862;"	d
CSMI_SAS_STP_PASSTHRU	csmisas.h	/^} CSMI_SAS_STP_PASSTHRU,$/;"	t	typeref:struct:_CSMI_SAS_STP_PASSTHRU
CSMI_SAS_STP_PASSTHRU_BUFFER	csmisas.h	/^} CSMI_SAS_STP_PASSTHRU_BUFFER,$/;"	t	typeref:struct:_CSMI_SAS_STP_PASSTHRU_BUFFER
CSMI_SAS_STP_PASSTHRU_STATUS	csmisas.h	/^} CSMI_SAS_STP_PASSTHRU_STATUS,$/;"	t	typeref:struct:_CSMI_SAS_STP_PASSTHRU_STATUS
CSMI_SAS_STP_PIO	csmisas.h	860;"	d
CSMI_SAS_STP_READ	csmisas.h	857;"	d
CSMI_SAS_STP_RESET_DEVICE	csmisas.h	865;"	d
CSMI_SAS_STP_UNSPECIFIED	csmisas.h	859;"	d
CSMI_SAS_STP_WRITE	csmisas.h	858;"	d
CSMI_SAS_SUPPRESS_RESULT	csmisas.h	872;"	d
CSMI_SAS_TASK_IU	csmisas.h	870;"	d
CSMI_SAS_TIMEOUT	csmisas.h	719;"	d
CSMI_SAS_UNDEFINED	csmisas.h	965;"	d
CSMI_SAS_USE_PORT_IDENTIFIER	csmisas.h	794;"	d
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTL_CODE	aacraid.h	44;"	d
CXX	Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2 -Wall -W$/;"	m
CXXLD	Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
Cache	csmisas.h	/^       CSMI_SAS_RAID_SET_CACHE_INFO Cache;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
CanNotRegister	smartd.cpp	/^static void CanNotRegister(const char *name, const char *type, int line, bool scandirective)$/;"	f	file:
Cdb	aacraid.h	/^    UCHAR Cdb[16];                  \/\/ offset 30$/;"	m	struct:_SCSI_REQUEST_BLOCK
CdbLength	aacraid.h	/^    UCHAR CdbLength;                \/\/ offset a$/;"	m	struct:_SCSI_REQUEST_BLOCK
ChangerTapeAlertsMessageTable	scsicmds.cpp	/^static const char * ChangerTapeAlertsMessageTable[]= {$/;"	v	file:
CheckDevicesOnce	smartd.cpp	/^static void CheckDevicesOnce(const dev_config_vector & configs, dev_state_vector & states,$/;"	f	file:
CheckSelfTestLogs	smartd.cpp	/^static void CheckSelfTestLogs(const dev_config & cfg, dev_state & state, int newi)$/;"	f	file:
CheckTemperature	smartd.cpp	/^static void CheckTemperature(const dev_config & cfg, dev_state & state, unsigned char currtemp, unsigned char triptemp)$/;"	f	file:
CloseDevice	smartd.cpp	/^static int CloseDevice(smart_device * device, const char * name)$/;"	f	file:
CommandQueueing	os_win32.cpp	/^  BOOLEAN CommandQueueing;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
CommandStatus	cissio_freebsd.h	/^    u_int16_t		CommandStatus;$/;"	m	struct:__anon110
Common_Info	cissio_freebsd.h	/^    } __packed Common_Info;$/;"	m	union:__anon107	typeref:struct:__anon107::__anon108
Configuration	csmisas.h	/^   CSMI_SAS_CNTLR_CONFIG Configuration;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG_BUFFER
Configuration	csmisas.h	/^   CSMI_SAS_RAID_CONFIG Configuration;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG_BUFFER
Control	csmisas.h	/^   CSMI_SAS_PHY_CONTROL Control[1];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
ControlCode	dev_areca.h	/^  unsigned int ControlCode;$/;"	m	struct:_ARCMSR_IO_HDR
CplEntry	os_win32.cpp	/^  ULONG CplEntry[4]; \/\/ Completion DW[0...3]$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
Create	csmisas.h	/^       CSMI_SAS_RAID_SET_CREATE_INFO Create;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
CurrentTaskFile	os_win32.cpp	/^  UCHAR CurrentTaskFile[8];$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
DAEMON_WIN32_H	os_win32/daemon_win32.h	19;"	d
DAEMON_WIN32_H_CVSID	os_win32/daemon_win32.h	21;"	d
DATA	Makefile	/^DATA = $(docs_DATA) $(drivedb_DATA) $(examples_DATA) $(initd_DATA) \\$/;"	m
DATA_COMPRESSION_PAGE	scsicmds.h	226;"	d
DATEANDEPOCHLEN	utility.h	80;"	d
DBENTRY_ATA	knowndrives.cpp	/^  DBENTRY_ATA,$/;"	e	enum:dbentry_type	file:
DBENTRY_ATA_DEFAULT	knowndrives.cpp	/^  DBENTRY_ATA_DEFAULT,$/;"	e	enum:dbentry_type	file:
DBENTRY_USB	knowndrives.cpp	/^  DBENTRY_USB$/;"	e	enum:dbentry_type	file:
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEF_SAT_ATA_PASSTHRU_SIZE	scsiata.cpp	98;"	d	file:
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEVICE_STRING_LENGTH	os_linux.cpp	1499;"	d	file:
DEV_ARECA_H	dev_areca.h	19;"	d
DEV_ARECA_H_CVSID	dev_areca.h	21;"	d
DEV_ATA	os_win32.cpp	/^enum win_dev_type { DEV_UNKNOWN = 0, DEV_ATA, DEV_SCSI, DEV_SAT, DEV_USB };$/;"	e	enum:os_win32::win_dev_type	file:
DEV_ATA_CMD_SET_H	dev_ata_cmd_set.h	19;"	d
DEV_ATA_CMD_SET_H_CVSID	dev_ata_cmd_set.h	21;"	d
DEV_INTERFACE_H	dev_interface.h	19;"	d
DEV_INTERFACE_H_CVSID	dev_interface.h	21;"	d
DEV_SAT	os_win32.cpp	/^enum win_dev_type { DEV_UNKNOWN = 0, DEV_ATA, DEV_SCSI, DEV_SAT, DEV_USB };$/;"	e	enum:os_win32::win_dev_type	file:
DEV_SCSI	os_win32.cpp	/^enum win_dev_type { DEV_UNKNOWN = 0, DEV_ATA, DEV_SCSI, DEV_SAT, DEV_USB };$/;"	e	enum:os_win32::win_dev_type	file:
DEV_TUNNELLED_H	dev_tunnelled.h	19;"	d
DEV_TUNNELLED_H_CVSID	dev_tunnelled.h	21;"	d
DEV_UNKNOWN	os_win32.cpp	/^enum win_dev_type { DEV_UNKNOWN = 0, DEV_ATA, DEV_SCSI, DEV_SAT, DEV_USB };$/;"	e	enum:os_win32::win_dev_type	file:
DEV_USB	os_win32.cpp	/^enum win_dev_type { DEV_UNKNOWN = 0, DEV_ATA, DEV_SCSI, DEV_SAT, DEV_USB };$/;"	e	enum:os_win32::win_dev_type	file:
DEXCPT_DISABLE	scsicmds.cpp	1291;"	d	file:
DEXCPT_ENABLE	scsicmds.cpp	1289;"	d	file:
DISABLE	atacmds.h	/^  DISABLE,$/;"	e	enum:__anon48
DISCONNECT_RECONNECT_PAGE	scsicmds.h	213;"	d
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__smartctl_SOURCES_DIST) \\$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DRIVEDB_BRANCH	Makefile	/^DRIVEDB_BRANCH = RELEASE_6_5_DRIVEDB$/;"	m
DRIVE_ATTRIBUTE	os_qnxnto.h	/^ }DRIVE_ATTRIBUTE;$/;"	t	typeref:struct:_drive_attribute
DUMMY_CONSTRAINT	regex/regex_internal.h	139;"	d
DXFER_FROM_DEVICE	scsicmds.h	111;"	d
DXFER_NONE	scsicmds.h	110;"	d
DXFER_TO_DEVICE	scsicmds.h	112;"	d
DaemonInit	smartd.cpp	/^static void DaemonInit()$/;"	f	file:
Data	csmisas.h	/^      CSMI_SAS_RAID_SET_ADDITIONAL_DATA Data[1];$/;"	m	union:_CSMI_SAS_RAID_CONFIG::__anon150
Data	csmisas.h	/^   CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA Data;$/;"	m	struct:_CSMI_SAS_DRIVE_INFO
DataBuffer	aacraid.h	/^    PVOID DataBuffer;               \/\/ offset 18$/;"	m	struct:_SCSI_REQUEST_BLOCK
DataBuffer	os_win32.cpp	/^  UCHAR DataBuffer[1];$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
DataBuffer	os_win32.cpp	/^  UCHAR DataBuffer[1];$/;"	m	struct:__anon93	file:
DataBufferLen	os_win32.cpp	/^  ULONG DataBufferLen; \/\/ sizeof(DataBuffer) if Data In$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
DataBufferOffset	os_win32.cpp	/^  ULONG_PTR DataBufferOffset;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
DataBufferSize	os_win32.cpp	/^  ULONG DataBufferSize;$/;"	m	struct:__anon93	file:
DataTransferLength	aacraid.h	/^    ULONG DataTransferLength;       \/\/ offset 10$/;"	m	struct:_SCSI_REQUEST_BLOCK
DataTransferLength	os_win32.cpp	/^  ULONG DataTransferLength;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
Delete	csmisas.h	/^       CSMI_SAS_RAID_SET_DELETE_INFO Delete;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
Dev	cissio_freebsd.h	/^	u_int8_t	Dev:5;$/;"	m	struct:__anon98::__anon101
Dev	cissio_freebsd.h	/^	u_int8_t	Dev;$/;"	m	struct:__anon98::__anon99
DevLSB	cissio_freebsd.h	/^	u_int8_t	DevLSB;$/;"	m	struct:__anon98::__anon100
DevMSB	cissio_freebsd.h	/^	u_int8_t	DevMSB:6;$/;"	m	struct:__anon98::__anon100
Device	csmisas.h	/^   CSMI_SAS_RAID_DRIVES Device;$/;"	m	struct:_CSMI_SAS_DRIVE_INFO
DeviceId	csmisas.h	/^      CSMI_SAS_RAID_DEVICE_ID DeviceId[1];$/;"	m	union:_CSMI_SAS_RAID_CONFIG::__anon150
DeviceType	os_win32.cpp	/^  UCHAR DeviceType;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
DeviceTypeModifier	os_win32.cpp	/^  UCHAR DeviceTypeModifier;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
Direction	cissio_freebsd.h	/^	u_int8_t	Direction:2;$/;"	m	struct:__anon105::__anon106
Direction	csmisas.h	/^    __u16 Direction;$/;"	m	struct:_IOCTL_HEADER
Direction	os_win32.cpp	/^  ULONG Direction; \/\/ 0=No, 1=Out, 2=In, 3=I\/O$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
Directives	smartd.cpp	/^static void Directives()$/;"	f	file:
DoATASelfTest	smartd.cpp	/^static int DoATASelfTest(const dev_config & cfg, dev_state & state, ata_device * device, char testtype)$/;"	f	file:
DoSCSISelfTest	smartd.cpp	/^static int DoSCSISelfTest(const dev_config & cfg, dev_state & state, scsi_device * device, char testtype)$/;"	f	file:
Drive	csmisas.h	/^       CSMI_SAS_DRIVE_INFO Drive;$/;"	m	union:_CSMI_SAS_RAID_ELEMENT::__anon153
DriveList	csmisas.h	/^       CSMI_SAS_RAID_SET_DRIVE_LIST DriveList[1];$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon159
DriverVer_type	cissio_freebsd.h	/^typedef u_int32_t	DriverVer_type;$/;"	t
Drives	csmisas.h	/^      CSMI_SAS_RAID_DRIVES Drives[1];$/;"	m	union:_CSMI_SAS_RAID_CONFIG::__anon150
EBUFLEN	smartd.cpp	942;"	d	file:
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EIDE_IDENTIFY	os_qnxnto.h	/^typedef struct _eide_identify   EIDE_IDENTIFY;$/;"	t	typeref:struct:_eide_identify
ELIDE_CODE	getopt/getopt.c	56;"	d	file:
ELIDE_CODE	getopt/getopt1.c	53;"	d	file:
ENABLE	atacmds.h	/^  ENABLE,$/;"	e	enum:__anon48
ENCLOSURE_SERVICES_MANAGEMENT_PAGE	scsicmds.h	227;"	d
END_OF_RE	regex/regex_internal.h	/^  END_OF_RE,$/;"	e	enum:__anon117
END_OF_RE_TOKEN_T	regex/regex_internal.h	/^  END_OF_RE_TOKEN_T$/;"	e	enum:__anon117
ENOTSUP	os_linux.cpp	100;"	d	file:
ENVIRONMENT32	aacraid.h	20;"	d
ENVIRONMENT32	aacraid.h	29;"	d
ENVIRONMENT64	aacraid.h	18;"	d
ENVIRONMENT64	aacraid.h	27;"	d
EOF	os_win32/smartd_warning.cmd	/^:EOF$/;"	l
EQUIV_CLASS	regex/regex_internal.h	/^  EQUIV_CLASS,$/;"	e	enum:__anon127
ERASE_OPT_LONG	os_qnxnto.h	791;"	d
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EVT_DETACHED	os_win32/daemon_win32.cpp	52;"	d	file:
EVT_NAME_LEN	os_win32/daemon_win32.cpp	48;"	d	file:
EVT_RESTART	os_win32/daemon_win32.cpp	53;"	d	file:
EVT_RUNNING	os_win32/daemon_win32.cpp	51;"	d	file:
EWASC_DISABLE	scsicmds.cpp	1292;"	d	file:
EWASC_ENABLE	scsicmds.cpp	1290;"	d	file:
EXCHANGE_CMD_LOEJ	os_qnxnto.h	617;"	d
EXCHANGE_CMD_START	os_qnxnto.h	616;"	d
EXCHANGE_OPT_IMMED	os_qnxnto.h	612;"	d
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXIT	utility.h	100;"	d
EXIT_BADCMD	smartd.cpp	109;"	d	file:
EXIT_BADCODE	smartd.cpp	117;"	d	file:
EXIT_BADCONF	smartd.cpp	110;"	d	file:
EXIT_BADDEV	smartd.cpp	119;"	d	file:
EXIT_NOCONF	smartd.cpp	113;"	d	file:
EXIT_NODEV	smartd.cpp	120;"	d	file:
EXIT_NOMEM	smartd.cpp	116;"	d	file:
EXIT_PID	smartd.cpp	112;"	d	file:
EXIT_READCONF	smartd.cpp	114;"	d	file:
EXIT_SIGNAL	smartd.cpp	122;"	d	file:
EXIT_STARTUP	smartd.cpp	111;"	d	file:
EXTEND_CAPTIVE_SELF_TEST	atacmds.h	118;"	d
EXTEND_SELF_TEST	atacmds.h	113;"	d
EXTRA_DIST	Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_smartctl_SOURCES	Makefile	/^EXTRA_smartctl_SOURCES = os_darwin.cpp os_darwin.h os_linux.cpp \\$/;"	m
EXTRA_smartd_SOURCES	Makefile	/^EXTRA_smartd_SOURCES = os_darwin.cpp os_darwin.h os_linux.cpp \\$/;"	m
Element	csmisas.h	/^   } Element;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT	typeref:union:_CSMI_SAS_RAID_ELEMENT::__anon153
ErrorInfo	cissio_freebsd.h	/^	u_int32_t	ErrorInfo;$/;"	m	struct:__anon107::__anon108
ErrorInfo_struct	cissio_freebsd.h	/^} __packed ErrorInfo_struct;$/;"	t	typeref:struct:__anon110
Extent	csmisas.h	/^       CSMI_SAS_DRIVE_EXTENT_INFO Extent;$/;"	m	union:_CSMI_SAS_RAID_ELEMENT::__anon153
FAILAGE	smartctl.h	56;"	d
FAILATTR	smartctl.h	52;"	d
FAILCMD	smartctl.h	34;"	d
FAILDEV	smartctl.h	37;"	d
FAILERR	smartctl.h	59;"	d
FAILID	smartctl.h	43;"	d
FAILLOG	smartctl.h	62;"	d
FAILPOWER	smartctl.h	40;"	d
FAILSMART	smartctl.h	46;"	d
FAILSTATUS	smartctl.h	49;"	d
FAULT_FAILURE_REPORTING_PAGE	scsicmds.h	232;"	d
FILE_DEVICE_SCSI	os_win32.cpp	201;"	d	file:
FIRMWARE_STRING_LENGTH	knowndrives.cpp	39;"	d	file:
FIXHTML	Makefile	/^FIXHTML = sed -e '1s,^Content-type.*,,' \\$/;"	m
FLEXIBLE_DISK_PAGE	scsicmds.h	216;"	d
FMT_BRIEF	ataprint.h	/^  enum { FMT_BRIEF = 0x01, FMT_HEX_ID = 0x02, FMT_HEX_VAL = 0x04 };$/;"	e	enum:ata_print_options::__anon114
FMT_CERT	os_qnxnto.h	348;"	d
FMT_HEAD	os_qnxnto.h	346;"	d
FMT_HEX_ID	ataprint.h	/^  enum { FMT_BRIEF = 0x01, FMT_HEX_ID = 0x02, FMT_HEX_VAL = 0x04 };$/;"	e	enum:ata_print_options::__anon114
FMT_HEX_VAL	ataprint.h	/^  enum { FMT_BRIEF = 0x01, FMT_HEX_ID = 0x02, FMT_HEX_VAL = 0x04 };$/;"	e	enum:ata_print_options::__anon114
FMT_IMMED	os_qnxnto.h	345;"	d
FMT_RSVD3	os_qnxnto.h	343;"	d
FMT_SECT_SIZE_CD	os_qnxnto.h	344;"	d
FMT_ST	os_qnxnto.h	347;"	d
FM_FMT_DFLT	os_qnxnto.h	878;"	d
FM_FMT_FORMAT_PARTITION	os_qnxnto.h	880;"	d
FM_FMT_PARTITION	os_qnxnto.h	879;"	d
FM_OPT_IMMED	os_qnxnto.h	875;"	d
FM_OPT_VERIFY	os_qnxnto.h	876;"	d
FORMAT_DEVICE_PAGE	scsicmds.h	214;"	d
FORMAT_STATUS_LPAGE	scsicmds.h	187;"	d
FREEBSDVER	os_freebsd.cpp	57;"	d	file:
FREEBSDVER	os_freebsd.cpp	59;"	d	file:
FSACTL_SEND_RAW_SRB	aacraid.h	46;"	d
FSAMPCTL_SCSI_BASE	aacraid.h	37;"	d
FUNCTION_CLEAR_RQBUFFER	dev_areca.h	51;"	d
FUNCTION_CLEAR_RQBUFFER	dev_areca.h	67;"	d
FUNCTION_CLEAR_WQBUFFER	dev_areca.h	52;"	d
FUNCTION_CLEAR_WQBUFFER	dev_areca.h	68;"	d
FUNCTION_READ_RQBUFFER	dev_areca.h	49;"	d
FUNCTION_READ_RQBUFFER	dev_areca.h	65;"	d
FUNCTION_RETURN_CODE_3F	dev_areca.h	53;"	d
FUNCTION_RETURN_CODE_3F	dev_areca.h	69;"	d
FUNCTION_WRITE_WQBUFFER	dev_areca.h	50;"	d
FUNCTION_WRITE_WQBUFFER	dev_areca.h	66;"	d
FU_CMPLIST	os_qnxnto.h	329;"	d
FU_FMTDAT	os_qnxnto.h	328;"	d
FU_RSVD0	os_qnxnto.h	327;"	d
Filler	os_win32.cpp	/^  ULONG           Filler;$/;"	m	struct:os_win32::__anon94	file:
FirmwareVer_type	cissio_freebsd.h	/^typedef char		FirmwareVer_type[4];$/;"	t
FixGlibcTimeZoneBug	utility.cpp	/^void FixGlibcTimeZoneBug(){$/;"	f
Function	aacraid.h	/^    UCHAR Function;                 \/\/ offset 2$/;"	m	struct:_SCSI_REQUEST_BLOCK
GBUF_SIZE	scsiprint.cpp	41;"	d	file:
GETOPT_INTERFACE_VERSION	getopt/getopt.c	52;"	d	file:
GETOPT_INTERFACE_VERSION	getopt/getopt1.c	49;"	d	file:
GETVERSIONINPARAMS_EX	os_win32.cpp	/^} GETVERSIONINPARAMS_EX;$/;"	t	typeref:struct:_GETVERSIONINPARAMS_EX	file:
GE_OPT_POLLED	os_qnxnto.h	641;"	d
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
Get3Integers	smartd.cpp	/^static int Get3Integers(const char *arg, const char *name, const char *token, int lineno, const char *cfgfile,$/;"	f	file:
GetInteger	smartd.cpp	/^static int GetInteger(const char *arg, const char *name, const char *token, int lineno, const char *cfgfile,$/;"	f	file:
GetLogName	ataprint.cpp	/^static const char * GetLogName(unsigned logaddr)$/;"	f	file:
GetNumLogSectors	ataprint.cpp	/^static unsigned GetNumLogSectors(const ata_smart_log_directory * logdir, unsigned logaddr, bool gpl)$/;"	f	file:
GetValidArgList	smartd.cpp	/^static const char *GetValidArgList(char opt)$/;"	f	file:
Goodbye	smartd.cpp	/^static int Goodbye(int status)$/;"	f	file:
HAVE_ATTR_PACKED	config.h	14;"	d
HAVE_CLOCK_GETTIME	config.h	17;"	d
HAVE_FTIME	config.h	29;"	d
HAVE_GETOPT_LONG	config.h	32;"	d
HAVE_GETTIMEOFDAY	config.h	35;"	d
HAVE_INT64_T	config.h	38;"	d
HAVE_INTTYPES_H	config.h	41;"	d
HAVE_LIBCAP_NG	config.h	44;"	d
HAVE_LINUX_CCISS_IOCTL_H	config.h	53;"	d
HAVE_LINUX_COMPILER_H	config.h	56;"	d
HAVE_LOCALE_H	config.h	59;"	d
HAVE_MEMORY_H	config.h	62;"	d
HAVE_REGCOMP	config.h	68;"	d
HAVE_SIGSET	config.h	74;"	d
HAVE_STDINT_H	config.h	77;"	d
HAVE_STDLIB_H	config.h	80;"	d
HAVE_STRINGS_H	config.h	83;"	d
HAVE_STRING_H	config.h	86;"	d
HAVE_STRTOULL	config.h	89;"	d
HAVE_SYS_STAT_H	config.h	98;"	d
HAVE_SYS_TYPES_H	config.h	110;"	d
HAVE_UINT64_T	config.h	113;"	d
HAVE_UNAME	config.h	116;"	d
HAVE_UNISTD_H	config.h	119;"	d
HAVE_WORKING_SNPRINTF	config.h	125;"	d
HAVE_WORKING_SNPRINTF	utility.h	43;"	d
HDIO_DRIVE_CMD	os_linux.h	382;"	d
HDIO_DRIVE_TASK	os_linux.h	383;"	d
HDIO_DRIVE_TASKFILE	os_linux.h	384;"	d
HDIO_DRIVE_TASK_HDR_SIZE	os_linux.h	378;"	d
HDIO_GET_IDENTITY	os_linux.h	385;"	d
HPTIO_CTL	os_linux.h	387;"	d
HPT_CHANNEL_INFO	os_freebsd.h	/^} HPT_CHANNEL_INFO, *PHPT_CHANNEL_INFO;$/;"	t	typeref:struct:_HPT_CHANNEL_INFO
HPT_CHANNEL_INFO_V2	os_freebsd.h	/^} HPT_CHANNEL_INFO_V2, *PHPT_CHANNEL_INFO_V2;$/;"	t	typeref:struct:_HPT_CHANNEL_INFO_V2
HPT_CTL_CODE	os_freebsd.h	565;"	d
HPT_DO_IOCONTROL	os_freebsd.h	600;"	d
HPT_IOCTL_GET_CHANNEL_INFO	os_freebsd.h	566;"	d
HPT_IOCTL_GET_CHANNEL_INFO_V2	os_freebsd.h	567;"	d
HPT_IOCTL_IDE_PASS_THROUGH	os_freebsd.h	568;"	d
HPT_IOCTL_MAGIC	os_freebsd.h	573;"	d
HPT_IOCTL_PARAM	os_freebsd.h	/^} HPT_IOCTL_PARAM, *PHPT_IOCTL_PARAM;$/;"	t	typeref:struct:_HPT_IOCTL_PARAM
HPT_PASS_THROUGH_HEADER	os_freebsd.h	/^HPT_PASS_THROUGH_HEADER, *PHPT_PASS_THROUGH_HEADER;$/;"	t	typeref:struct:_HPT_PASS_THROUGH_HEADER
HPT_READ	os_freebsd.h	570;"	d
HPT_WRITE	os_freebsd.h	571;"	d
HUPhandler	smartd.cpp	/^static void HUPhandler(int sig)$/;"	f	file:
HeaderLength	dev_areca.h	/^  unsigned int HeaderLength;$/;"	m	struct:_ARCMSR_IO_HDR
Heartbeat_type	cissio_freebsd.h	/^typedef u_int32_t	Heartbeat_type;$/;"	t
IDENTIFY	atacmds.h	/^  IDENTIFY,$/;"	e	enum:__anon48
IDE_DRIVE_TASK_IN	os_linux.h	380;"	d
IDE_DRIVE_TASK_NO_DATA	os_linux.h	379;"	d
IDE_DRIVE_TASK_OUT	os_linux.h	381;"	d
IE_LPAGE	scsicmds.h	197;"	d
IEnumWbemClassObject	os_win32/wbemcli_small.h	/^  struct IEnumWbemClassObject : public IUnknown {$/;"	s
IEnumWbemClassObject	os_win32/wbemcli_small.h	/^typedef struct IEnumWbemClassObject IEnumWbemClassObject;$/;"	t	typeref:struct:IEnumWbemClassObject
IID_IWbemLocator	os_win32/wbemcli_small.h	/^  EXTERN_C const IID IID_IWbemLocator;$/;"	v
IMMEDIATE_OFFLINE	atacmds.h	/^  IMMEDIATE_OFFLINE,$/;"	e	enum:__anon48
INFORMATIONAL_EXCEPTIONS_CONTROL_PAGE	scsicmds.h	231;"	d
INQLEN	os_qnxnto.h	66;"	d
INQUIRY	scsicmds.h	65;"	d
INSIDE_WORD	regex/regex_internal.h	/^  INSIDE_WORD = PREV_WORD_CONSTRAINT | NEXT_WORD_CONSTRAINT,$/;"	e	enum:__anon115
INSTALL	Makefile	/^INSTALL = \/usr\/local\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT32	scsicmds.h	/^typedef int INT32;$/;"	t
INT64_H_	int64.h	21;"	d
INT64_H_CVSID	int64.h	23;"	d
INT8	scsicmds.h	/^typedef signed char INT8;$/;"	t
IOCTL_ATA_PASS_THROUGH	os_win32.cpp	159;"	d	file:
IOCTL_Command_struct	cissio_freebsd.h	/^} __packed IOCTL_Command_struct;$/;"	t	typeref:struct:__anon111
IOCTL_Command_struct32	cissio_freebsd.h	/^} __packed IOCTL_Command_struct32;$/;"	t	typeref:struct:__anon112
IOCTL_HEADER	csmisas.h	/^} IOCTL_HEADER,$/;"	t	typeref:struct:_IOCTL_HEADER
IOCTL_HEADER	csmisas.h	286;"	d
IOCTL_IDE_PASS_THROUGH	os_win32.cpp	136;"	d	file:
IOCTL_SCSI_MINIPORT_DISABLE_SMART	os_win32.cpp	211;"	d	file:
IOCTL_SCSI_MINIPORT_ENABLE_DISABLE_AUTOSAVE	os_win32.cpp	213;"	d	file:
IOCTL_SCSI_MINIPORT_ENABLE_DISABLE_AUTO_OFFLINE	os_win32.cpp	216;"	d	file:
IOCTL_SCSI_MINIPORT_ENABLE_SMART	os_win32.cpp	210;"	d	file:
IOCTL_SCSI_MINIPORT_EXECUTE_OFFLINE_DIAGS	os_win32.cpp	215;"	d	file:
IOCTL_SCSI_MINIPORT_IDENTIFY	os_win32.cpp	207;"	d	file:
IOCTL_SCSI_MINIPORT_READ_SMART_ATTRIBS	os_win32.cpp	208;"	d	file:
IOCTL_SCSI_MINIPORT_READ_SMART_LOG	os_win32.cpp	217;"	d	file:
IOCTL_SCSI_MINIPORT_READ_SMART_THRESHOLDS	os_win32.cpp	209;"	d	file:
IOCTL_SCSI_MINIPORT_RETURN_STATUS	os_win32.cpp	212;"	d	file:
IOCTL_SCSI_MINIPORT_SAVE_ATTRIBUTE_VALUES	os_win32.cpp	214;"	d	file:
IOCTL_SCSI_MINIPORT_SMART_VERSION	os_win32.cpp	206;"	d	file:
IOCTL_SCSI_MINIPORT_WRITE_SMART_LOG	os_win32.cpp	218;"	d	file:
IOCTL_STORAGE_QUERY_PROPERTY	os_win32.cpp	230;"	d	file:
IOControllerNumber	csmisas.h	/^    __u32 IOControllerNumber;$/;"	m	struct:_IOCTL_HEADER
IS_BEGBUF_CONTEXT	regex/regex_internal.h	412;"	d
IS_ENDBUF_CONTEXT	regex/regex_internal.h	413;"	d
IS_EPSILON_NODE	regex/regex_internal.h	279;"	d
IS_NEWLINE	regex/regex_internal.h	417;"	d
IS_NEWLINE_CONTEXT	regex/regex_internal.h	411;"	d
IS_ORDINARY_CONTEXT	regex/regex_internal.h	414;"	d
IS_WIDE_NEWLINE	regex/regex_internal.h	419;"	d
IS_WIDE_WORD_CHAR	regex/regex_internal.h	418;"	d
IS_WORD_CHAR	regex/regex_internal.h	416;"	d
IS_WORD_CONTEXT	regex/regex_internal.h	410;"	d
IWbemCallResult	os_win32/wbemcli_small.h	/^typedef struct IWbemCallResult IWbemCallResult;$/;"	t	typeref:struct:IWbemCallResult
IWbemClassObject	os_win32/wbemcli_small.h	/^  struct IWbemClassObject : public IUnknown {$/;"	s
IWbemContext	os_win32/wbemcli_small.h	/^typedef struct IWbemContext IWbemContext;$/;"	t	typeref:struct:IWbemContext
IWbemLocator	os_win32/wbemcli_small.h	/^  struct IWbemLocator : public IUnknown {$/;"	s
IWbemObjectSink	os_win32/wbemcli_small.h	/^typedef struct IWbemObjectSink IWbemObjectSink;$/;"	t	typeref:struct:IWbemObjectSink
IWbemQualifierSet	os_win32/wbemcli_small.h	/^typedef struct IWbemQualifierSet IWbemQualifierSet;$/;"	t	typeref:struct:IWbemQualifierSet
IWbemServices	os_win32/wbemcli_small.h	/^  struct IWbemServices : public IUnknown {$/;"	s
IdeReg	os_win32.cpp	/^  IDEREGS IdeReg;$/;"	m	struct:__anon93	file:
Identify	csmisas.h	/^   CSMI_SAS_IDENTIFY Identify;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
Information	csmisas.h	/^   CSMI_SAS_DRIVER_INFO Information;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO_BUFFER
Information	csmisas.h	/^   CSMI_SAS_FIRMWARE_DOWNLOAD Information;$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER
Information	csmisas.h	/^   CSMI_SAS_LINK_ERRORS Information;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS_BUFFER
Information	csmisas.h	/^   CSMI_SAS_PHY_INFO Information;$/;"	m	struct:_CSMI_SAS_PHY_INFO_BUFFER
Information	csmisas.h	/^   CSMI_SAS_RAID_CONTROL Information;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL_BUFFER
Information	csmisas.h	/^   CSMI_SAS_RAID_ELEMENT Information;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT_BUFFER
Information	csmisas.h	/^   CSMI_SAS_RAID_FEATURES Information;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES_BUFFER
Information	csmisas.h	/^   CSMI_SAS_RAID_INFO Information;$/;"	m	struct:_CSMI_SAS_RAID_INFO_BUFFER
Information	csmisas.h	/^   CSMI_SAS_RAID_SET_OPERATION Information;$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION_BUFFER
Information	csmisas.h	/^   CSMI_SAS_SET_PHY_INFO Information;$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO_BUFFER
Initialize	smartd.cpp	/^static void Initialize(time_t *wakeuptime)$/;"	f	file:
InternalStatus	aacraid.h	/^        ULONG InternalStatus;       \/\/ offset 2c$/;"	m	union:_SCSI_REQUEST_BLOCK::__anon140
Invalid_Cmd	cissio_freebsd.h	/^    } __packed Invalid_Cmd;$/;"	m	union:__anon107	typeref:struct:__anon107::__anon109
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_CNTLR_STATUS_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_CONNECTOR_INFO_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_PHY_INFO_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_RAID_INFO_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_SATA_SIGNATURE_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU_BUFFER
IoctlHeader	csmisas.h	/^   IOCTL_HEADER IoctlHeader;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_BUFFER
KNOWNDRIVES_H_	knowndrives.h	20;"	d
KNOWNDRIVES_H_CVSID	knowndrives.h	22;"	d
LAST_N_ERROR_LPAGE	scsicmds.h	186;"	d
LB_PROV_LPAGE	scsicmds.h	188;"	d
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LD_CMD_EJECT	os_qnxnto.h	481;"	d
LD_CMD_LOAD	os_qnxnto.h	482;"	d
LD_CMD_LOEJ	os_qnxnto.h	479;"	d
LD_CMD_PC_ACTIVE	os_qnxnto.h	493;"	d
LD_CMD_PC_IDLE	os_qnxnto.h	494;"	d
LD_CMD_PC_MSK	os_qnxnto.h	491;"	d
LD_CMD_PC_NC	os_qnxnto.h	492;"	d
LD_CMD_PC_SLEEP	os_qnxnto.h	496;"	d
LD_CMD_PC_STANDBY	os_qnxnto.h	495;"	d
LD_CMD_SA_EOT	os_qnxnto.h	486;"	d
LD_CMD_SA_HOLD	os_qnxnto.h	485;"	d
LD_CMD_SA_LOEJ	os_qnxnto.h	488;"	d
LD_CMD_SA_RT	os_qnxnto.h	487;"	d
LD_CMD_START	os_qnxnto.h	478;"	d
LD_CMD_STOP	os_qnxnto.h	480;"	d
LD_OPT_IMMED	os_qnxnto.h	474;"	d
LEVEL2LUN	cissio_freebsd.h	70;"	d
LEVEL3LUN	cissio_freebsd.h	71;"	d
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LINELEN	os_win32/syslog_win32.cpp	95;"	d	file:
LINE_FIRST	regex/regex_internal.h	/^  LINE_FIRST = PREV_NEWLINE_CONSTRAINT,$/;"	e	enum:__anon115
LINE_LAST	regex/regex_internal.h	/^  LINE_LAST = NEXT_NEWLINE_CONSTRAINT,$/;"	e	enum:__anon115
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LOCATE_OPT_BT	os_qnxnto.h	800;"	d
LOCATE_OPT_CP	os_qnxnto.h	799;"	d
LOGPAGEHDRSIZE	scsicmds.h	314;"	d
LOG_ALERT	os_win32/syslog.h	32;"	d
LOG_CRIT	os_win32/syslog.h	33;"	d
LOG_DAEMON	os_win32/syslog.h	43;"	d
LOG_DEBUG	os_win32/syslog.h	40;"	d
LOG_EMERG	os_win32/syslog.h	31;"	d
LOG_ERR	os_win32/syslog.h	34;"	d
LOG_FAC	os_win32/syslog.h	56;"	d
LOG_FACMASK	os_win32/syslog.h	55;"	d
LOG_INFO	os_win32/syslog.h	39;"	d
LOG_LOCAL0	os_win32/syslog.h	45;"	d
LOG_LOCAL1	os_win32/syslog.h	47;"	d
LOG_LOCAL2	os_win32/syslog.h	48;"	d
LOG_LOCAL3	os_win32/syslog.h	49;"	d
LOG_LOCAL4	os_win32/syslog.h	50;"	d
LOG_LOCAL5	os_win32/syslog.h	51;"	d
LOG_LOCAL6	os_win32/syslog.h	52;"	d
LOG_LOCAL7	os_win32/syslog.h	53;"	d
LOG_NOTICE	os_win32/syslog.h	38;"	d
LOG_PID	os_win32/syslog.h	58;"	d
LOG_RESP_LEN	scsiprint.cpp	48;"	d	file:
LOG_RESP_LONG_LEN	scsiprint.cpp	49;"	d	file:
LOG_RESP_SELF_TEST_LEN	scsicmds.h	204;"	d
LOG_RESP_TAPE_ALERT_LEN	scsiprint.cpp	50;"	d	file:
LOG_SELECT	scsicmds.h	47;"	d
LOG_SENSE	scsicmds.h	50;"	d
LOG_WARNING	os_win32/syslog.h	36;"	d
LONG	csmisas.h	/^typedef unsigned long LONG;$/;"	t
LSCSI_DID_BUS_BUSY	os_linux.cpp	506;"	d	file:
LSCSI_DID_ERROR	os_linux.cpp	503;"	d	file:
LSCSI_DID_NO_CONNECT	os_linux.cpp	507;"	d	file:
LSCSI_DID_TIME_OUT	os_linux.cpp	505;"	d	file:
LSCSI_DRIVER_MASK	os_linux.cpp	501;"	d	file:
LSCSI_DRIVER_SENSE	cciss.cpp	58;"	d	file:
LSCSI_DRIVER_SENSE	os_linux.cpp	502;"	d	file:
LSCSI_DRIVER_TIMEOUT	os_linux.cpp	504;"	d	file:
LS_OPT_PCR	os_qnxnto.h	410;"	d
LS_OPT_SP	os_qnxnto.h	409;"	d
LS_PC_CUR_CUMULATIVE	os_qnxnto.h	413;"	d
LS_PC_CUR_THRESHOLD	os_qnxnto.h	412;"	d
LS_PC_DFLT_CUMULATIVE	os_qnxnto.h	415;"	d
LS_PC_DFLT_THRESHOLD	os_qnxnto.h	414;"	d
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LUN	cciss.cpp	/^  uint8_t LUN[CISS_MAX_LUN][8];$/;"	m	struct:_ReportLUNdata_struct	file:
LUNAddr_struct	cissio_freebsd.h	/^} __packed LUNAddr_struct;$/;"	t	typeref:union:__anon104
LUNListLength	cciss.cpp	/^  uint32_t LUNListLength;	\/* always big-endian *\/$/;"	m	struct:_ReportLUNdata_struct	file:
LUN_info	cissio_freebsd.h	/^    LUNAddr_struct	LUN_info;	\/* 8 *\/$/;"	m	struct:__anon111
LUN_info	cissio_freebsd.h	/^    LUNAddr_struct	LUN_info;	\/* 8 *\/$/;"	m	struct:__anon112
Label	csmisas.h	/^       CSMI_SAS_RAID_SET_LABEL_INFO Label;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
Length	aacraid.h	/^    USHORT Length;                  \/\/ offset 0$/;"	m	struct:_SCSI_REQUEST_BLOCK
Length	csmisas.h	/^    __u32 Length;$/;"	m	struct:_IOCTL_HEADER
Length	dev_areca.h	/^  unsigned int Length;$/;"	m	struct:_ARCMSR_IO_HDR
Length	os_win32.cpp	/^  USHORT Length;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
Location	csmisas.h	/^   CSMI_SAS_DRIVE_LOCATION Location;$/;"	m	struct:_CSMI_SAS_DRIVE_INFO
Location	csmisas.h	/^   CSMI_SAS_LOCATION_IDENTIFIER Location[1];$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
LogDev	cissio_freebsd.h	/^    LogDevAddr_struct	LogDev;$/;"	m	union:__anon104
LogDev	cissio_freebsd.h	/^    } __packed LogDev;$/;"	m	union:__anon98	typeref:struct:__anon98::__anon100
LogDevAddr_struct	cissio_freebsd.h	/^} __packed LogDevAddr_struct;$/;"	t	typeref:struct:__anon103
LogUnit	cissio_freebsd.h	/^    } __packed LogUnit;$/;"	m	union:__anon98	typeref:struct:__anon98::__anon101
Lun	aacraid.h	/^    UCHAR Lun;                      \/\/ offset 7$/;"	m	struct:_SCSI_REQUEST_BLOCK
Lun	os_win32.cpp	/^  UCHAR Lun;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
LunAddrBytes	cissio_freebsd.h	/^    u_int8_t		LunAddrBytes[8];$/;"	m	union:__anon104
MAILTYPE_TEST	smartd.cpp	/^static const int MAILTYPE_TEST = 0;$/;"	v	file:
MAINT	Makefile	/^MAINT = #$/;"	m
MAINTAINERCLEANFILES	Makefile	/^MAINTAINERCLEANFILES = \\$/;"	m
MAJOR_STRING_LENGTH	os_linux.cpp	1498;"	d	file:
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5\/missing makeinfo$/;"	m
MAKENSIS	Makefile	/^MAKENSIS = $/;"	m
MAN2HTML	Makefile	/^MAN2HTML = man2html$/;"	m
MAN2TXT	Makefile	/^MAN2TXT = groff -man -Tascii -P'-bcou'$/;"	m
MANDATORY_CMD	smartctl.h	/^  MANDATORY_CMD,$/;"	e	enum:failure_type
MANS	Makefile	/^MANS = $(man_MANS)$/;"	m
MAN_FILTER	Makefile	/^MAN_FILTER = { \\$/;"	m
MAX	os_linux.h	55;"	d
MAXDEV_PER_CHANNEL	os_freebsd.h	575;"	d
MAXLINES	os_win32/syslog_win32.cpp	94;"	d	file:
MAX_ATTRIBUTE_NUM	atacmds.h	934;"	d
MAX_CDB_LEN	megaraid.h	29;"	d
MAX_DXFER_LEN	os_linux.cpp	498;"	d	file:
MAX_IOCTL_SGE	megaraid.h	118;"	d
MAX_MSG	os_freebsd.cpp	90;"	d	file:
MAX_MSG	os_netbsd.cpp	/^  BAD_SMART, MAX_MSG$/;"	e	enum:warnings	file:
MAX_MSG	os_openbsd.cpp	/^  BAD_SMART, MAX_MSG$/;"	e	enum:warnings	file:
MAX_NUM_DEV	os_freebsd.h	87;"	d
MAX_REQ_SENSE_LEN	megaraid.h	28;"	d
MAX_SIG_HANDLERS	os_win32/daemon_win32.cpp	228;"	d	file:
MAX_SYS_PDS	megaraid.h	124;"	d
MBS_ALLOCATED	regex/regex_internal.h	332;"	d
MBS_CASE_ALLOCATED	regex/regex_internal.h	335;"	d
MB_CHAR	regex/regex_internal.h	/^  MB_CHAR,$/;"	e	enum:__anon127
MEDIUM_TYPES_SUPPORTED_PAGE	scsicmds.h	222;"	d
MEGAIOCCMD	megaraid.h	18;"	d
MEGAIOC_MAGIC	megaraid.h	17;"	d
MEGAIOC_QADAPINFO	megaraid.h	24;"	d
MEGAIOC_QDRVRVER	megaraid.h	23;"	d
MEGAIOC_QNADAP	megaraid.h	22;"	d
MEGASAS_IOC_FIRMWARE	megaraid.h	107;"	d
MEGASAS_MAGIC	megaraid.h	106;"	d
MEGA_MBOXCMD_PASSTHRU	megaraid.h	26;"	d
METHOD_BUFFERED	aacraid.h	33;"	d
METHOD_NEITHER	aacraid.h	34;"	d
MFI_CMD_DCMD	megaraid.h	110;"	d
MFI_CMD_PD_SCSI_IO	megaraid.h	109;"	d
MFI_DCMD_PD_GET_LIST	megaraid.h	113;"	d
MFI_FRAME_DIR_BOTH	megaraid.h	122;"	d
MFI_FRAME_DIR_NONE	megaraid.h	119;"	d
MFI_FRAME_DIR_READ	megaraid.h	121;"	d
MFI_FRAME_DIR_WRITE	megaraid.h	120;"	d
MFI_FRAME_SGL64	megaraid.h	111;"	d
MFI_MBOX_SIZE	megaraid.h	117;"	d
MFI_STAT_OK	megaraid.h	112;"	d
MKADAP	megaraid.h	21;"	d
MKDIR_P	Makefile	/^MKDIR_P = \/usr\/local\/bin\/mkdir -p$/;"	m
MODEL_STRING_LENGTH	knowndrives.cpp	38;"	d	file:
MODE_SELECT	scsicmds.h	59;"	d
MODE_SELECT_10	scsicmds.h	62;"	d
MODE_SENSE	scsicmds.h	53;"	d
MODE_SENSE_10	scsicmds.h	56;"	d
MONITOR_AS_CRIT	smartd.cpp	/^  MONITOR_AS_CRIT     = 0x10,$/;"	e	enum:__anon113	file:
MONITOR_IGNORE	smartd.cpp	/^  MONITOR_IGNORE      = 0x02,$/;"	e	enum:__anon113	file:
MONITOR_IGN_FAILUSE	smartd.cpp	/^  MONITOR_IGN_FAILUSE = 0x01,$/;"	e	enum:__anon113	file:
MONITOR_RAW	smartd.cpp	/^  MONITOR_RAW         = 0x08,$/;"	e	enum:__anon113	file:
MONITOR_RAW_AS_CRIT	smartd.cpp	/^  MONITOR_RAW_AS_CRIT = 0x20,$/;"	e	enum:__anon113	file:
MONITOR_RAW_PRINT	smartd.cpp	/^  MONITOR_RAW_PRINT   = 0x04,$/;"	e	enum:__anon113	file:
MPAGE_CONTROL_CHANGEABLE	scsicmds.h	241;"	d
MPAGE_CONTROL_CURRENT	scsicmds.h	240;"	d
MPAGE_CONTROL_DEFAULT	scsicmds.h	242;"	d
MPAGE_CONTROL_SAVED	scsicmds.h	243;"	d
MSEL_OPT_PF	os_qnxnto.h	384;"	d
MSEL_OPT_SP	os_qnxnto.h	385;"	d
MSG_SYSLOG	os_win32/syslog_win32.cpp	81;"	d	file:
MSG_SYSLOG_01	os_win32/syslog_win32.cpp	82;"	d	file:
MSG_SYSLOG_10	os_win32/syslog_win32.cpp	84;"	d	file:
MSNS_OPT_DBD	os_qnxnto.h	427;"	d
MailWarning	smartd.cpp	/^static void MailWarning(const dev_config & cfg, dev_state & state, int which, const char *fmt, ...)$/;"	f	file:
MakeConfigEntries	smartd.cpp	/^static int MakeConfigEntries(const dev_config & base_cfg,$/;"	f	file:
MetaDataLen	os_win32.cpp	/^  ULONG MetaDataLen;$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
Mode	cissio_freebsd.h	/^	u_int8_t	Mode:2;$/;"	m	struct:__anon98::__anon100
Mode	cissio_freebsd.h	/^	u_int8_t	Mode:2;$/;"	m	struct:__anon98::__anon101
Mode	cissio_freebsd.h	/^	u_int8_t	Mode:2;$/;"	m	struct:__anon98::__anon99
Mode	cissio_freebsd.h	/^    u_int32_t		Mode:2;$/;"	m	struct:__anon102
Mode	cissio_freebsd.h	/^    u_int32_t		Mode:2;$/;"	m	struct:__anon103
Modify	csmisas.h	/^   CSMI_SAS_RAID_SET_MODIFY_INFO Modify;$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
Module	csmisas.h	/^       CSMI_SAS_RAID_MODULE_INFO Module;$/;"	m	union:_CSMI_SAS_RAID_ELEMENT::__anon153
MoreErrInfo	cissio_freebsd.h	/^    MoreErrInfo_struct	MoreErrInfo;$/;"	m	struct:__anon110
MoreErrInfo_struct	cissio_freebsd.h	/^} __packed MoreErrInfo_struct;$/;"	t	typeref:union:__anon107
NCR_DEVICE_BUSY	os_qnxnto.h	650;"	d
NCR_EXTERNAL_REQUEST	os_qnxnto.h	647;"	d
NCR_MEDIA	os_qnxnto.h	648;"	d
NCR_MULTI_INITIATOR	os_qnxnto.h	649;"	d
NCR_OPERATIONAL_CHANGE	os_qnxnto.h	645;"	d
NCR_POWER_MANAGEMENT	os_qnxnto.h	646;"	d
NEWLINE_CHAR	regex/regex_internal.h	96;"	d
NEXT_ENDBUF_CONSTRAINT	regex/regex_internal.h	138;"	d
NEXT_NEWLINE_CONSTRAINT	regex/regex_internal.h	136;"	d
NEXT_NOTWORD_CONSTRAINT	regex/regex_internal.h	134;"	d
NEXT_WORD_CONSTRAINT	regex/regex_internal.h	133;"	d
NODE_STRING_LENGTH	os_linux.cpp	1500;"	d	file:
NONOPTION_P	getopt/getopt.c	543;"	d	file:
NONVOL_CACHE_LPAGE	scsicmds.h	195;"	d
NON_MEDIUM_ERROR_LPAGE	scsicmds.h	185;"	d
NON_TYPE	regex/regex_internal.h	/^  NON_TYPE = 0,$/;"	e	enum:__anon117
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTCH_PAGE	scsicmds.h	223;"	d
NOT_SATISFY_NEXT_CONSTRAINT	regex/regex_internal.h	427;"	d
NOT_SATISFY_PREV_CONSTRAINT	regex/regex_internal.h	421;"	d
NO_DISK_3WARE	os_freebsd.cpp	88;"	d	file:
NO_RETURN	os_freebsd.cpp	86;"	d	file:
NO_warn_unused_result	smartd.cpp	1358;"	d	file:
NROFF	Makefile	/^NROFF = nroff$/;"	m
NULL	getopt/getopt1.c	67;"	d	file:
NUMBER_ATA_SMART_ATTRIBUTES	atacmds.h	124;"	d
NUMBER_OF_STATE	regex/regexec.c	1374;"	d	file:
NVMECMDS_H	nvmecmds.h	22;"	d
NVMECMDS_H_CVSID	nvmecmds.h	24;"	d
NVMEPRINT_H	nvmeprint.h	19;"	d
NVMEPRINT_H_CVSID	nvmeprint.h	21;"	d
NVME_CTRLR_PREFIX	freebsd_nvme_ioctl.h	150;"	d
NVME_IOCTL_ADMIN_CMD	linux_nvme_ioctl.h	59;"	d
NVME_IOCTL_ID	linux_nvme_ioctl.h	58;"	d
NVME_IOCTL_IO_CMD	linux_nvme_ioctl.h	61;"	d
NVME_IOCTL_RESET	linux_nvme_ioctl.h	62;"	d
NVME_IOCTL_SUBMIT_IO	linux_nvme_ioctl.h	60;"	d
NVME_IOCTL_SUBSYS_RESET	linux_nvme_ioctl.h	63;"	d
NVME_NS_PREFIX	freebsd_nvme_ioctl.h	151;"	d
NVME_PASSTHROUGH_CMD	freebsd_nvme_ioctl.h	32;"	d
NVME_PASS_THROUGH_IOCTL	os_win32.cpp	/^} NVME_PASS_THROUGH_IOCTL;$/;"	t	typeref:struct:_NVME_PASS_THROUGH_IOCTL	file:
NVME_PASS_THROUGH_SRB_IO_CODE	os_win32.cpp	326;"	d	file:
NVME_SIG_STR	os_win32.cpp	323;"	d	file:
NVME_STORPORT_DRIVER	os_win32.cpp	324;"	d	file:
NVMeCheckDevice	smartd.cpp	/^static int NVMeCheckDevice(const dev_config & cfg, dev_state & state, nvme_device * nvmedev)$/;"	f	file:
NVMeCmd	os_win32.cpp	/^  ULONG NVMeCmd[16]; \/\/ Command DW[0...15]$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
NVMeDeviceScan	smartd.cpp	/^static int NVMeDeviceScan(dev_config & cfg, dev_state & state, nvme_device * nvmedev)$/;"	f	file:
NextSrb	aacraid.h	/^    struct _SCSI_REQUEST_BLOCK *NextSrb; \/\/ offset 20$/;"	m	struct:_SCSI_REQUEST_BLOCK	typeref:struct:_SCSI_REQUEST_BLOCK::_SCSI_REQUEST_BLOCK
NodeName_type	cissio_freebsd.h	/^typedef char		NodeName_type[16];$/;"	t
NonMediumErrorPageSupported	smartd.cpp	/^  unsigned char NonMediumErrorPageSupported;$/;"	m	struct:temp_dev_state	file:
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OFFLINE_FULL_SCAN	atacmds.h	111;"	d
OPTIONAL_CMD	smartctl.h	/^  OPTIONAL_CMD,$/;"	e	enum:failure_type
OP_ALT	regex/regex_internal.h	/^  OP_ALT,$/;"	e	enum:__anon117
OP_BACK_REF	regex/regex_internal.h	/^  OP_BACK_REF,$/;"	e	enum:__anon117
OP_CHARSET_RANGE	regex/regex_internal.h	/^  OP_CHARSET_RANGE,$/;"	e	enum:__anon117
OP_CLOSE_BRACKET	regex/regex_internal.h	/^  OP_CLOSE_BRACKET,$/;"	e	enum:__anon117
OP_CLOSE_CHAR_CLASS	regex/regex_internal.h	/^  OP_CLOSE_CHAR_CLASS,$/;"	e	enum:__anon117
OP_CLOSE_COLL_ELEM	regex/regex_internal.h	/^  OP_CLOSE_COLL_ELEM,$/;"	e	enum:__anon117
OP_CLOSE_DUP_NUM	regex/regex_internal.h	/^  OP_CLOSE_DUP_NUM,$/;"	e	enum:__anon117
OP_CLOSE_EQUIV_CLASS	regex/regex_internal.h	/^  OP_CLOSE_EQUIV_CLASS,$/;"	e	enum:__anon117
OP_CLOSE_SUBEXP	regex/regex_internal.h	/^  OP_CLOSE_SUBEXP,$/;"	e	enum:__anon117
OP_DUP_ASTERISK	regex/regex_internal.h	/^  OP_DUP_ASTERISK,$/;"	e	enum:__anon117
OP_DUP_PLUS	regex/regex_internal.h	/^  OP_DUP_PLUS,$/;"	e	enum:__anon117
OP_DUP_QUESTION	regex/regex_internal.h	/^  OP_DUP_QUESTION,$/;"	e	enum:__anon117
OP_NON_MATCH_LIST	regex/regex_internal.h	/^  OP_NON_MATCH_LIST,$/;"	e	enum:__anon117
OP_NOTWORD	regex/regex_internal.h	/^  OP_NOTWORD,$/;"	e	enum:__anon117
OP_OPEN_BRACKET	regex/regex_internal.h	/^  OP_OPEN_BRACKET,$/;"	e	enum:__anon117
OP_OPEN_CHAR_CLASS	regex/regex_internal.h	/^  OP_OPEN_CHAR_CLASS,$/;"	e	enum:__anon117
OP_OPEN_COLL_ELEM	regex/regex_internal.h	/^  OP_OPEN_COLL_ELEM,$/;"	e	enum:__anon117
OP_OPEN_DUP_NUM	regex/regex_internal.h	/^  OP_OPEN_DUP_NUM,$/;"	e	enum:__anon117
OP_OPEN_EQUIV_CLASS	regex/regex_internal.h	/^  OP_OPEN_EQUIV_CLASS,$/;"	e	enum:__anon117
OP_OPEN_SUBEXP	regex/regex_internal.h	/^  OP_OPEN_SUBEXP,$/;"	e	enum:__anon117
OP_PERIOD	regex/regex_internal.h	/^  OP_PERIOD,$/;"	e	enum:__anon117
OP_WORD	regex/regex_internal.h	/^  OP_WORD,$/;"	e	enum:__anon117
OS_DARWIN_H_	os_darwin.h	25;"	d
OS_DARWIN_H_CVSID	os_darwin.h	27;"	d
OS_FREEBSD_H_	os_freebsd.h	83;"	d
OS_FREEBSD_H_CVSID	os_freebsd.h	85;"	d
OS_GENERIC_H_	os_generic.h	27;"	d
OS_GENERIC_H_CVSID	os_generic.h	28;"	d
OS_LINUX_H_	os_linux.h	39;"	d
OS_LINUX_H_CVSID	os_linux.h	41;"	d
OS_NETBSD_H_	os_netbsd.h	25;"	d
OS_NETBSD_H_CVSID	os_netbsd.h	27;"	d
OS_OPENBSD_H_	os_openbsd.h	27;"	d
OS_OPENBSD_H_CVSID	os_openbsd.h	29;"	d
OS_QNXNTO_H_	os_qnxnto.h	25;"	d
OS_QNXNTO_H_CVSID	os_qnxnto.h	26;"	d
OS_SOLARIS_H_	os_solaris.h	26;"	d
OS_SOLARIS_H_CVSID	os_solaris.h	28;"	d
OfflineDataCollectionStatus	ataprint.cpp	/^static const char *OfflineDataCollectionStatus(unsigned char status_byte)$/;"	f	file:
Operation	csmisas.h	/^   } Operation;$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION	typeref:union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
OriginalRequest	aacraid.h	/^    PVOID OriginalRequest;          \/\/ offset 24$/;"	m	struct:_SCSI_REQUEST_BLOCK
P	atacmds.cpp	417;"	d	file:
P	atacmds.cpp	429;"	d	file:
P	ataprint.cpp	1359;"	d	file:
P	ataprint.cpp	1364;"	d	file:
PACKAGE	Makefile	/^PACKAGE = smartmontools$/;"	m
PACKAGE	config.h	131;"	d
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = smartmontools-support@lists.sourceforge.net$/;"	m
PACKAGE_BUGREPORT	config.h	134;"	d
PACKAGE_HOMEPAGE	config.h	137;"	d
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = smartmontools$/;"	m
PACKAGE_NAME	config.h	140;"	d
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = smartmontools 6.5$/;"	m
PACKAGE_STRING	config.h	143;"	d
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = smartmontools$/;"	m
PACKAGE_TARNAME	config.h	146;"	d
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	149;"	d
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 6.5$/;"	m
PACKAGE_VERSION	config.h	152;"	d
PATHINQ_SETTINGS_SIZE	os_freebsd.cpp	80;"	d	file:
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PCSMI_SAS_CHARACTER	csmisas.h	/^  *PCSMI_SAS_CHARACTER;$/;"	t	typeref:struct:_CSMI_SAS_CHARACTER
PCSMI_SAS_CNTLR_CONFIG	csmisas.h	/^  *PCSMI_SAS_CNTLR_CONFIG;$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_CONFIG
PCSMI_SAS_CNTLR_CONFIG_BUFFER	csmisas.h	/^  *PCSMI_SAS_CNTLR_CONFIG_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_CONFIG_BUFFER
PCSMI_SAS_CNTLR_STATUS	csmisas.h	/^  *PCSMI_SAS_CNTLR_STATUS;$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_STATUS
PCSMI_SAS_CNTLR_STATUS_BUFFER	csmisas.h	/^  *PCSMI_SAS_CNTLR_STATUS_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_CNTLR_STATUS_BUFFER
PCSMI_SAS_CONNECTOR_INFO	csmisas.h	/^  *PCSMI_SAS_CONNECTOR_INFO;$/;"	t	typeref:struct:_CSMI_SAS_GET_CONNECTOR_INFO
PCSMI_SAS_CONNECTOR_INFO_BUFFER	csmisas.h	/^  *PCSMI_SAS_CONNECTOR_INFO_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_CONNECTOR_INFO_BUFFER
PCSMI_SAS_DRIVER_INFO	csmisas.h	/^  *PCSMI_SAS_DRIVER_INFO;$/;"	t	typeref:struct:_CSMI_SAS_DRIVER_INFO
PCSMI_SAS_DRIVER_INFO_BUFFER	csmisas.h	/^  *PCSMI_SAS_DRIVER_INFO_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_DRIVER_INFO_BUFFER
PCSMI_SAS_DRIVE_EXTENT_INFO	csmisas.h	/^  *PCSMI_SAS_DRIVE_EXTENT_INFO;$/;"	t	typeref:struct:_CSMI_SAS_DRIVE_EXTENT_INFO
PCSMI_SAS_DRIVE_INFO	csmisas.h	/^  *PCSMI_SAS_DRIVE_INFO;$/;"	t	typeref:struct:_CSMI_SAS_DRIVE_INFO
PCSMI_SAS_DRIVE_LOCATION	csmisas.h	/^  *PCSMI_SAS_DRIVE_LOCATION;$/;"	t	typeref:struct:_CSMI_SAS_DRIVE_LOCATION
PCSMI_SAS_FIRMWARE_DOWNLOAD	csmisas.h	/^  *PCSMI_SAS_FIRMWARE_DOWNLOAD;$/;"	t	typeref:struct:_CSMI_SAS_FIRMWARE_DOWNLOAD
PCSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER	csmisas.h	/^  *PCSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER
PCSMI_SAS_GET_DEVICE_ADDRESS_BUFFER	csmisas.h	/^  *PCSMI_SAS_GET_DEVICE_ADDRESS_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
PCSMI_SAS_GET_LOCATION_BUFFER	csmisas.h	/^  *PCSMI_SAS_GET_LOCATION_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_GET_LOCATION_BUFFER
PCSMI_SAS_GET_SCSI_ADDRESS_BUFFER	csmisas.h	/^   *PCSMI_SAS_GET_SCSI_ADDRESS_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
PCSMI_SAS_IDENTIFY	csmisas.h	/^  *PCSMI_SAS_IDENTIFY;$/;"	t	typeref:struct:_CSMI_SAS_IDENTIFY
PCSMI_SAS_IO_BUS_ADDRESS	csmisas.h	/^  *PCSMI_SAS_IO_BUS_ADDRESS;$/;"	t	typeref:union:_CSMI_SAS_IO_BUS_ADDRESS
PCSMI_SAS_LINK_ERRORS	csmisas.h	/^  *PCSMI_SAS_LINK_ERRORS;$/;"	t	typeref:struct:_CSMI_SAS_LINK_ERRORS
PCSMI_SAS_LINK_ERRORS_BUFFER	csmisas.h	/^  *PCSMI_SAS_LINK_ERRORS_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_LINK_ERRORS_BUFFER
PCSMI_SAS_LOCATION_IDENTIFIER	csmisas.h	/^  *PCSMI_SAS_LOCATION_IDENTIFIER;$/;"	t	typeref:struct:_CSMI_SAS_LOCATION_IDENTIFIER
PCSMI_SAS_PCI_BUS_ADDRESS	csmisas.h	/^  *PCSMI_SAS_PCI_BUS_ADDRESS;$/;"	t	typeref:struct:_CSMI_SAS_PCI_BUS_ADDRESS
PCSMI_SAS_PHY_CONTROL	csmisas.h	/^  *PCSMI_SAS_PHY_CONTROL;$/;"	t	typeref:struct:_CSMI_SAS_PHY_CONTROL
PCSMI_SAS_PHY_CONTROL_BUFFER	csmisas.h	/^  *PCSMI_SAS_PHY_CONTROL_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_PHY_CONTROL_BUFFER
PCSMI_SAS_PHY_ENTITY	csmisas.h	/^  *PCSMI_SAS_PHY_ENTITY;$/;"	t	typeref:struct:_CSMI_SAS_PHY_ENTITY
PCSMI_SAS_PHY_INFO	csmisas.h	/^  *PCSMI_SAS_PHY_INFO;$/;"	t	typeref:struct:_CSMI_SAS_PHY_INFO
PCSMI_SAS_PHY_INFO_BUFFER	csmisas.h	/^  *PCSMI_SAS_PHY_INFO_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_PHY_INFO_BUFFER
PCSMI_SAS_RAID_CONFIG	csmisas.h	/^   *PCSMI_SAS_RAID_CONFIG;$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONFIG
PCSMI_SAS_RAID_CONFIG_BUFFER	csmisas.h	/^  *PCSMI_SAS_RAID_CONFIG_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONFIG_BUFFER
PCSMI_SAS_RAID_CONTROL	csmisas.h	/^  *PCSMI_SAS_RAID_CONTROL;$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONTROL
PCSMI_SAS_RAID_CONTROL_BUFFER	csmisas.h	/^  *PCSMI_SAS_RAID_CONTROL_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_RAID_CONTROL_BUFFER
PCSMI_SAS_RAID_DEVICE_ID	csmisas.h	/^  *PCSMI_SAS_RAID_DEVICE_ID;$/;"	t	typeref:struct:_CSMI_SAS_RAID_DEVICE_ID
PCSMI_SAS_RAID_DRIVES	csmisas.h	/^  *PCSMI_SAS_RAID_DRIVES;$/;"	t	typeref:struct:_CSMI_SAS_RAID_DRIVES
PCSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA	csmisas.h	/^  *PCSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA;$/;"	t	typeref:struct:_CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA
PCSMI_SAS_RAID_ELEMENT	csmisas.h	/^  *PCSMI_SAS_RAID_ELEMENT;$/;"	t	typeref:struct:_CSMI_SAS_RAID_ELEMENT
PCSMI_SAS_RAID_ELEMENT_BUFFER	csmisas.h	/^  *PCSMI_SAS_RAID_ELEMENT_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_RAID_ELEMENT_BUFFER
PCSMI_SAS_RAID_FEATURES	csmisas.h	/^  *PCSMI_SAS_RAID_FEATURES;$/;"	t	typeref:struct:_CSMI_SAS_RAID_FEATURES
PCSMI_SAS_RAID_FEATURES_BUFFER	csmisas.h	/^  *PCSMI_SAS_RAID_FEATURES_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_RAID_FEATURES_BUFFER
PCSMI_SAS_RAID_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_INFO
PCSMI_SAS_RAID_INFO_BUFFER	csmisas.h	/^  *PCSMI_SAS_RAID_INFO_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_RAID_INFO_BUFFER
PCSMI_SAS_RAID_MODULE_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_MODULE_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_MODULE_INFO
PCSMI_SAS_RAID_SET_ADDITIONAL_DATA	csmisas.h	/^  *PCSMI_SAS_RAID_SET_ADDITIONAL_DATA;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
PCSMI_SAS_RAID_SET_CACHE_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_CACHE_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_CACHE_INFO
PCSMI_SAS_RAID_SET_CREATE_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_CREATE_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_CREATE_INFO
PCSMI_SAS_RAID_SET_DELETE_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_DELETE_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_DELETE_INFO
PCSMI_SAS_RAID_SET_DRIVE_LIST	csmisas.h	/^  *PCSMI_SAS_RAID_SET_DRIVE_LIST;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_DRIVE_LIST
PCSMI_SAS_RAID_SET_LABEL_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_LABEL_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_LABEL_INFO
PCSMI_SAS_RAID_SET_LIST	csmisas.h	/^  *PCSMI_SAS_RAID_SET_LIST;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_LIST
PCSMI_SAS_RAID_SET_MODIFY_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_MODIFY_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_MODIFY_INFO
PCSMI_SAS_RAID_SET_ONLINE_STATE_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_ONLINE_STATE_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_ONLINE_STATE_INFO
PCSMI_SAS_RAID_SET_OPERATION	csmisas.h	/^  *PCSMI_SAS_RAID_SET_OPERATION;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_OPERATION
PCSMI_SAS_RAID_SET_OPERATION_BUFFER	csmisas.h	/^  *PCSMI_SAS_RAID_SET_OPERATION_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_OPERATION_BUFFER
PCSMI_SAS_RAID_SET_SPARE_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_SPARE_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_SPARE_INFO
PCSMI_SAS_RAID_SET_TRANSFORM_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_TRANSFORM_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
PCSMI_SAS_RAID_SET_WRITE_PROTECT_INFO	csmisas.h	/^  *PCSMI_SAS_RAID_SET_WRITE_PROTECT_INFO;$/;"	t	typeref:struct:_CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO
PCSMI_SAS_RAID_TYPE_DESCRIPTION	csmisas.h	/^  *PCSMI_SAS_RAID_TYPE_DESCRIPTION;$/;"	t	typeref:struct:_CSMI_SAS_RAID_TYPE_DESCRIPTION
PCSMI_SAS_SATA_SIGNATURE	csmisas.h	/^  *PCSMI_SAS_SATA_SIGNATURE;$/;"	t	typeref:struct:_CSMI_SAS_SATA_SIGNATURE
PCSMI_SAS_SATA_SIGNATURE_BUFFER	csmisas.h	/^  *PCSMI_SAS_SATA_SIGNATURE_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_SATA_SIGNATURE_BUFFER
PCSMI_SAS_SET_PHY_INFO	csmisas.h	/^  *PCSMI_SAS_SET_PHY_INFO;$/;"	t	typeref:struct:_CSMI_SAS_SET_PHY_INFO
PCSMI_SAS_SET_PHY_INFO_BUFFER	csmisas.h	/^  *PCSMI_SAS_SET_PHY_INFO_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_SET_PHY_INFO_BUFFER
PCSMI_SAS_SMP_PASSTHRU	csmisas.h	/^  *PCSMI_SAS_SMP_PASSTHRU;$/;"	t	typeref:struct:_CSMI_SAS_SMP_PASSTHRU
PCSMI_SAS_SMP_PASSTHRU_BUFFER	csmisas.h	/^  *PCSMI_SAS_SMP_PASSTHRU_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_SMP_PASSTHRU_BUFFER
PCSMI_SAS_SMP_REQUEST	csmisas.h	/^  *PCSMI_SAS_SMP_REQUEST;$/;"	t	typeref:struct:_CSMI_SAS_SMP_REQUEST
PCSMI_SAS_SMP_RESPONSE	csmisas.h	/^  *PCSMI_SAS_SMP_RESPONSE;$/;"	t	typeref:struct:_CSMI_SAS_SMP_RESPONSE
PCSMI_SAS_SSP_PASSTHRU	csmisas.h	/^  *PCSMI_SAS_SSP_PASSTHRU;$/;"	t	typeref:struct:_CSMI_SAS_SSP_PASSTHRU
PCSMI_SAS_SSP_PASSTHRU_BUFFER	csmisas.h	/^  *PCSMI_SAS_SSP_PASSTHRU_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_SSP_PASSTHRU_BUFFER
PCSMI_SAS_SSP_PASSTHRU_STATUS	csmisas.h	/^  *PCSMI_SAS_SSP_PASSTHRU_STATUS;$/;"	t	typeref:struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
PCSMI_SAS_SSP_TASK_IU	csmisas.h	/^  *PCSMI_SAS_SSP_TASK_IU;$/;"	t	typeref:struct:_CSMI_SAS_SSP_TASK_IU
PCSMI_SAS_SSP_TASK_IU_BUFFER	csmisas.h	/^  *PCSMI_SAS_SSP_TASK_IU_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_SSP_TASK_IU_BUFFER
PCSMI_SAS_STP_PASSTHRU	csmisas.h	/^  *PCSMI_SAS_STP_PASSTHRU;$/;"	t	typeref:struct:_CSMI_SAS_STP_PASSTHRU
PCSMI_SAS_STP_PASSTHRU_BUFFER	csmisas.h	/^  *PCSMI_SAS_STP_PASSTHRU_BUFFER;$/;"	t	typeref:struct:_CSMI_SAS_STP_PASSTHRU_BUFFER
PCSMI_SAS_STP_PASSTHRU_STATUS	csmisas.h	/^  *PCSMI_SAS_STP_PASSTHRU_STATUS;$/;"	t	typeref:struct:_CSMI_SAS_STP_PASSTHRU_STATUS
PC_CHANGEABLE	os_qnxnto.h	430;"	d
PC_CURRENT	os_qnxnto.h	429;"	d
PC_DEFAULT	os_qnxnto.h	431;"	d
PC_MSK	os_qnxnto.h	433;"	d
PC_SAVED	os_qnxnto.h	432;"	d
PERIPHERAL_DEVICE_PAGE	scsicmds.h	219;"	d
PERMUTE	getopt/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon92	file:
PHPT_CHANNEL_INFO	os_freebsd.h	/^} HPT_CHANNEL_INFO, *PHPT_CHANNEL_INFO;$/;"	t	typeref:struct:_HPT_CHANNEL_INFO
PHPT_CHANNEL_INFO_V2	os_freebsd.h	/^} HPT_CHANNEL_INFO_V2, *PHPT_CHANNEL_INFO_V2;$/;"	t	typeref:struct:_HPT_CHANNEL_INFO_V2
PHPT_IOCTL_PARAM	os_freebsd.h	/^} HPT_IOCTL_PARAM, *PHPT_IOCTL_PARAM;$/;"	t	typeref:struct:_HPT_IOCTL_PARAM
PHPT_PASS_THROUGH_HEADER	os_freebsd.h	/^HPT_PASS_THROUGH_HEADER, *PHPT_PASS_THROUGH_HEADER;$/;"	t	typeref:struct:_HPT_PASS_THROUGH_HEADER
PIDENTIFY	atacmds.h	/^  PIDENTIFY,$/;"	e	enum:__anon48
PIOCTL_HEADER	csmisas.h	/^  *PIOCTL_HEADER;$/;"	t	typeref:struct:_IOCTL_HEADER
PIOCTL_HEADER	csmisas.h	287;"	d
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	Makefile	/^PKG_CONFIG_PATH = $/;"	m
PMPORT_PER_CHANNEL	os_freebsd.h	576;"	d
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POWER_CONDITION_PAGE	scsicmds.h	230;"	d
PREV_BEGBUF_CONSTRAINT	regex/regex_internal.h	137;"	d
PREV_NEWLINE_CONSTRAINT	regex/regex_internal.h	135;"	d
PREV_NOTWORD_CONSTRAINT	regex/regex_internal.h	132;"	d
PREV_WORD_CONSTRAINT	regex/regex_internal.h	131;"	d
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRIOR_DATABASE	atacmds.h	/^  PRIOR_DATABASE,$/;"	e	enum:ata_vendor_def_prior
PRIOR_DEFAULT	atacmds.h	/^  PRIOR_DEFAULT,$/;"	e	enum:ata_vendor_def_prior
PRIOR_USER	atacmds.h	/^  PRIOR_USER$/;"	e	enum:ata_vendor_def_prior
PRId64	int64.h	64;"	d
PRId64	int64.h	72;"	d
PRIu64	int64.h	65;"	d
PRIu64	int64.h	76;"	d
PRIx64	int64.h	66;"	d
PRIx64	int64.h	80;"	d
PROGRAMS	Makefile	/^PROGRAMS = $(sbin_PROGRAMS)$/;"	m
PROTOCOL_SPECIFIC_LPAGE	scsicmds.h	196;"	d
PROTOCOL_SPECIFIC_LUN_PAGE	scsicmds.h	228;"	d
PROTOCOL_SPECIFIC_PORT_PAGE	scsicmds.h	229;"	d
PSCSI_REQUEST_BLOCK	aacraid.h	/^} SCSI_REQUEST_BLOCK, *PSCSI_REQUEST_BLOCK;$/;"	t	typeref:struct:_SCSI_REQUEST_BLOCK
Parameters	csmisas.h	/^   CSMI_SAS_SMP_PASSTHRU Parameters;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU_BUFFER
Parameters	csmisas.h	/^   CSMI_SAS_SSP_PASSTHRU Parameters;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_BUFFER
Parameters	csmisas.h	/^   CSMI_SAS_SSP_TASK_IU Parameters;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU_BUFFER
Parameters	csmisas.h	/^   CSMI_SAS_STP_PASSTHRU Parameters;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_BUFFER
Parameters	csmisas.h	/^   } Parameters;$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION	typeref:union:_CSMI_SAS_RAID_SET_OPERATION::__anon159
ParseConfigFile	smartd.cpp	/^static int ParseConfigFile(dev_config_vector & conf_entries, smart_devtype_list & scan_types)$/;"	f	file:
ParseConfigLine	smartd.cpp	/^static int ParseConfigLine(dev_config_vector & conf_entries, dev_config & default_conf,$/;"	f	file:
ParseOpts	smartd.cpp	/^static void ParseOpts(int argc, char **argv)$/;"	f	file:
ParseToken	smartd.cpp	/^static int ParseToken(char * token, dev_config & cfg, smart_devtype_list & scan_types)$/;"	f	file:
PathId	aacraid.h	/^    UCHAR PathId;                   \/\/ offset 5$/;"	m	struct:_SCSI_REQUEST_BLOCK
PathId	os_win32.cpp	/^  UCHAR PathId;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
PciAddress	csmisas.h	/^   CSMI_SAS_PCI_BUS_ADDRESS PciAddress;$/;"	m	union:_CSMI_SAS_IO_BUS_ADDRESS
PeripDev	cissio_freebsd.h	/^    } __packed PeripDev;$/;"	m	union:__anon98	typeref:struct:__anon98::__anon99
Phy	csmisas.h	/^   CSMI_SAS_PHY_ENTITY Phy[32];$/;"	m	struct:_CSMI_SAS_PHY_INFO
PhysDev	cissio_freebsd.h	/^    PhysDevAddr_struct	PhysDev;$/;"	m	union:__anon104
PhysDevAddr_struct	cissio_freebsd.h	/^} __packed PhysDevAddr_struct;$/;"	t	typeref:struct:__anon102
PreviousTaskFile	os_win32.cpp	/^  UCHAR PreviousTaskFile[8];$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
PrintGeneralSmartValues	ataprint.cpp	/^static void PrintGeneralSmartValues(const ata_smart_values *data, const ata_identify_device *drive,$/;"	f	file:
PrintHead	smartd.cpp	/^static void PrintHead()$/;"	f	file:
PrintLogDirectories	ataprint.cpp	/^static void PrintLogDirectories(const ata_smart_log_directory * gplogdir,$/;"	f	file:
PrintLogPages	ataprint.cpp	/^static void PrintLogPages(const char * type, const unsigned char * data,$/;"	f	file:
PrintOut	smartd.cpp	/^static void PrintOut(int priority, const char *fmt, ...){$/;"	f	file:
PrintSataPhyEventCounters	ataprint.cpp	/^static void PrintSataPhyEventCounters(const unsigned char * data, bool reset)$/;"	f	file:
PrintSmartAttribWithThres	ataprint.cpp	/^static void PrintSmartAttribWithThres(const ata_smart_values * data,$/;"	f	file:
PrintSmartCapability	ataprint.cpp	/^static void PrintSmartCapability(const ata_smart_values *data)$/;"	f	file:
PrintSmartConveyanceSelfTestPollingTime	ataprint.cpp	/^static void PrintSmartConveyanceSelfTestPollingTime(const ata_smart_values * data)$/;"	f	file:
PrintSmartErrorLogCapability	ataprint.cpp	/^static void PrintSmartErrorLogCapability(const ata_smart_values * data, const ata_identify_device * identity)$/;"	f	file:
PrintSmartErrorlog	ataprint.cpp	/^static int PrintSmartErrorlog(const ata_smart_errorlog *data,$/;"	f	file:
PrintSmartExtErrorLog	ataprint.cpp	/^static int PrintSmartExtErrorLog(ata_device * device,$/;"	f	file:
PrintSmartExtSelfTestLog	ataprint.cpp	/^static int PrintSmartExtSelfTestLog(const ata_smart_extselftestlog * log,$/;"	f	file:
PrintSmartExtendedSelfTestPollingTime	ataprint.cpp	/^static void PrintSmartExtendedSelfTestPollingTime(const ata_smart_values * data)$/;"	f	file:
PrintSmartOfflineCollectCap	ataprint.cpp	/^static void PrintSmartOfflineCollectCap(const ata_smart_values *data)$/;"	f	file:
PrintSmartOfflineStatus	ataprint.cpp	/^static void PrintSmartOfflineStatus(const ata_smart_values * data)$/;"	f	file:
PrintSmartSelfExecStatus	ataprint.cpp	/^static void PrintSmartSelfExecStatus(const ata_smart_values * data,$/;"	f	file:
PrintSmartShortSelfTestPollingTime	ataprint.cpp	/^static void PrintSmartShortSelfTestPollingTime(const ata_smart_values * data)$/;"	f	file:
PrintSmartTotalTimeCompleteOffline	ataprint.cpp	/^static void PrintSmartTotalTimeCompleteOffline (const ata_smart_values * data)$/;"	f	file:
PrintTestSchedule	smartd.cpp	/^static void PrintTestSchedule(const dev_config_vector & configs, dev_state_vector & states, const smart_device_list & devices)$/;"	f	file:
PrintValidArgs	smartd.cpp	/^static void PrintValidArgs(char opt)$/;"	f	file:
ProductIdOffset	os_win32.cpp	/^  ULONG ProductIdOffset;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
ProductRevisionOffset	os_win32.cpp	/^  ULONG ProductRevisionOffset;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
PropertyExistsQuery	os_win32.cpp	/^  PropertyExistsQuery,$/;"	e	enum:_STORAGE_QUERY_TYPE	file:
PropertyId	os_win32.cpp	/^  STORAGE_PROPERTY_ID PropertyId;$/;"	m	struct:_STORAGE_PROPERTY_QUERY	file:
PropertyMaskQuery	os_win32.cpp	/^  PropertyMaskQuery,$/;"	e	enum:_STORAGE_QUERY_TYPE	file:
PropertyQueryMaxDefined	os_win32.cpp	/^  PropertyQueryMaxDefined$/;"	e	enum:_STORAGE_QUERY_TYPE	file:
PropertyStandardQuery	os_win32.cpp	/^  PropertyStandardQuery = 0,$/;"	e	enum:_STORAGE_QUERY_TYPE	file:
Protect	csmisas.h	/^       CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO Protect;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
QueryType	os_win32.cpp	/^  STORAGE_QUERY_TYPE QueryType;$/;"	m	struct:_STORAGE_PROPERTY_QUERY	file:
QueueAction	aacraid.h	/^    UCHAR QueueAction;              \/\/ offset 9$/;"	m	struct:_SCSI_REQUEST_BLOCK
QueueId	os_win32.cpp	/^  ULONG QueueId; \/\/ 0=AdminQ$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
QueueSortKey	aacraid.h	/^        ULONG QueueSortKey;         \/\/ offset 2c$/;"	m	union:_SCSI_REQUEST_BLOCK::__anon140
QueueTag	aacraid.h	/^    UCHAR QueueTag;                 \/\/ offset 8$/;"	m	struct:_SCSI_REQUEST_BLOCK
RAWFMT_DEFAULT	atacmds.h	/^  RAWFMT_DEFAULT,$/;"	e	enum:ata_attr_raw_format
RAWFMT_HALFMIN2HOUR	atacmds.h	/^  RAWFMT_HALFMIN2HOUR,$/;"	e	enum:ata_attr_raw_format
RAWFMT_HEX48	atacmds.h	/^  RAWFMT_HEX48,$/;"	e	enum:ata_attr_raw_format
RAWFMT_HEX56	atacmds.h	/^  RAWFMT_HEX56,$/;"	e	enum:ata_attr_raw_format
RAWFMT_HEX64	atacmds.h	/^  RAWFMT_HEX64,$/;"	e	enum:ata_attr_raw_format
RAWFMT_MIN2HOUR	atacmds.h	/^  RAWFMT_MIN2HOUR,$/;"	e	enum:ata_attr_raw_format
RAWFMT_MSEC24_HOUR32	atacmds.h	/^  RAWFMT_MSEC24_HOUR32,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW16	atacmds.h	/^  RAWFMT_RAW16,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW16_OPT_AVG16	atacmds.h	/^  RAWFMT_RAW16_OPT_AVG16,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW16_OPT_RAW16	atacmds.h	/^  RAWFMT_RAW16_OPT_RAW16,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW24_DIV_RAW24	atacmds.h	/^  RAWFMT_RAW24_DIV_RAW24,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW24_DIV_RAW32	atacmds.h	/^  RAWFMT_RAW24_DIV_RAW32,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW24_OPT_RAW8	atacmds.h	/^  RAWFMT_RAW24_OPT_RAW8,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW48	atacmds.h	/^  RAWFMT_RAW48,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW56	atacmds.h	/^  RAWFMT_RAW56,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW64	atacmds.h	/^  RAWFMT_RAW64,$/;"	e	enum:ata_attr_raw_format
RAWFMT_RAW8	atacmds.h	/^  RAWFMT_RAW8,$/;"	e	enum:ata_attr_raw_format
RAWFMT_SEC2HOUR	atacmds.h	/^  RAWFMT_SEC2HOUR,$/;"	e	enum:ata_attr_raw_format
RAWFMT_TEMP10X	atacmds.h	/^  RAWFMT_TEMP10X,$/;"	e	enum:ata_attr_raw_format
RAWFMT_TEMPMINMAX	atacmds.h	/^  RAWFMT_TEMPMINMAX,$/;"	e	enum:ata_attr_raw_format
RDCD_EST_ANY_SECTOR	os_qnxnto.h	707;"	d
RDCD_EST_CDDA_SECTOR	os_qnxnto.h	708;"	d
RDCD_EST_MSK	os_qnxnto.h	713;"	d
RDCD_EST_XA_FORM2_SECTOR	os_qnxnto.h	712;"	d
RDCD_EST_XA_SECTOR	os_qnxnto.h	711;"	d
RDCD_EST_YELLOW_MODE1_SECTOR	os_qnxnto.h	709;"	d
RDCD_EST_YELLOW_MODE2_SECTOR	os_qnxnto.h	710;"	d
RDCD_FLG_CD_BLOCK_ERR	os_qnxnto.h	721;"	d
RDCD_FLG_CD_ERR	os_qnxnto.h	720;"	d
RDCD_FLG_ECC	os_qnxnto.h	719;"	d
RDCD_FLG_HC_ALL_HEADERS	os_qnxnto.h	725;"	d
RDCD_FLG_HC_HDR	os_qnxnto.h	723;"	d
RDCD_FLG_HC_NONE	os_qnxnto.h	722;"	d
RDCD_FLG_HC_SUBHEADER	os_qnxnto.h	724;"	d
RDCD_FLG_SYNC	os_qnxnto.h	717;"	d
RDCD_FLG_UDATA	os_qnxnto.h	718;"	d
RD_OPT_MEDIA	os_qnxnto.h	866;"	d
READ_CAPACITY_10	scsicmds.h	89;"	d
READ_CAPACITY_16	scsicmds.h	92;"	d
READ_DEFECT_10	scsicmds.h	77;"	d
READ_DEFECT_12	scsicmds.h	80;"	d
READ_ERROR_COUNTER_LPAGE	scsicmds.h	182;"	d
READ_LOG	atacmds.h	/^  READ_LOG,$/;"	e	enum:__anon48
READ_REVERSE_ERROR_COUNTER_LPAGE	scsicmds.h	183;"	d
READ_THRESHOLDS	atacmds.h	/^  READ_THRESHOLDS,$/;"	e	enum:__anon48
READ_VALUES	atacmds.h	/^  READ_VALUES,$/;"	e	enum:__anon48
READ_WRITE_ERROR_RECOVERY_PAGE	scsicmds.h	212;"	d
RECEIVE_DIAGNOSTIC	scsicmds.h	71;"	d
REGS_FIXED	regex/regex.h	377;"	d
REGS_REALLOCATE	regex/regex.h	376;"	d
REGS_UNALLOCATED	regex/regex.h	375;"	d
REG_BADBR	regex/regex.h	/^  REG_BADBR,		\/* Invalid contents of \\{\\}.  *\/$/;"	e	enum:__anon130
REG_BADBR_IDX	regex/regcomp.c	162;"	d	file:
REG_BADPAT	regex/regex.h	/^  REG_BADPAT,		\/* Invalid pattern.  *\/$/;"	e	enum:__anon130
REG_BADPAT_IDX	regex/regcomp.c	138;"	d	file:
REG_BADRPT	regex/regex.h	/^  REG_BADRPT,		\/* No preceding re for repetition op.  *\/$/;"	e	enum:__anon130
REG_BADRPT_IDX	regex/regcomp.c	171;"	d	file:
REG_EBRACE	regex/regex.h	/^  REG_EBRACE,		\/* Unmatched \\{.  *\/$/;"	e	enum:__anon130
REG_EBRACE_IDX	regex/regcomp.c	159;"	d	file:
REG_EBRACK	regex/regex.h	/^  REG_EBRACK,		\/* Unmatched left bracket.  *\/$/;"	e	enum:__anon130
REG_EBRACK_IDX	regex/regcomp.c	153;"	d	file:
REG_ECOLLATE	regex/regex.h	/^  REG_ECOLLATE,		\/* Not implemented.  *\/$/;"	e	enum:__anon130
REG_ECOLLATE_IDX	regex/regcomp.c	141;"	d	file:
REG_ECTYPE	regex/regex.h	/^  REG_ECTYPE,		\/* Invalid character class name.  *\/$/;"	e	enum:__anon130
REG_ECTYPE_IDX	regex/regcomp.c	144;"	d	file:
REG_EEND	regex/regex.h	/^  REG_EEND,		\/* Premature end.  *\/$/;"	e	enum:__anon130
REG_EEND_IDX	regex/regcomp.c	174;"	d	file:
REG_EESCAPE	regex/regex.h	/^  REG_EESCAPE,		\/* Trailing backslash.  *\/$/;"	e	enum:__anon130
REG_EESCAPE_IDX	regex/regcomp.c	147;"	d	file:
REG_ENOSYS	regex/regex.h	/^  REG_ENOSYS = -1,	\/* This will never happen for this implementation.  *\/$/;"	e	enum:__anon130
REG_EPAREN	regex/regex.h	/^  REG_EPAREN,		\/* Parenthesis imbalance.  *\/$/;"	e	enum:__anon130
REG_EPAREN_IDX	regex/regcomp.c	156;"	d	file:
REG_ERANGE	regex/regex.h	/^  REG_ERANGE,		\/* Invalid range end.  *\/$/;"	e	enum:__anon130
REG_ERANGE_IDX	regex/regcomp.c	165;"	d	file:
REG_ERPAREN	regex/regex.h	/^  REG_ERPAREN		\/* Unmatched ) or \\); not returned from regcomp.  *\/$/;"	e	enum:__anon130
REG_ERPAREN_IDX	regex/regcomp.c	180;"	d	file:
REG_ESIZE	regex/regex.h	/^  REG_ESIZE,		\/* Compiled pattern bigger than 2^16 bytes.  *\/$/;"	e	enum:__anon130
REG_ESIZE_IDX	regex/regcomp.c	177;"	d	file:
REG_ESPACE	regex/regex.h	/^  REG_ESPACE,		\/* Ran out of memory.  *\/$/;"	e	enum:__anon130
REG_ESPACE_IDX	regex/regcomp.c	168;"	d	file:
REG_ESUBREG	regex/regex.h	/^  REG_ESUBREG,		\/* Invalid back reference.  *\/$/;"	e	enum:__anon130
REG_ESUBREG_IDX	regex/regcomp.c	150;"	d	file:
REG_EXTENDED	regex/regex.h	262;"	d
REG_ICASE	regex/regex.h	266;"	d
REG_NEWLINE	regex/regex.h	271;"	d
REG_NOERROR	regex/regex.h	/^  REG_NOERROR = 0,	\/* Success.  *\/$/;"	e	enum:__anon130
REG_NOERROR_IDX	regex/regcomp.c	132;"	d	file:
REG_NOMATCH	regex/regex.h	/^  REG_NOMATCH,		\/* Didn't find a match (for regexec).  *\/$/;"	e	enum:__anon130
REG_NOMATCH_IDX	regex/regcomp.c	135;"	d	file:
REG_NOSUB	regex/regex.h	275;"	d
REG_NOTBOL	regex/regex.h	285;"	d
REG_NOTEOL	regex/regex.h	288;"	d
REPORT_LUNS	scsicmds.h	86;"	d
REQUEST_SENSE	scsicmds.h	68;"	d
REQUIRE_ORDER	getopt/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon92	file:
RETURN_IN_ORDER	getopt/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon92	file:
RE_BACKSLASH_ESCAPE_IN_LISTS	regex/regex.h	55;"	d
RE_BK_PLUS_QM	regex/regex.h	60;"	d
RE_CHAR_CLASSES	regex/regex.h	66;"	d
RE_CONTEXT_INDEP_ANCHORS	regex/regex.h	80;"	d
RE_CONTEXT_INDEP_OPS	regex/regex.h	88;"	d
RE_CONTEXT_INVALID_OPS	regex/regex.h	92;"	d
RE_DEBUG	regex/regex.h	160;"	d
RE_DOT_NEWLINE	regex/regex.h	96;"	d
RE_DOT_NOT_NULL	regex/regex.h	100;"	d
RE_DUP_MAX	regex/regex.h	252;"	d
RE_DUP_MAX	regex/regex.h	255;"	d
RE_ENABLE_I18N	regex/regex_internal.h	78;"	d
RE_HAT_LISTS_NOT_NEWLINE	regex/regex.h	104;"	d
RE_ICASE	regex/regex.h	169;"	d
RE_INTERVALS	regex/regex.h	109;"	d
RE_INVALID_INTERVAL_ORD	regex/regex.h	165;"	d
RE_LIMITED_OPS	regex/regex.h	113;"	d
RE_NEWLINE_ALT	regex/regex.h	117;"	d
RE_NO_BK_BRACES	regex/regex.h	122;"	d
RE_NO_BK_PARENS	regex/regex.h	126;"	d
RE_NO_BK_REFS	regex/regex.h	130;"	d
RE_NO_BK_VBAR	regex/regex.h	134;"	d
RE_NO_EMPTY_RANGES	regex/regex.h	140;"	d
RE_NO_GNU_OPS	regex/regex.h	152;"	d
RE_NO_POSIX_BACKTRACKING	regex/regex.h	148;"	d
RE_NREGS	regex/regex.h	421;"	d
RE_SYNTAX_AWK	regex/regex.h	183;"	d
RE_SYNTAX_ED	regex/regex.h	215;"	d
RE_SYNTAX_EGREP	regex/regex.h	204;"	d
RE_SYNTAX_EMACS	regex/regex.h	181;"	d
RE_SYNTAX_GNU_AWK	regex/regex.h	190;"	d
RE_SYNTAX_GREP	regex/regex.h	199;"	d
RE_SYNTAX_POSIX_AWK	regex/regex.h	195;"	d
RE_SYNTAX_POSIX_BASIC	regex/regex.h	224;"	d
RE_SYNTAX_POSIX_EGREP	regex/regex.h	210;"	d
RE_SYNTAX_POSIX_EXTENDED	regex/regex.h	233;"	d
RE_SYNTAX_POSIX_MINIMAL_BASIC	regex/regex.h	230;"	d
RE_SYNTAX_POSIX_MINIMAL_EXTENDED	regex/regex.h	241;"	d
RE_SYNTAX_SED	regex/regex.h	217;"	d
RE_TRANSLATE_TYPE	regex/regex.h	330;"	d
RE_UNMATCHED_RIGHT_PAREN_ORD	regex/regex.h	144;"	d
RIGID_DISK_DRIVE_GEOMETRY_PAGE	scsicmds.h	215;"	d
RP_OPT_BT	os_qnxnto.h	816;"	d
RP_OPT_LNG	os_qnxnto.h	817;"	d
RP_OPT_TCLP	os_qnxnto.h	818;"	d
RSCHNL_DATA_SUBQ	os_qnxnto.h	682;"	d
RSCHNL_OPT_MSF	os_qnxnto.h	680;"	d
RTOC_CNTL_FMT_SESSION	os_qnxnto.h	598;"	d
RTOC_FMT_ATIP	os_qnxnto.h	590;"	d
RTOC_FMT_CDTEXT	os_qnxnto.h	591;"	d
RTOC_FMT_QSUBCHNL	os_qnxnto.h	589;"	d
RTOC_FMT_QSUBCODE	os_qnxnto.h	588;"	d
RTOC_FMT_SESSION	os_qnxnto.h	587;"	d
RTOC_FMT_TOC	os_qnxnto.h	586;"	d
RTOC_OPT_MSF	os_qnxnto.h	584;"	d
RW_OPT_CORRCT	os_qnxnto.h	355;"	d
RW_OPT_DPO	os_qnxnto.h	357;"	d
RW_OPT_FUA	os_qnxnto.h	356;"	d
RW_OPT_RELADR	os_qnxnto.h	354;"	d
RaidSetList	csmisas.h	/^       CSMI_SAS_RAID_SET_LIST RaidSetList[1];$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon159
RaidType	csmisas.h	/^   CSMI_SAS_RAID_TYPE_DESCRIPTION RaidType[24];$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
RawDeviceProperties	os_win32.cpp	/^  UCHAR RawDeviceProperties[1];$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
RawPropertiesLength	os_win32.cpp	/^  ULONG RawPropertiesLength;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
ReadECounterPageSupported	smartd.cpp	/^  unsigned char ReadECounterPageSupported;$/;"	m	struct:temp_dev_state	file:
ReadOrMakeConfigEntries	smartd.cpp	/^static int ReadOrMakeConfigEntries(dev_config_vector & conf_entries, smart_device_list & scanned_devs)$/;"	f	file:
ReadSiteDefaultTimezone	utility.cpp	/^static char *ReadSiteDefaultTimezone(){$/;"	f	file:
Reference	csmisas.h	/^   CSMI_SAS_CONNECTOR_INFO Reference[32];$/;"	m	struct:_CSMI_SAS_CONNECTOR_INFO_BUFFER
RegisterDevices	smartd.cpp	/^static void RegisterDevices(const dev_config_vector & conf_entries, smart_device_list & scanned_devs,$/;"	f	file:
RegisterEventSourceA	os_win32/syslog_win32.cpp	74;"	d	file:
RemovableMedia	os_win32.cpp	/^  BOOLEAN RemovableMedia;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
RemovePidFile	smartd.cpp	/^static void RemovePidFile()$/;"	f	file:
ReportEventA	os_win32/syslog_win32.cpp	73;"	d	file:
ReportLunData_struct	cciss.cpp	/^} ReportLunData_struct;$/;"	t	typeref:struct:_ReportLUNdata_struct	file:
Request	cissio_freebsd.h	/^    RequestBlock_struct	Request;	\/* 20 *\/$/;"	m	struct:__anon111
Request	cissio_freebsd.h	/^    RequestBlock_struct	Request;	\/* 20 *\/$/;"	m	struct:__anon112
Request	csmisas.h	/^   CSMI_SAS_SMP_REQUEST Request;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
RequestBlock_struct	cissio_freebsd.h	/^} __packed RequestBlock_struct;$/;"	t	typeref:struct:__anon105
Reserved	aacraid.h	/^    ULONG Reserved;$/;"	m	struct:_SCSI_REQUEST_BLOCK
Reserved	cissio_freebsd.h	/^	u_int8_t	Reserved[2];$/;"	m	struct:__anon107::__anon109
Reserved	cissio_freebsd.h	/^	u_int8_t	Reserved[3];$/;"	m	struct:__anon107::__anon108
ReservedAsUchar	os_win32.cpp	/^  UCHAR ReservedAsUchar;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
ReservedAsUlong	os_win32.cpp	/^  ULONG ReservedAsUlong;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
ResidualCnt	cissio_freebsd.h	/^    u_int32_t		ResidualCnt;$/;"	m	struct:__anon110
Response	csmisas.h	/^   CSMI_SAS_SMP_RESPONSE Response;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
ReturnBufferLen	os_win32.cpp	/^  ULONG ReturnBufferLen; \/\/ offsetof(DataBuffer), plus sizeof(DataBuffer) if Data Out$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
ReturnCode	csmisas.h	/^    __u32 ReturnCode;$/;"	m	struct:_IOCTL_HEADER
ReturnCode	dev_areca.h	/^  unsigned int ReturnCode;$/;"	m	struct:_ARCMSR_IO_HDR
SAI_READ_CAPACITY_16	scsicmds.h	95;"	d
SAT_ATA_PASSTHROUGH_12	scsicmds.h	99;"	d
SAT_ATA_PASSTHROUGH_12LEN	scsiata.cpp	95;"	d	file:
SAT_ATA_PASSTHROUGH_16	scsicmds.h	102;"	d
SAT_ATA_PASSTHROUGH_16LEN	scsiata.cpp	96;"	d	file:
SBC_MAX	regex/regex_internal.h	91;"	d
SB_CHAR	regex/regex_internal.h	/^  SB_CHAR,$/;"	e	enum:__anon127
SCANDIRECTIVE	smartd.cpp	4390;"	d	file:
SCRIPTS	Makefile	/^SCRIPTS = $(examples_SCRIPTS) $(sbin_SCRIPTS) $(smartdscript_SCRIPTS)$/;"	m
SCSI3Addr_struct	cissio_freebsd.h	/^} SCSI3Addr_struct;$/;"	t	typeref:union:__anon98
SCSI3Lun	cissio_freebsd.h	/^    SCSI3Addr_struct	SCSI3Lun[4];$/;"	m	union:__anon104
SCSICMDS_H_	scsicmds.h	31;"	d
SCSICMDS_H_CVSID	scsicmds.h	33;"	d
SCSICheckDevice	smartd.cpp	/^static int SCSICheckDevice(const dev_config & cfg, dev_state & state, scsi_device * scsidev, bool allow_selftests)$/;"	f	file:
SCSIDeviceScan	smartd.cpp	/^static int SCSIDeviceScan(dev_config & cfg, dev_state & state, scsi_device * scsidev)$/;"	f	file:
SCSIPRINT_H_CVSID	scsiprint.h	32;"	d
SCSI_ASCQ_ATA_PASS_THROUGH	scsicmds.h	279;"	d
SCSI_ASC_IMPENDING_FAILURE	scsicmds.h	277;"	d
SCSI_ASC_INVALID_FIELD	scsicmds.h	274;"	d
SCSI_ASC_NOT_READY	scsicmds.h	271;"	d
SCSI_ASC_NO_MEDIUM	scsicmds.h	272;"	d
SCSI_ASC_UNKNOWN_OPCODE	scsicmds.h	273;"	d
SCSI_ASC_UNKNOWN_PARAM	scsicmds.h	275;"	d
SCSI_ASC_WARNING	scsicmds.h	276;"	d
SCSI_DIAG_ABORT_SELF_TEST	scsicmds.h	303;"	d
SCSI_DIAG_BG_EXTENDED_SELF_TEST	scsicmds.h	300;"	d
SCSI_DIAG_BG_SHORT_SELF_TEST	scsicmds.h	299;"	d
SCSI_DIAG_DEF_SELF_TEST	scsicmds.h	298;"	d
SCSI_DIAG_FG_EXTENDED_SELF_TEST	scsicmds.h	302;"	d
SCSI_DIAG_FG_SHORT_SELF_TEST	scsicmds.h	301;"	d
SCSI_DIAG_NO_SELF_TEST	scsicmds.h	297;"	d
SCSI_IECMP_RAW_LEN	scsicmds.h	142;"	d
SCSI_IEC_MP_BYTE2_ENABLED	scsicmds.cpp	1376;"	d	file:
SCSI_IEC_MP_BYTE2_TEST_MASK	scsicmds.cpp	1377;"	d	file:
SCSI_IEC_MP_INTERVAL_T	scsicmds.cpp	1380;"	d	file:
SCSI_IEC_MP_MRIE	scsicmds.cpp	1379;"	d	file:
SCSI_IEC_MP_REPORT_COUNT	scsicmds.cpp	1381;"	d	file:
SCSI_IOCTL_SEND_COMMAND	os_linux.cpp	510;"	d	file:
SCSI_PASS_THROUGH_DIRECT_WITH_BUFFER	os_win32.cpp	/^} SCSI_PASS_THROUGH_DIRECT_WITH_BUFFER;$/;"	t	namespace:os_win32	typeref:struct:os_win32::__anon94	file:
SCSI_PRINT_H_	scsiprint.h	30;"	d
SCSI_PT_CDROM	scsicmds.h	174;"	d
SCSI_PT_DIRECT_ACCESS	scsicmds.h	172;"	d
SCSI_PT_ENCLOSURE	scsicmds.h	176;"	d
SCSI_PT_MEDIUM_CHANGER	scsicmds.h	175;"	d
SCSI_PT_SEQUENTIAL_ACCESS	scsicmds.h	173;"	d
SCSI_REQUEST_BLOCK	aacraid.h	/^} SCSI_REQUEST_BLOCK, *PSCSI_REQUEST_BLOCK;$/;"	t	typeref:struct:_SCSI_REQUEST_BLOCK
SCSI_REQUEST_BLOCK_SIZE	aacraid.h	115;"	d
SCSI_SENSE	os_qnxnto.h	/^} SCSI_SENSE;$/;"	t	typeref:struct:_scsi_sense
SCSI_SENSE_DESCRIPTOR	os_qnxnto.h	/^} SCSI_SENSE_DESCRIPTOR;$/;"	t	typeref:struct:_scsi_sense_descriptor
SCSI_SENSE_DESCRIPTOR_HEADER	os_qnxnto.h	/^} SCSI_SENSE_DESCRIPTOR_HEADER;$/;"	t	typeref:struct:_scsi_sense_desriptor_header
SCSI_SK_ABORTED_COMMAND	scsicmds.h	268;"	d
SCSI_SK_HARDWARE_ERROR	scsicmds.h	265;"	d
SCSI_SK_ILLEGAL_REQUEST	scsicmds.h	266;"	d
SCSI_SK_MEDIUM_ERROR	scsicmds.h	264;"	d
SCSI_SK_NOT_READY	scsicmds.h	263;"	d
SCSI_SK_NO_SENSE	scsicmds.h	261;"	d
SCSI_SK_RECOVERED_ERR	scsicmds.h	262;"	d
SCSI_SK_UNIT_ATTENTION	scsicmds.h	267;"	d
SCSI_STATUS_CHECK_CONDITION	scsicmds.h	258;"	d
SCSI_TIMEOUT_DEFAULT	scsicmds.h	307;"	d
SCSI_TIMEOUT_SELF_TEST	scsicmds.h	309;"	d
SCSI_VPD_ATA_INFORMATION	scsicmds.h	250;"	d
SCSI_VPD_BLOCK_DEVICE_CHARACTERISTICS	scsicmds.h	254;"	d
SCSI_VPD_BLOCK_LIMITS	scsicmds.h	253;"	d
SCSI_VPD_DEVICE_IDENTIFICATION	scsicmds.h	248;"	d
SCSI_VPD_EXTENDED_INQUIRY_DATA	scsicmds.h	249;"	d
SCSI_VPD_LOGICAL_BLOCK_PROVISIONING	scsicmds.h	255;"	d
SCSI_VPD_POWER_CONDITION	scsicmds.h	251;"	d
SCSI_VPD_POWER_CONSUMPTION	scsicmds.h	252;"	d
SCSI_VPD_SUPPORTED_VPD_PAGES	scsicmds.h	246;"	d
SCSI_VPD_UNIT_SERIAL_NUMBER	scsicmds.h	247;"	d
SC_ATA_PT16	os_qnxnto.h	76;"	d
SC_OPT_IMMED	os_qnxnto.h	506;"	d
SC_OPT_RELADR	os_qnxnto.h	505;"	d
SEAGATE_CACHE_LPAGE	scsicmds.h	200;"	d
SEAGATE_FACTORY_LPAGE	scsicmds.h	201;"	d
SELECTIVE_CAPTIVE_SELF_TEST	atacmds.h	120;"	d
SELECTIVE_FLAG_ACTIVE	atacmds.h	515;"	d
SELECTIVE_FLAG_DOSCAN	atacmds.h	513;"	d
SELECTIVE_FLAG_PENDING	atacmds.h	514;"	d
SELECTIVE_SELF_TEST	atacmds.h	115;"	d
SELECT_WIN_32_64	os_win32.cpp	103;"	d	file:
SELECT_WIN_32_64	os_win32.cpp	105;"	d	file:
SELFTEST_ERRORCOUNT	smartd.cpp	1623;"	d	file:
SELFTEST_ERRORHOURS	smartd.cpp	1624;"	d	file:
SELFTEST_RESULTS_LPAGE	scsicmds.h	192;"	d
SEL_CONT	atacmds.h	/^  SEL_CONT   \/\/ redo or next depending of last test status$/;"	e	enum:__anon49
SEL_NEXT	atacmds.h	/^  SEL_NEXT,  \/\/ do next range$/;"	e	enum:__anon49
SEL_RANGE	atacmds.h	/^  SEL_RANGE, \/\/ MIN-MAX$/;"	e	enum:__anon49
SEL_REDO	atacmds.h	/^  SEL_REDO,  \/\/ redo this$/;"	e	enum:__anon49
SENDCMDINPARAMS_EX	os_win32.cpp	/^} SENDCMDINPARAMS_EX;$/;"	t	typeref:struct:_SENDCMDINPARAMS_EX	file:
SEND_DIAGNOSTIC	scsicmds.h	74;"	d
SEND_IOCTL_RESP_SENSE_LEN	cciss.cpp	59;"	d	file:
SEND_IOCTL_RESP_SENSE_LEN	os_linux.cpp	499;"	d	file:
SENSEINFOBYTES	cissio_freebsd.h	68;"	d
SENSE_DATA_FMT_DESCRIPTOR	os_qnxnto.h	125;"	d
SENSE_DTYPE_ATA	os_qnxnto.h	189;"	d
SENSE_DTYPE_BLOCK	os_qnxnto.h	185;"	d
SENSE_DTYPE_CSI	os_qnxnto.h	181;"	d
SENSE_DTYPE_FRU	os_qnxnto.h	183;"	d
SENSE_DTYPE_INFORMATION	os_qnxnto.h	180;"	d
SENSE_DTYPE_OSD_ATR_IDENT	os_qnxnto.h	188;"	d
SENSE_DTYPE_OSD_INTEGRITY	os_qnxnto.h	187;"	d
SENSE_DTYPE_OSD_OBJ_IDENT	os_qnxnto.h	186;"	d
SENSE_DTYPE_SKS	os_qnxnto.h	182;"	d
SENSE_DTYPE_STREAM	os_qnxnto.h	184;"	d
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SG_IO_PRESENT_NO	os_linux.cpp	515;"	d	file:
SG_IO_PRESENT_UNKNOWN	os_linux.cpp	513;"	d	file:
SG_IO_PRESENT_YES	os_linux.cpp	514;"	d	file:
SG_IO_RESP_SENSE_LEN	os_linux.cpp	500;"	d	file:
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHORT_CAPTIVE_SELF_TEST	atacmds.h	117;"	d
SHORT_SELF_TEST	atacmds.h	112;"	d
SIGHUP	os_win32/daemon_win32.h	26;"	d
SIGNALFN	smartd.cpp	84;"	d	file:
SIGNALFN	smartd.cpp	86;"	d	file:
SIGNALFN	smartd.cpp	92;"	d	file:
SIGNALFN	smartd.cpp	93;"	d	file:
SIGQUIT	smartd.cpp	97;"	d	file:
SIGQUIT_KEYNAME	smartd.cpp	100;"	d	file:
SIGQUIT_KEYNAME	smartd.cpp	98;"	d	file:
SIGUSR1	os_win32/daemon_win32.h	27;"	d
SIGUSR2	os_win32/daemon_win32.h	28;"	d
SIMPLE_BRACKET	regex/regex_internal.h	/^  SIMPLE_BRACKET,$/;"	e	enum:__anon117
SIMPLE_ERR_ABORTED_COMMAND	scsicmds.h	293;"	d
SIMPLE_ERR_BAD_FIELD	scsicmds.h	285;"	d
SIMPLE_ERR_BAD_OPCODE	scsicmds.h	284;"	d
SIMPLE_ERR_BAD_PARAM	scsicmds.h	286;"	d
SIMPLE_ERR_BAD_RESP	scsicmds.h	287;"	d
SIMPLE_ERR_BECOMING_READY	scsicmds.h	289;"	d
SIMPLE_ERR_MEDIUM_HARDWARE	scsicmds.h	291;"	d
SIMPLE_ERR_NOT_READY	scsicmds.h	283;"	d
SIMPLE_ERR_NO_MEDIUM	scsicmds.h	288;"	d
SIMPLE_ERR_TRY_AGAIN	scsicmds.h	290;"	d
SIMPLE_ERR_UNKNOWN	scsicmds.h	292;"	d
SIMPLE_NO_ERROR	scsicmds.h	282;"	d
SK_BLNK_CHK	os_qnxnto.h	268;"	d
SK_CMD_ABORT	os_qnxnto.h	271;"	d
SK_CPY_ABORT	os_qnxnto.h	270;"	d
SK_DATA_PROT	os_qnxnto.h	265;"	d
SK_EQUAL	os_qnxnto.h	272;"	d
SK_HARDWARE	os_qnxnto.h	244;"	d
SK_ILLEGAL	os_qnxnto.h	249;"	d
SK_MEDIUM	os_qnxnto.h	237;"	d
SK_MISCMP	os_qnxnto.h	274;"	d
SK_MSK	os_qnxnto.h	212;"	d
SK_NOT_RDY	os_qnxnto.h	224;"	d
SK_NO_SENSE	os_qnxnto.h	214;"	d
SK_RECOVERED	os_qnxnto.h	220;"	d
SK_RESERVED	os_qnxnto.h	275;"	d
SK_UNIT_ATN	os_qnxnto.h	258;"	d
SK_VENDOR	os_qnxnto.h	269;"	d
SK_VOL_OFL	os_qnxnto.h	273;"	d
SLOT_NUMBER_UNKNOWN	csmisas.h	999;"	d
SMARTCTL_H_	smartctl.h	27;"	d
SMARTCTL_H_CVSID	smartctl.h	29;"	d
SMARTD_ADDRCSV	os_win32/smartd_warning.cmd	/^if not "%SMARTD_ADDRESS%" == "" set SMARTD_ADDRCSV=%SMARTD_ADDRESS: =,%$/;"	v
SMARTD_ADDRCSV	os_win32/smartd_warning.cmd	/^set SMARTD_ADDRCSV=$/;"	v
SMARTD_ADDRESS	os_win32/smartd_warning.cmd	/^  echo set SMARTD_ADDRESS='Space separated mail adresses, empty if none'$/;"	v
SMARTD_ADDRESS	os_win32/smartd_warning.cmd	/^  for \/F "tokens=1*" %%a in ("%SMARTD_ADDRESS%") do (set SMARTD_ADDRESS=%%b)$/;"	v
SMARTD_DEVICE	os_win32/smartd_warning.cmd	/^  echo :: set SMARTD_DEVICE='Device name'$/;"	v
SMARTD_DEVICEINFO	os_win32/smartd_warning.cmd	/^  echo set SMARTD_DEVICEINFO='Device identify information'$/;"	v
SMARTD_DEVICESTRING	os_win32/smartd_warning.cmd	/^  echo :: set SMARTD_DEVICESTRING='Annotated device name'$/;"	v
SMARTD_DEVICETYPE	os_win32/smartd_warning.cmd	/^  echo :: set SMARTD_DEVICETYPE='Device type from -d directive, "auto" if none'$/;"	v
SMARTD_FAILTYPE	os_win32/smartd_warning.cmd	/^  echo set SMARTD_FAILTYPE='Type of failure, "EMailTest" for tests'$/;"	v
SMARTD_FULLMSGFILE	os_win32/smartd_warning.cmd	/^if     "%TMP%" == "" set SMARTD_FULLMSGFILE=smartd_warning-%RANDOM%.txt$/;"	v
SMARTD_FULLMSGFILE	os_win32/smartd_warning.cmd	/^if not "%TMP%" == "" set SMARTD_FULLMSGFILE=%TMP%\\smartd_warning-%RANDOM%.txt$/;"	v
SMARTD_MAILER	os_win32/smartd_warning.cmd	/^  echo set SMARTD_MAILER='Path to external script, empty for "blat"'$/;"	v
SMARTD_MAILER	os_win32/smartd_warning.cmd	/^if not "%SMARTD_ADDRESS%" == "" if "%SMARTD_MAILER%" == "" set SMARTD_MAILER=blat$/;"	v
SMARTD_MESSAGE	os_win32/smartd_warning.cmd	/^  echo set SMARTD_MESSAGE='Error Message'$/;"	v
SMARTD_NEXTDAYS	os_win32/smartd_warning.cmd	/^  echo set SMARTD_NEXTDAYS='Number of days until next message, empty if none'$/;"	v
SMARTD_NMAIL	smartd.cpp	/^static const int SMARTD_NMAIL = 13;$/;"	v	file:
SMARTD_PREVCNT	os_win32/smartd_warning.cmd	/^  echo set SMARTD_PREVCNT='Number of previous messages, 0 if none'$/;"	v
SMARTD_SUBJECT	os_win32/smartd_warning.cmd	/^set SMARTD_SUBJECT=SMART error (%SMARTD_FAILTYPE%) detected on host: %COMPUTERNAME%$/;"	v
SMARTD_TFIRST	os_win32/smartd_warning.cmd	/^  echo set SMARTD_TFIRST='Date of first message sent, empty if none'$/;"	v
SMARTD_TFIRSTEPOCH	os_win32/smartd_warning.cmd	/^  echo :: set SMARTD_TFIRSTEPOCH='time_t format of above'$/;"	v
SMARTMONTOOLS_BUILD_HOST	config.h	155;"	d
SMARTMONTOOLS_CONFIGURE_ARGS	config.h	158;"	d
SMARTMONTOOLS_RELEASE_DATE	config.h	161;"	d
SMARTMONTOOLS_RELEASE_TIME	config.h	164;"	d
SMARTMONTOOLS_SVN_DATE	svnversion.h	3;"	d
SMARTMONTOOLS_SVN_REV	svnversion.h	2;"	d
SMARTMONTOOLS_SVN_TIME	svnversion.h	4;"	d
SMART_CYL_HI	atacmds.cpp	51;"	d	file:
SMART_CYL_HI	os_win32.cpp	480;"	d	file:
SMART_CYL_LOW	atacmds.cpp	50;"	d	file:
SMART_CYL_LOW	os_win32.cpp	479;"	d	file:
SMART_VENDOR_3WARE	os_win32.cpp	287;"	d	file:
SOLARIS_MAN_FILTER	Makefile	/^SOLARIS_MAN_FILTER = \\$/;"	m
SOURCES	Makefile	/^SOURCES = $(smartctl_SOURCES) $(EXTRA_smartctl_SOURCES) \\$/;"	m
SPACE_CODE_BLOCKS	os_qnxnto.h	844;"	d
SPACE_CODE_EOD	os_qnxnto.h	847;"	d
SPACE_CODE_FMRKS	os_qnxnto.h	845;"	d
SPACE_CODE_SEQ_FMRKS	os_qnxnto.h	846;"	d
SPACE_CODE_SEQ_SMRKS	os_qnxnto.h	849;"	d
SPACE_CODE_SMRKS	os_qnxnto.h	848;"	d
SRB_DataIn	aacraid.h	50;"	d
SRB_DataOut	aacraid.h	51;"	d
SRB_FLAGS_DATA_IN	aacraid.h	40;"	d
SRB_FLAGS_DATA_OUT	aacraid.h	41;"	d
SRB_FLAGS_NO_DATA_TRANSFER	aacraid.h	42;"	d
SRB_FUNCTION_EXECUTE_SCSI	aacraid.h	48;"	d
SRB_NoDataXfer	aacraid.h	52;"	d
SRB_STATUS_AUTOSENSE_VALID	os_linux.cpp	1077;"	d	file:
SRB_STATUS_ERROR	os_linux.cpp	1074;"	d	file:
SRB_STATUS_NO_DEVICE	os_linux.cpp	1075;"	d	file:
SRB_STATUS_SELECTION_TIMEOUT	os_linux.cpp	1076;"	d	file:
SRB_STATUS_SUCCESS	os_linux.cpp	1073;"	d	file:
SRET_STATUS_HI_EXCEEDED	atacmds.cpp	57;"	d	file:
SRET_STATUS_MID_EXCEEDED	atacmds.cpp	58;"	d	file:
SRW_OPT_FIXED	os_qnxnto.h	826;"	d
SRW_OPT_SILI	os_qnxnto.h	827;"	d
SS_MEDIA_LPAGE	scsicmds.h	193;"	d
STARTSTOP_CYCLE_COUNTER_LPAGE	scsicmds.h	190;"	d
START_STOP_UNIT	scsicmds.h	83;"	d
STATE_NODE_CONTAINS	regex/regexec.c	1396;"	d	file:
STATUS	atacmds.h	/^  STATUS,       \/\/ just says if SMART is working or not$/;"	e	enum:__anon48
STATUS_CHECK	atacmds.h	/^  STATUS_CHECK, \/\/ says if disk's SMART status is healthy, or failing$/;"	e	enum:__anon48
STDC_HEADERS	config.h	167;"	d
STORAGE_DEVICE_DESCRIPTOR	os_win32.cpp	/^} STORAGE_DEVICE_DESCRIPTOR;$/;"	t	typeref:struct:_STORAGE_DEVICE_DESCRIPTOR	file:
STORAGE_DEVICE_DESCRIPTOR_DATA	os_win32.cpp	/^union STORAGE_DEVICE_DESCRIPTOR_DATA {$/;"	u	namespace:os_win32	file:
STORAGE_PROPERTY_ID	os_win32.cpp	/^} STORAGE_PROPERTY_ID;$/;"	t	typeref:enum:_STORAGE_PROPERTY_ID	file:
STORAGE_PROPERTY_QUERY	os_win32.cpp	/^} STORAGE_PROPERTY_QUERY;$/;"	t	typeref:struct:_STORAGE_PROPERTY_QUERY	file:
STORAGE_QUERY_TYPE	os_win32.cpp	/^} STORAGE_QUERY_TYPE;$/;"	t	typeref:enum:_STORAGE_QUERY_TYPE	file:
STRANGE_BUFFER_LENGTH	os_linux.cpp	2281;"	d	file:
STRIP	Makefile	/^STRIP = $/;"	m
SUBEXP	regex/regex_internal.h	/^  SUBEXP,$/;"	e	enum:__anon117
SUFFIXES	Makefile	/^SUFFIXES = .cpp .c .s .o$/;"	m
SUPPORTED_LPAGES	scsicmds.h	179;"	d
SWAP_FLAGS	getopt/getopt.c	278;"	d	file:
SWAP_FLAGS	getopt/getopt.c	286;"	d	file:
SWAP_FLAGS	getopt/getopt.c	289;"	d	file:
SYNCOBJNAME	os_win32.cpp	3169;"	d	file:
SYNCOBJNAME	os_win32.cpp	3303;"	d	file:
SYSLOG_H	os_win32/syslog.h	20;"	d
SYSLOG_H_CVSID	os_win32/syslog.h	22;"	d
ScsiStatus	aacraid.h	/^    UCHAR ScsiStatus;               \/\/ offset 4$/;"	m	struct:_SCSI_REQUEST_BLOCK
ScsiStatus	cissio_freebsd.h	/^    u_int8_t		ScsiStatus;$/;"	m	struct:__anon110
SelfTestErrorCount	smartd.cpp	/^static int SelfTestErrorCount(ata_device * device, const char * name,$/;"	f	file:
SenseInfo	cissio_freebsd.h	/^    u_int8_t		SenseInfo[SENSEINFOBYTES];$/;"	m	struct:__anon110
SenseInfoBuffer	aacraid.h	/^    PVOID SenseInfoBuffer;          \/\/ offset 1c$/;"	m	struct:_SCSI_REQUEST_BLOCK
SenseInfoBufferLength	aacraid.h	/^    UCHAR SenseInfoBufferLength;    \/\/ offset b$/;"	m	struct:_SCSI_REQUEST_BLOCK
SenseLen	cissio_freebsd.h	/^    u_int8_t		SenseLen;$/;"	m	struct:__anon110
SerialNumberOffset	os_win32.cpp	/^  ULONG SerialNumberOffset;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
Signature	csmisas.h	/^   CSMI_SAS_SATA_SIGNATURE Signature;$/;"	m	struct:_CSMI_SAS_SATA_SIGNATURE_BUFFER
Signature	dev_areca.h	/^  unsigned char Signature[8];$/;"	m	struct:_ARCMSR_IO_HDR
Size	os_win32.cpp	/^  ULONG Size;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
SmartPageSupported	smartd.cpp	/^  unsigned char SmartPageSupported;       \/\/ has log sense IE page (0x2f)$/;"	m	struct:temp_dev_state	file:
Spare	csmisas.h	/^       CSMI_SAS_RAID_SET_SPARE_INFO Spare;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
SrbExtension	aacraid.h	/^    PVOID SrbExtension;             \/\/ offset 28$/;"	m	struct:_SCSI_REQUEST_BLOCK
SrbFlags	aacraid.h	/^    ULONG SrbFlags;                 \/\/ offset c$/;"	m	struct:_SCSI_REQUEST_BLOCK
SrbIoCtrl	os_win32.cpp	/^  SRB_IO_CONTROL SrbIoCtrl;$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
SrbStatus	aacraid.h	/^    UCHAR SrbStatus;                \/\/ offset 3$/;"	m	struct:_SCSI_REQUEST_BLOCK
State	csmisas.h	/^       CSMI_SAS_RAID_SET_ONLINE_STATE_INFO State;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
Status	csmisas.h	/^   CSMI_SAS_CNTLR_STATUS Status;$/;"	m	struct:_CSMI_SAS_CNTLR_STATUS_BUFFER
Status	csmisas.h	/^   CSMI_SAS_SSP_PASSTHRU_STATUS Status;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_BUFFER
Status	csmisas.h	/^   CSMI_SAS_SSP_PASSTHRU_STATUS Status;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU_BUFFER
Status	csmisas.h	/^   CSMI_SAS_STP_PASSTHRU_STATUS Status;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_BUFFER
StorageAccessAlignmentProperty	os_win32.cpp	/^  StorageAccessAlignmentProperty$/;"	e	enum:_STORAGE_PROPERTY_ID	file:
StorageAdapterProperty	os_win32.cpp	/^  StorageAdapterProperty,$/;"	e	enum:_STORAGE_PROPERTY_ID	file:
StorageDeviceIdProperty	os_win32.cpp	/^  StorageDeviceIdProperty,$/;"	e	enum:_STORAGE_PROPERTY_ID	file:
StorageDeviceProperty	os_win32.cpp	/^  StorageDeviceProperty = 0,$/;"	e	enum:_STORAGE_PROPERTY_ID	file:
StorageDeviceUniqueIdProperty	os_win32.cpp	/^  StorageDeviceUniqueIdProperty,$/;"	e	enum:_STORAGE_PROPERTY_ID	file:
StorageDeviceWriteCacheProperty	os_win32.cpp	/^  StorageDeviceWriteCacheProperty,$/;"	e	enum:_STORAGE_PROPERTY_ID	file:
StorageMiniportProperty	os_win32.cpp	/^  StorageMiniportProperty,$/;"	e	enum:_STORAGE_PROPERTY_ID	file:
SuppressReport	smartd.cpp	/^  unsigned char SuppressReport;           \/\/ minimize nuisance reports$/;"	m	struct:temp_dev_state	file:
TABLEPRINTWIDTH	knowndrives.cpp	40;"	d	file:
TAG_TW_Command_Apache	os_linux.h	/^typedef struct TAG_TW_Command_Apache {$/;"	s
TAG_TW_Command_Apache_Header	os_linux.h	/^typedef struct TAG_TW_Command_Apache_Header {$/;"	s
TAG_TW_Command_Full_9000	os_linux.h	/^typedef struct TAG_TW_Command_Full_9000 {$/;"	s
TAG_TW_Ioctl	os_linux.h	/^typedef struct TAG_TW_Ioctl { $/;"	s
TAG_TW_Ioctl_Apache	os_linux.h	/^typedef struct TAG_TW_Ioctl_Apache {$/;"	s
TAG_TW_Ioctl_Driver_Command_9000	os_linux.h	/^typedef struct TAG_TW_Ioctl_Driver_Command_9000 {$/;"	s
TAG_TW_New_Ioctl	os_linux.h	/^typedef struct TAG_TW_New_Ioctl {$/;"	s
TAG_TW_Output	os_linux.h	/^typedef struct TAG_TW_Output {$/;"	s
TAG_TW_Passthru	os_linux.h	/^typedef struct TAG_TW_Passthru {$/;"	s
TAG_TW_SG_Entry	os_linux.h	/^typedef struct TAG_TW_SG_Entry {$/;"	s
TAPE_ALERTS_LPAGE	scsicmds.h	208;"	d
TASKFILE_IN	os_linux.h	376;"	d
TASKFILE_NO_DATA	os_linux.h	375;"	d
TASKFILE_OUT	os_linux.h	377;"	d
TEMPERATURE_LPAGE	scsicmds.h	189;"	d
TEST_DISABLE	scsicmds.cpp	1293;"	d	file:
TEST_UNIT_READY	scsicmds.h	44;"	d
TIMEZONE_FILE	utility.cpp	/^static const char *TIMEZONE_FILE = "\/etc\/TIMEZONE";$/;"	v	file:
TWA_FW_CMD_ATA_PASSTHROUGH	os_freebsd.h	354;"	d
TWA_SENSE_DATA_LENGTH	os_freebsd.h	356;"	d
TWEIO_COMMAND	os_freebsd.h	305;"	d
TWE_Command	os_freebsd.h	/^} TWE_Command;$/;"	t	typeref:union:__anon11
TWE_Command_ATA	os_freebsd.h	/^} __packed TWE_Command_ATA;$/;"	t	typeref:struct:__anon9
TWE_Command_CHECKSTATUS	os_freebsd.h	/^} __packed TWE_Command_CHECKSTATUS;$/;"	t	typeref:struct:__anon6
TWE_Command_Generic	os_freebsd.h	/^} __packed TWE_Command_Generic;$/;"	t	typeref:struct:__anon10
TWE_Command_HOTSWAP	os_freebsd.h	/^} __packed TWE_Command_HOTSWAP;$/;"	t	typeref:struct:__anon4
TWE_Command_INITCONNECTION	os_freebsd.h	/^} __packed TWE_Command_INITCONNECTION;$/;"	t	typeref:struct:__anon2
TWE_Command_IO	os_freebsd.h	/^} __packed TWE_Command_IO;$/;"	t	typeref:struct:__anon3
TWE_Command_PARAM	os_freebsd.h	/^} __packed TWE_Command_PARAM;$/;"	t	typeref:struct:__anon7
TWE_Command_REBUILDUNIT	os_freebsd.h	/^} __packed TWE_Command_REBUILDUNIT;$/;"	t	typeref:struct:__anon8
TWE_Command_SETATAFEATURE	os_freebsd.h	/^} __packed TWE_Command_SETATAFEATURE;$/;"	t	typeref:struct:__anon5
TWE_FLAGS_FATAL	os_freebsd.h	253;"	d
TWE_FLAGS_INFORMATIONAL	os_freebsd.h	251;"	d
TWE_FLAGS_PERCENTAGE	os_freebsd.h	254;"	d
TWE_FLAGS_SUCCESS	os_freebsd.h	250;"	d
TWE_FLAGS_WARNING	os_freebsd.h	252;"	d
TWE_MAX_ATA_SGL_LENGTH	os_freebsd.h	101;"	d
TWE_MAX_SGL_LENGTH	os_freebsd.h	100;"	d
TWE_OP_ATA_PASSTHROUGH	os_freebsd.h	102;"	d
TWE_OP_HOTSWAP_ADD_CBOD	os_freebsd.h	151;"	d
TWE_OP_HOTSWAP_ADD_SPARE	os_freebsd.h	152;"	d
TWE_OP_HOTSWAP_REMOVE	os_freebsd.h	150;"	d
TWE_OP_REBUILDUNIT_NOP	os_freebsd.h	212;"	d
TWE_OP_REBUILDUNIT_START	os_freebsd.h	214;"	d
TWE_OP_REBUILDUNIT_STARTUNIT	os_freebsd.h	215;"	d
TWE_OP_REBUILDUNIT_STOP	os_freebsd.h	213;"	d
TWE_OP_SETATAFEATURE_DIS_WCE	os_freebsd.h	168;"	d
TWE_OP_SETATAFEATURE_WCE	os_freebsd.h	167;"	d
TWE_Response_Queue	os_freebsd.h	/^} TWE_Response_Queue;$/;"	t	typeref:union:__anon12
TWE_SG_Entry	os_freebsd.h	/^} __packed TWE_SG_Entry;$/;"	t	typeref:struct:__anon1
TW_ATA_PASSTHRU	os_linux.h	100;"	d
TW_ATA_PASS_SGL_MAX	os_linux.h	70;"	d
TW_CMD_PACKET_WITH_DATA	os_linux.h	242;"	d
TW_Command	os_linux.h	/^typedef struct TW_Command {$/;"	s
TW_Command	os_linux.h	/^} TW_Command;$/;"	t	typeref:struct:TW_Command
TW_Command_9000	os_linux.h	/^typedef struct TW_Command_9000 {$/;"	s
TW_Command_9000	os_linux.h	/^} TW_Command_9000;$/;"	t	typeref:struct:TW_Command_9000
TW_Command_Apache	os_linux.h	/^} TW_Command_Apache;$/;"	t	typeref:struct:TAG_TW_Command_Apache
TW_Command_Apache_Header	os_linux.h	/^} TW_Command_Apache_Header;$/;"	t	typeref:struct:TAG_TW_Command_Apache_Header
TW_Command_Full_9000	os_linux.h	/^} TW_Command_Full_9000;$/;"	t	typeref:struct:TAG_TW_Command_Full_9000
TW_INT16	os_freebsd.h	/^typedef short			TW_INT16;$/;"	t
TW_INT32	os_freebsd.h	/^typedef int			TW_INT32;$/;"	t
TW_INT64	os_freebsd.h	/^typedef long long		TW_INT64;$/;"	t
TW_INT8	os_freebsd.h	/^typedef char			TW_INT8;$/;"	t
TW_IOCTL	os_linux.h	99;"	d
TW_IOCTL_BUFFER_SIZE	os_freebsd.cpp	122;"	d	file:
TW_IOCTL_BUFFER_SIZE	os_linux.cpp	1694;"	d	file:
TW_IOCTL_FIRMWARE_PASS_THROUGH	os_linux.h	135;"	d
TW_Ioctl	os_linux.h	/^} TW_Ioctl;$/;"	t	typeref:struct:TAG_TW_Ioctl
TW_Ioctl_Buf_Apache	os_linux.h	/^} TW_Ioctl_Buf_Apache;$/;"	t	typeref:struct:TAG_TW_Ioctl_Apache
TW_Ioctl_Driver_Command_9000	os_linux.h	/^} TW_Ioctl_Driver_Command_9000;$/;"	t	typeref:struct:TAG_TW_Ioctl_Driver_Command_9000
TW_MAX_SGL_LENGTH	os_linux.h	241;"	d
TW_MAX_SGL_LENGTH_9000	os_linux.h	136;"	d
TW_New_Ioctl	os_linux.h	/^} TW_New_Ioctl;$/;"	t	typeref:struct:TAG_TW_New_Ioctl
TW_OP_ATA_PASSTHRU	os_linux.h	54;"	d
TW_OSLI_IOCTL_NO_DATA_BUF	os_freebsd.h	/^} TW_OSLI_IOCTL_NO_DATA_BUF;$/;"	t	typeref:struct:tw_osli_ioctl_no_data_buf
TW_OSLI_IOCTL_WITH_PAYLOAD	os_freebsd.h	/^} TW_OSLI_IOCTL_WITH_PAYLOAD;$/;"	t	typeref:struct:tw_osli_ioctl_with_payload
TW_OSL_IOCTL_FIRMWARE_PASS_THROUGH	os_freebsd.h	544;"	d
TW_Output	os_linux.h	/^} TW_Output; $/;"	t	typeref:struct:TAG_TW_Output
TW_Passthru	os_linux.h	/^} TW_Passthru;$/;"	t	typeref:struct:TAG_TW_Passthru
TW_SG_Entry	os_linux.h	/^} TW_SG_Entry;$/;"	t	typeref:struct:TAG_TW_SG_Entry
TW_UINT16	os_freebsd.h	/^typedef unsigned short		TW_UINT16;$/;"	t
TW_UINT32	os_freebsd.h	/^typedef unsigned int		TW_UINT32;$/;"	t
TW_UINT64	os_freebsd.h	/^typedef unsigned long long	TW_UINT64;$/;"	t
TW_UINT8	os_freebsd.h	/^typedef unsigned char		TW_UINT8;$/;"	t
TW_VOID	os_freebsd.h	/^typedef void			TW_VOID;$/;"	t
TYPE_CMD	cissio_freebsd.h	102;"	d
TYPE_MSG	cissio_freebsd.h	103;"	d
TapeAlertsMessageTable	scsicmds.cpp	/^static const char * TapeAlertsMessageTable[]= {$/;"	v	file:
Targ	cissio_freebsd.h	/^	u_int8_t	Targ:6;$/;"	m	struct:__anon98::__anon101
Target	cissio_freebsd.h	/^    SCSI3Addr_struct	Target[2];$/;"	m	struct:__anon102
TargetId	aacraid.h	/^    UCHAR TargetId;                 \/\/ offset 6$/;"	m	struct:_SCSI_REQUEST_BLOCK
TargetId	cissio_freebsd.h	/^    u_int32_t		TargetId:24;$/;"	m	struct:__anon102
TargetId	os_win32.cpp	/^  UCHAR TargetId;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
TempPageSupported	smartd.cpp	/^  unsigned char TempPageSupported;        \/\/ has log sense temperature page (0xd)$/;"	m	struct:temp_dev_state	file:
TestTime	atacmds.cpp	/^int TestTime(const ata_smart_values *data, int testtype)$/;"	f
Test_RegisterEventSourceA	os_win32/syslog_win32.cpp	/^HANDLE Test_RegisterEventSourceA(LPCTSTR server, LPCTSTR source)$/;"	f
Test_ReportEventA	os_win32/syslog_win32.cpp	/^static BOOL Test_ReportEventA(HANDLE h, WORD type, WORD cat, DWORD id, PSID usid,$/;"	f	file:
TimeOutValue	aacraid.h	/^    ULONG TimeOutValue;             \/\/ offset 14$/;"	m	struct:_SCSI_REQUEST_BLOCK
TimeOutValue	os_win32.cpp	/^  ULONG TimeOutValue;$/;"	m	struct:_ATA_PASS_THROUGH_EX	file:
Timeout	cissio_freebsd.h	/^    u_int16_t	Timeout;$/;"	m	struct:__anon105
Timeout	csmisas.h	/^    __u32 Timeout;$/;"	m	struct:_IOCTL_HEADER
Timeout	dev_areca.h	/^  unsigned int Timeout;$/;"	m	struct:_ARCMSR_IO_HDR
ToggleDebugMode	smartd.cpp	/^static void ToggleDebugMode()$/;"	f	file:
Transform	csmisas.h	/^       CSMI_SAS_RAID_SET_TRANSFORM_INFO Transform;$/;"	m	union:_CSMI_SAS_RAID_SET_OPERATION::__anon158
Type	cissio_freebsd.h	/^	u_int8_t	Type:3;$/;"	m	struct:__anon105::__anon106
Type	cissio_freebsd.h	/^	u_int8_t	Type;$/;"	m	struct:__anon107::__anon108
Type	cissio_freebsd.h	/^    } __packed Type;$/;"	m	struct:__anon105	typeref:struct:__anon105::__anon106
UINT32	scsicmds.h	/^typedef unsigned int UINT32;$/;"	t
UINT8	scsicmds.h	/^typedef unsigned char UINT8;$/;"	t
UINT_BITS	regex/regex_internal.h	113;"	d
USBCYPRESS_PASSTHROUGH_LEN	scsiata.cpp	673;"	d	file:
USBDEV	os_freebsd.cpp	53;"	d	file:
USERDNSDOMAIN	os_win32/smartd_warning.cmd	/^  for \/f "delims== tokens=2 usebackq" %%d in (`WMIC PATH Win32_Computersystem WHERE "PartOfDomain=TRUE" GET Domain \/VALUE 2^>nul ^| find "Domain=" 2^>nul`) do set USERDNSDOMAIN=%%~d$/;"	v
USR1handler	smartd.cpp	/^static void USR1handler(int sig)$/;"	f	file:
USR2handler	smartd.cpp	/^static void USR2handler(int sig)$/;"	f	file:
UTILITY_H_	utility.h	26;"	d
UTILITY_H_CVSID	utility.h	28;"	d
Usage	smartctl.cpp	/^static void Usage()$/;"	f	file:
Usage	smartd.cpp	/^static void Usage()$/;"	f	file:
UsageSummary	smartctl.cpp	/^static void UsageSummary()$/;"	f	file:
UserPatternBuffer	csmisas.h	/^   CSMI_SAS_CHARACTER UserPatternBuffer[16];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
VENDOR_UNIQUE_PAGE	scsicmds.h	211;"	d
VERIFY_ERROR_COUNTER_LPAGE	scsicmds.h	184;"	d
VERIFY_ERROR_RECOVERY_PAGE	scsicmds.h	217;"	d
VERSION	Makefile	/^VERSION = 6.5$/;"	m
VERSION	config.h	170;"	d
VendorIdOffset	os_win32.cpp	/^  ULONG VendorIdOffset;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
VendorSpecific	os_win32.cpp	/^  ULONG VendorSpecific[6];$/;"	m	struct:_NVME_PASS_THROUGH_IOCTL	file:
VerifyECounterPageSupported	smartd.cpp	/^  unsigned char VerifyECounterPageSupported;$/;"	m	struct:temp_dev_state	file:
Version	os_win32.cpp	/^  ULONG Version;$/;"	m	struct:_STORAGE_DEVICE_DESCRIPTOR	file:
VolId	cissio_freebsd.h	/^    u_int32_t		VolId:30;$/;"	m	struct:__anon103
WBEM_CONNECT_OPTIONS	os_win32/wbemcli_small.h	/^  } WBEM_CONNECT_OPTIONS;$/;"	t	typeref:enum:tag_WBEM_CONNECT_OPTIONS
WBEM_FLAG_BIDIRECTIONAL	os_win32/wbemcli_small.h	/^    WBEM_FLAG_RETURN_IMMEDIATELY = 0x10,WBEM_FLAG_RETURN_WBEM_COMPLETE = 0,WBEM_FLAG_BIDIRECTIONAL = 0,WBEM_FLAG_FORWARD_ONLY = 0x20,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_CONNECT_PROVIDERS	os_win32/wbemcli_small.h	/^    WBEM_FLAG_CONNECT_REPOSITORY_ONLY = 0x40,WBEM_FLAG_CONNECT_USE_MAX_WAIT = 0x80,WBEM_FLAG_CONNECT_PROVIDERS = 0x100$/;"	e	enum:tag_WBEM_CONNECT_OPTIONS
WBEM_FLAG_CONNECT_REPOSITORY_ONLY	os_win32/wbemcli_small.h	/^    WBEM_FLAG_CONNECT_REPOSITORY_ONLY = 0x40,WBEM_FLAG_CONNECT_USE_MAX_WAIT = 0x80,WBEM_FLAG_CONNECT_PROVIDERS = 0x100$/;"	e	enum:tag_WBEM_CONNECT_OPTIONS
WBEM_FLAG_CONNECT_USE_MAX_WAIT	os_win32/wbemcli_small.h	/^    WBEM_FLAG_CONNECT_REPOSITORY_ONLY = 0x40,WBEM_FLAG_CONNECT_USE_MAX_WAIT = 0x80,WBEM_FLAG_CONNECT_PROVIDERS = 0x100$/;"	e	enum:tag_WBEM_CONNECT_OPTIONS
WBEM_FLAG_DIRECT_READ	os_win32/wbemcli_small.h	/^    WBEM_FLAG_ENSURE_LOCATABLE = 0x100,WBEM_FLAG_DIRECT_READ = 0x200,WBEM_FLAG_SEND_ONLY_SELECTED = 0,WBEM_RETURN_WHEN_COMPLETE = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_DONT_SEND_STATUS	os_win32/wbemcli_small.h	/^    WBEM_FLAG_NO_ERROR_OBJECT = 0x40,WBEM_FLAG_RETURN_ERROR_OBJECT = 0,WBEM_FLAG_SEND_STATUS = 0x80,WBEM_FLAG_DONT_SEND_STATUS = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_ENSURE_LOCATABLE	os_win32/wbemcli_small.h	/^    WBEM_FLAG_ENSURE_LOCATABLE = 0x100,WBEM_FLAG_DIRECT_READ = 0x200,WBEM_FLAG_SEND_ONLY_SELECTED = 0,WBEM_RETURN_WHEN_COMPLETE = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_FORWARD_ONLY	os_win32/wbemcli_small.h	/^    WBEM_FLAG_RETURN_IMMEDIATELY = 0x10,WBEM_FLAG_RETURN_WBEM_COMPLETE = 0,WBEM_FLAG_BIDIRECTIONAL = 0,WBEM_FLAG_FORWARD_ONLY = 0x20,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_NO_ERROR_OBJECT	os_win32/wbemcli_small.h	/^    WBEM_FLAG_NO_ERROR_OBJECT = 0x40,WBEM_FLAG_RETURN_ERROR_OBJECT = 0,WBEM_FLAG_SEND_STATUS = 0x80,WBEM_FLAG_DONT_SEND_STATUS = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_RETURN_ERROR_OBJECT	os_win32/wbemcli_small.h	/^    WBEM_FLAG_NO_ERROR_OBJECT = 0x40,WBEM_FLAG_RETURN_ERROR_OBJECT = 0,WBEM_FLAG_SEND_STATUS = 0x80,WBEM_FLAG_DONT_SEND_STATUS = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_RETURN_IMMEDIATELY	os_win32/wbemcli_small.h	/^    WBEM_FLAG_RETURN_IMMEDIATELY = 0x10,WBEM_FLAG_RETURN_WBEM_COMPLETE = 0,WBEM_FLAG_BIDIRECTIONAL = 0,WBEM_FLAG_FORWARD_ONLY = 0x20,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_RETURN_WBEM_COMPLETE	os_win32/wbemcli_small.h	/^    WBEM_FLAG_RETURN_IMMEDIATELY = 0x10,WBEM_FLAG_RETURN_WBEM_COMPLETE = 0,WBEM_FLAG_BIDIRECTIONAL = 0,WBEM_FLAG_FORWARD_ONLY = 0x20,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_SEND_ONLY_SELECTED	os_win32/wbemcli_small.h	/^    WBEM_FLAG_ENSURE_LOCATABLE = 0x100,WBEM_FLAG_DIRECT_READ = 0x200,WBEM_FLAG_SEND_ONLY_SELECTED = 0,WBEM_RETURN_WHEN_COMPLETE = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_SEND_STATUS	os_win32/wbemcli_small.h	/^    WBEM_FLAG_NO_ERROR_OBJECT = 0x40,WBEM_FLAG_RETURN_ERROR_OBJECT = 0,WBEM_FLAG_SEND_STATUS = 0x80,WBEM_FLAG_DONT_SEND_STATUS = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_STRONG_VALIDATION	os_win32/wbemcli_small.h	/^    WBEM_FLAG_STRONG_VALIDATION = 0x100000$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_FLAG_USE_AMENDED_QUALIFIERS	os_win32/wbemcli_small.h	/^    WBEM_RETURN_IMMEDIATELY = 0x10,WBEM_MASK_RESERVED_FLAGS = 0x1f000,WBEM_FLAG_USE_AMENDED_QUALIFIERS = 0x20000,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_GENERIC_FLAG_TYPE	os_win32/wbemcli_small.h	/^  } WBEM_GENERIC_FLAG_TYPE;$/;"	t	typeref:enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_MASK_RESERVED_FLAGS	os_win32/wbemcli_small.h	/^    WBEM_RETURN_IMMEDIATELY = 0x10,WBEM_MASK_RESERVED_FLAGS = 0x1f000,WBEM_FLAG_USE_AMENDED_QUALIFIERS = 0x20000,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_RETURN_IMMEDIATELY	os_win32/wbemcli_small.h	/^    WBEM_RETURN_IMMEDIATELY = 0x10,WBEM_MASK_RESERVED_FLAGS = 0x1f000,WBEM_FLAG_USE_AMENDED_QUALIFIERS = 0x20000,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WBEM_RETURN_WHEN_COMPLETE	os_win32/wbemcli_small.h	/^    WBEM_FLAG_ENSURE_LOCATABLE = 0x100,WBEM_FLAG_DIRECT_READ = 0x200,WBEM_FLAG_SEND_ONLY_SELECTED = 0,WBEM_RETURN_WHEN_COMPLETE = 0,$/;"	e	enum:tag_WBEM_GENERIC_FLAG_TYPE
WDSMART_CYL	os_netbsd.h	52;"	d
WDSMART_CYL	os_openbsd.h	34;"	d
WDSM_RD_THRESHOLDS	os_netbsd.h	49;"	d
WF_OPT_IMMED	os_qnxnto.h	857;"	d
WF_OPT_WSMK	os_qnxnto.h	858;"	d
WIDE_NEWLINE_CHAR	regex/regex_internal.h	97;"	d
WIN32_LEAN_AND_MEAN	os_win32.cpp	54;"	d	file:
WIN32_LEAN_AND_MEAN	os_win32/daemon_win32.cpp	31;"	d	file:
WIN32_LEAN_AND_MEAN	os_win32/syslog_win32.cpp	33;"	d	file:
WIN32_LEAN_AND_MEAN	os_win32/wtssendmsg.c	26;"	d	file:
WINDMC	Makefile	/^WINDMC = $/;"	m
WINDRES	Makefile	/^WINDRES = $/;"	m
WINVER	os_win32.cpp	25;"	d	file:
WINVER	os_win32/daemon_win32.cpp	18;"	d	file:
WINVER	os_win32/wmiquery.cpp	19;"	d	file:
WINVER	os_win32/wtssendmsg.c	18;"	d	file:
WMIQUERY_H	os_win32/wmiquery.h	19;"	d
WMIQUERY_H_CVSID	os_win32/wmiquery.h	21;"	d
WORD	csmisas.h	/^typedef unsigned short WORD;$/;"	t
WORDS_BIGENDIAN	config.h	185;"	d
WORD_DELIM	regex/regex_internal.h	/^  WORD_DELIM = DUMMY_CONSTRAINT$/;"	e	enum:__anon115
WORD_FIRST	regex/regex_internal.h	/^  WORD_FIRST = PREV_NOTWORD_CONSTRAINT | NEXT_WORD_CONSTRAINT,$/;"	e	enum:__anon115
WORD_LAST	regex/regex_internal.h	/^  WORD_LAST = PREV_WORD_CONSTRAINT | NEXT_NOTWORD_CONSTRAINT,$/;"	e	enum:__anon115
WRITE_ERROR_COUNTER_LPAGE	scsicmds.h	181;"	d
WRITE_LOG	atacmds.h	/^  WRITE_LOG$/;"	e	enum:__anon48
WaitForPidFile	smartd.cpp	/^static bool WaitForPidFile()$/;"	f	file:
WriteECounterPageSupported	smartd.cpp	/^  unsigned char WriteECounterPageSupported;$/;"	m	struct:temp_dev_state	file:
WritePidFile	smartd.cpp	/^static void WritePidFile()$/;"	f	file:
XFER_NONE	cissio_freebsd.h	89;"	d
XFER_READ	cissio_freebsd.h	91;"	d
XFER_RSVD	cissio_freebsd.h	92;"	d
XFER_WRITE	cissio_freebsd.h	90;"	d
XOR_CONTROL_MODE_PAGE	scsicmds.h	220;"	d
_	getopt/getopt.c	84;"	d	file:
_	getopt/getopt.c	87;"	d	file:
_ARCMSR_IO_HDR	dev_areca.h	/^typedef struct _ARCMSR_IO_HDR$/;"	s
_ATA_PASS_THROUGH_EX	os_win32.cpp	/^typedef struct _ATA_PASS_THROUGH_EX {$/;"	s	file:
_CSMI_SAS_CHARACTER	csmisas.h	/^typedef struct _CSMI_SAS_CHARACTER {$/;"	s
_CSMI_SAS_CNTLR_CONFIG	csmisas.h	/^typedef struct _CSMI_SAS_CNTLR_CONFIG {$/;"	s
_CSMI_SAS_CNTLR_CONFIG_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_CNTLR_CONFIG_BUFFER {$/;"	s
_CSMI_SAS_CNTLR_STATUS	csmisas.h	/^typedef struct _CSMI_SAS_CNTLR_STATUS {$/;"	s
_CSMI_SAS_CNTLR_STATUS_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_CNTLR_STATUS_BUFFER {$/;"	s
_CSMI_SAS_CONNECTOR_INFO_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_CONNECTOR_INFO_BUFFER {$/;"	s
_CSMI_SAS_DRIVER_INFO	csmisas.h	/^typedef struct _CSMI_SAS_DRIVER_INFO {$/;"	s
_CSMI_SAS_DRIVER_INFO_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_DRIVER_INFO_BUFFER {$/;"	s
_CSMI_SAS_DRIVE_EXTENT_INFO	csmisas.h	/^typedef struct _CSMI_SAS_DRIVE_EXTENT_INFO {$/;"	s
_CSMI_SAS_DRIVE_INFO	csmisas.h	/^typedef struct _CSMI_SAS_DRIVE_INFO {$/;"	s
_CSMI_SAS_DRIVE_LOCATION	csmisas.h	/^typedef struct _CSMI_SAS_DRIVE_LOCATION {$/;"	s
_CSMI_SAS_FIRMWARE_DOWNLOAD	csmisas.h	/^typedef struct _CSMI_SAS_FIRMWARE_DOWNLOAD {$/;"	s
_CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER {$/;"	s
_CSMI_SAS_GET_CONNECTOR_INFO	csmisas.h	/^typedef struct _CSMI_SAS_GET_CONNECTOR_INFO {$/;"	s
_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER {$/;"	s
_CSMI_SAS_GET_LOCATION_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_GET_LOCATION_BUFFER {$/;"	s
_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_GET_SCSI_ADDRESS_BUFFER {$/;"	s
_CSMI_SAS_H_	csmisas.h	88;"	d
_CSMI_SAS_IDENTIFY	csmisas.h	/^typedef struct _CSMI_SAS_IDENTIFY {$/;"	s
_CSMI_SAS_IO_BUS_ADDRESS	csmisas.h	/^typedef union _CSMI_SAS_IO_BUS_ADDRESS {$/;"	u
_CSMI_SAS_LINK_ERRORS	csmisas.h	/^typedef struct _CSMI_SAS_LINK_ERRORS {$/;"	s
_CSMI_SAS_LINK_ERRORS_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_LINK_ERRORS_BUFFER {$/;"	s
_CSMI_SAS_LOCATION_IDENTIFIER	csmisas.h	/^typedef struct _CSMI_SAS_LOCATION_IDENTIFIER {$/;"	s
_CSMI_SAS_PCI_BUS_ADDRESS	csmisas.h	/^typedef struct _CSMI_SAS_PCI_BUS_ADDRESS {$/;"	s
_CSMI_SAS_PHY_CONTROL	csmisas.h	/^typedef struct _CSMI_SAS_PHY_CONTROL {$/;"	s
_CSMI_SAS_PHY_CONTROL_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_PHY_CONTROL_BUFFER {$/;"	s
_CSMI_SAS_PHY_ENTITY	csmisas.h	/^typedef struct _CSMI_SAS_PHY_ENTITY {$/;"	s
_CSMI_SAS_PHY_INFO	csmisas.h	/^typedef struct _CSMI_SAS_PHY_INFO {$/;"	s
_CSMI_SAS_PHY_INFO_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_PHY_INFO_BUFFER {$/;"	s
_CSMI_SAS_RAID_CONFIG	csmisas.h	/^typedef struct _CSMI_SAS_RAID_CONFIG {$/;"	s
_CSMI_SAS_RAID_CONFIG_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_RAID_CONFIG_BUFFER {$/;"	s
_CSMI_SAS_RAID_CONTROL	csmisas.h	/^typedef struct _CSMI_SAS_RAID_CONTROL {$/;"	s
_CSMI_SAS_RAID_CONTROL_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_RAID_CONTROL_BUFFER {$/;"	s
_CSMI_SAS_RAID_DEVICE_ID	csmisas.h	/^typedef struct _CSMI_SAS_RAID_DEVICE_ID {$/;"	s
_CSMI_SAS_RAID_DRIVES	csmisas.h	/^typedef struct _CSMI_SAS_RAID_DRIVES {$/;"	s
_CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA	csmisas.h	/^typedef struct _CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA {$/;"	s
_CSMI_SAS_RAID_ELEMENT	csmisas.h	/^typedef struct _CSMI_SAS_RAID_ELEMENT {$/;"	s
_CSMI_SAS_RAID_ELEMENT_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_RAID_ELEMENT_BUFFER {$/;"	s
_CSMI_SAS_RAID_FEATURES	csmisas.h	/^typedef struct _CSMI_SAS_RAID_FEATURES {$/;"	s
_CSMI_SAS_RAID_FEATURES_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_RAID_FEATURES_BUFFER {$/;"	s
_CSMI_SAS_RAID_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_INFO {$/;"	s
_CSMI_SAS_RAID_INFO_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_RAID_INFO_BUFFER {$/;"	s
_CSMI_SAS_RAID_MODULE_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_MODULE_INFO {$/;"	s
_CSMI_SAS_RAID_SET_ADDITIONAL_DATA	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_ADDITIONAL_DATA {$/;"	s
_CSMI_SAS_RAID_SET_CACHE_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_CACHE_INFO {$/;"	s
_CSMI_SAS_RAID_SET_CREATE_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_CREATE_INFO {$/;"	s
_CSMI_SAS_RAID_SET_DELETE_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_DELETE_INFO {$/;"	s
_CSMI_SAS_RAID_SET_DRIVE_LIST	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_DRIVE_LIST {$/;"	s
_CSMI_SAS_RAID_SET_LABEL_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_LABEL_INFO {$/;"	s
_CSMI_SAS_RAID_SET_LIST	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_LIST {$/;"	s
_CSMI_SAS_RAID_SET_MODIFY_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_MODIFY_INFO {$/;"	s
_CSMI_SAS_RAID_SET_ONLINE_STATE_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_ONLINE_STATE_INFO {$/;"	s
_CSMI_SAS_RAID_SET_OPERATION	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_OPERATION {$/;"	s
_CSMI_SAS_RAID_SET_OPERATION_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_OPERATION_BUFFER {$/;"	s
_CSMI_SAS_RAID_SET_SPARE_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_SPARE_INFO {$/;"	s
_CSMI_SAS_RAID_SET_TRANSFORM_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_TRANSFORM_INFO {$/;"	s
_CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO	csmisas.h	/^typedef struct _CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO {$/;"	s
_CSMI_SAS_RAID_TYPE_DESCRIPTION	csmisas.h	/^typedef struct _CSMI_SAS_RAID_TYPE_DESCRIPTION {$/;"	s
_CSMI_SAS_SATA_SIGNATURE	csmisas.h	/^typedef struct _CSMI_SAS_SATA_SIGNATURE {$/;"	s
_CSMI_SAS_SATA_SIGNATURE_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_SATA_SIGNATURE_BUFFER {$/;"	s
_CSMI_SAS_SET_PHY_INFO	csmisas.h	/^typedef struct _CSMI_SAS_SET_PHY_INFO {$/;"	s
_CSMI_SAS_SET_PHY_INFO_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_SET_PHY_INFO_BUFFER {$/;"	s
_CSMI_SAS_SMP_PASSTHRU	csmisas.h	/^typedef struct _CSMI_SAS_SMP_PASSTHRU {$/;"	s
_CSMI_SAS_SMP_PASSTHRU_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_SMP_PASSTHRU_BUFFER {$/;"	s
_CSMI_SAS_SMP_REQUEST	csmisas.h	/^typedef struct _CSMI_SAS_SMP_REQUEST {$/;"	s
_CSMI_SAS_SMP_RESPONSE	csmisas.h	/^typedef struct _CSMI_SAS_SMP_RESPONSE {$/;"	s
_CSMI_SAS_SSP_PASSTHRU	csmisas.h	/^typedef struct _CSMI_SAS_SSP_PASSTHRU {$/;"	s
_CSMI_SAS_SSP_PASSTHRU_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_SSP_PASSTHRU_BUFFER {$/;"	s
_CSMI_SAS_SSP_PASSTHRU_STATUS	csmisas.h	/^typedef struct _CSMI_SAS_SSP_PASSTHRU_STATUS {$/;"	s
_CSMI_SAS_SSP_TASK_IU	csmisas.h	/^typedef struct _CSMI_SAS_SSP_TASK_IU {$/;"	s
_CSMI_SAS_SSP_TASK_IU_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_SSP_TASK_IU_BUFFER {$/;"	s
_CSMI_SAS_STP_PASSTHRU	csmisas.h	/^typedef struct _CSMI_SAS_STP_PASSTHRU {$/;"	s
_CSMI_SAS_STP_PASSTHRU_BUFFER	csmisas.h	/^typedef struct _CSMI_SAS_STP_PASSTHRU_BUFFER {$/;"	s
_CSMI_SAS_STP_PASSTHRU_STATUS	csmisas.h	/^typedef struct _CSMI_SAS_STP_PASSTHRU_STATUS {$/;"	s
_GENERIC_ARCMSR_CMDS	dev_areca.h	/^enum _GENERIC_ARCMSR_CMDS$/;"	g
_GETOPT_H	getopt/getopt.h	23;"	d
_GETVERSIONINPARAMS_EX	os_win32.cpp	/^typedef struct _GETVERSIONINPARAMS_EX {$/;"	s	file:
_HAVE_CCISS	cciss.cpp	15;"	d	file:
_HAVE_CCISS	cciss.cpp	24;"	d	file:
_HAVE_CCISS	cciss.cpp	32;"	d	file:
_HPT_CHANNEL_INFO	os_freebsd.h	/^typedef struct _HPT_CHANNEL_INFO {$/;"	s
_HPT_CHANNEL_INFO_V2	os_freebsd.h	/^typedef struct _HPT_CHANNEL_INFO_V2 {$/;"	s
_HPT_IOCTL_PARAM	os_freebsd.h	/^typedef struct _HPT_IOCTL_PARAM {$/;"	s
_HPT_PASS_THROUGH_HEADER	os_freebsd.h	/^typedef struct _HPT_PASS_THROUGH_HEADER {$/;"	s
_IOCTL_HEADER	csmisas.h	/^typedef struct _IOCTL_HEADER {$/;"	s
_NO_PROTO	getopt/getopt.c	27;"	d	file:
_NVME_PASS_THROUGH_IOCTL	os_win32.cpp	/^typedef struct _NVME_PASS_THROUGH_IOCTL$/;"	s	file:
_REGEX_H	regex/regex.h	23;"	d
_REGEX_INTERNAL_H	regex/regex_internal.h	22;"	d
_RE_ARGS	regex/regex.h	444;"	d
_RE_ARGS	regex/regex.h	448;"	d
_RE_DEFINE_LOCALE_FUNCTIONS	regex/regex_internal.h	52;"	d
_RE_SYNTAX_POSIX_COMMON	regex/regex.h	220;"	d
_ReportLUNdata_struct	cciss.cpp	/^typedef struct _ReportLUNdata_struct$/;"	s	file:
_SCSI_REQUEST_BLOCK	aacraid.h	/^typedef struct _SCSI_REQUEST_BLOCK {$/;"	s
_SENDCMDINPARAMS_EX	os_win32.cpp	/^typedef struct _SENDCMDINPARAMS_EX {$/;"	s	file:
_SRB_BUFFER	dev_areca.h	/^typedef struct _SRB_BUFFER$/;"	s
_STORAGE_DEVICE_DESCRIPTOR	os_win32.cpp	/^typedef struct _STORAGE_DEVICE_DESCRIPTOR {$/;"	s	file:
_STORAGE_PROPERTY_ID	os_win32.cpp	/^typedef enum _STORAGE_PROPERTY_ID {$/;"	g	file:
_STORAGE_PROPERTY_QUERY	os_win32.cpp	/^typedef struct _STORAGE_PROPERTY_QUERY {$/;"	s	file:
_STORAGE_QUERY_TYPE	os_win32.cpp	/^typedef enum _STORAGE_QUERY_TYPE {$/;"	g	file:
_UAPI_LINUX_NVME_IOCTL_H	linux_nvme_ioctl.h	16;"	d
_WIN32	os_win32.cpp	80;"	d	file:
_WIN32_WINNT	os_win32.cpp	26;"	d	file:
_WIN32_WINNT	os_win32/daemon_win32.cpp	19;"	d	file:
_WIN32_WINNT	os_win32/wmiquery.cpp	20;"	d	file:
_WIN32_WINNT	os_win32/wtssendmsg.c	19;"	d	file:
__REQUIRED_RPCNDR_H_VERSION__	os_win32/wbemcli_small.h	16;"	d
__STDC_FORMAT_MACROS	int64.h	30;"	d
__attribute_format_printf	os_win32/wmiquery.h	32;"	d
__attribute_format_printf	os_win32/wmiquery.h	35;"	d
__attribute_format_printf	os_win32/wmiquery.h	37;"	d
__attribute_format_printf	utility.h	39;"	d
__attribute_format_printf	utility.h	42;"	d
__attribute_format_printf	utility.h	45;"	d
__btowc	regex/regex_internal.h	103;"	d
__i8	csmisas.h	114;"	d
__i8	csmisas.h	246;"	d
__i8	csmisas.h	320;"	d
__iswctype	regex/regex_internal.h	102;"	d
__mempcpy	regex/regex_internal.h	104;"	d
__need_getopt	getopt/getopt.h	179;"	d
__packed	freebsd_nvme_ioctl.h	/^} __packed;$/;"	v	typeref:struct:nvme_command
__packed	freebsd_nvme_ioctl.h	/^} __packed;$/;"	v	typeref:struct:nvme_completion
__packed	freebsd_nvme_ioctl.h	/^} __packed;$/;"	v	typeref:struct:nvme_status
__packed	os_freebsd.h	97;"	d
__pad1	megaraid.h	/^  u16 __pad1;$/;"	m	struct:megasas_iocpacket
__restrict	regex/regex.h	531;"	d
__restrict	regex/regex.h	533;"	d
__restrict_arr	regex/regex.h	540;"	d
__restrict_arr	regex/regex.h	542;"	d
__u16	csmisas.h	238;"	d
__u16	csmisas.h	316;"	d
__u32	csmisas.h	240;"	d
__u32	csmisas.h	242;"	d
__u32	csmisas.h	317;"	d
__u64	csmisas.h	244;"	d
__u64	csmisas.h	318;"	d
__u8	csmisas.h	237;"	d
__u8	csmisas.h	315;"	d
__unused	os_freebsd.h	619;"	d
__wbemcli_h__	os_win32/wbemcli_small.h	30;"	d
__wcrtomb	regex/regex_internal.h	105;"	d
__wctype	regex/regex_internal.h	101;"	d
_ata_pass_thru	os_qnxnto.h	/^	struct _ata_pass_thru {$/;"	s
_ata_pass_thru	os_qnxnto.h	/^	struct _ata_pass_thru {$/;"	s	union:_cdb
_ata_sense	os_qnxnto.h	/^struct _ata_sense$/;"	s
_ata_status_descriptor	os_qnxnto.h	/^typedef struct _ata_status_descriptor {$/;"	s
_cdb	os_qnxnto.h	/^typedef union _cdb {$/;"	u
_drive_attribute	os_qnxnto.h	/^typedef struct _drive_attribute$/;"	s
_format_unit	os_qnxnto.h	/^	struct _format_unit {$/;"	s	union:_cdb
_format_unit_old	os_qnxnto.h	/^	struct _format_unit_old {$/;"	s	union:_cdb
_getopt_initialize	getopt/getopt.c	/^_getopt_initialize (argc, argv, optstring)$/;"	f	file:
_getopt_internal	getopt/getopt.c	/^_getopt_internal (argc, argv, optstring, longopts, longind, long_only)$/;"	f
_mode_sense10	os_qnxnto.h	/^	struct _mode_sense10 {$/;"	s	union:_cdb
_scsi_sense	os_qnxnto.h	/^typedef struct _scsi_sense {$/;"	s
_scsi_sense_descriptor	os_qnxnto.h	/^typedef struct _scsi_sense_descriptor {$/;"	s
_scsi_sense_desriptor_header	os_qnxnto.h	/^typedef struct _scsi_sense_desriptor_header {$/;"	s
_testunitready	scsicmds.cpp	/^_testunitready(scsi_device * device, struct scsi_sense_disect * sinfo)$/;"	f	file:
aHost	os_linux.cpp	/^  int aHost;$/;"	m	class:os_linux::linux_aacraid_device	file:
aId	os_linux.cpp	/^  int aId;$/;"	m	class:os_linux::linux_aacraid_device	file:
aLun	os_linux.cpp	/^  int aLun;$/;"	m	class:os_linux::linux_aacraid_device	file:
aacraid_MAX_CTLR_NUM	os_win32.cpp	3942;"	d	file:
abkref_ents	regex/regex_internal.h	/^  int abkref_ents;$/;"	m	struct:__anon125
abs_builddir	Makefile	/^abs_builddir = \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_cxx_check_func	configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_compile	configure	/^ac_fn_cxx_check_header_compile ()$/;"	f
ac_fn_cxx_check_header_mongrel	configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_check_type	configure	/^ac_fn_cxx_check_type ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	configure	/^ac_fn_cxx_try_run ()$/;"	f
accept_mb	regex/regex_internal.h	/^  unsigned int accept_mb : 1;$/;"	m	struct:re_dfastate_t
acl	nvmecmds.h	/^  unsigned char   acl;$/;"	m	struct:smartmontools::nvme_id_ctrl
acquire_init_state_context	regex/regexec.c	/^acquire_init_state_context (err, preg, mctx, idx)$/;"	f	file:
action	os_freebsd.h	/^    u_int8_t	action:7;$/;"	m	struct:__anon8
action	os_freebsd.h	/^    u_int8_t	action;$/;"	m	struct:__anon4
action_code	atacmds.h	/^  unsigned short action_code;       \/\/ 16-17: Action code of last SCT command$/;"	m	struct:ata_sct_status_response
action_code	atacmds.h	/^  unsigned short action_code;       \/\/ 3 = Error Recovery Control$/;"	m	struct:ata_sct_error_recovery_control_command
action_code	atacmds.h	/^  unsigned short action_code;       \/\/ 4 = Feature Control$/;"	m	struct:ata_sct_feature_control_command
action_code	atacmds.h	/^  unsigned short action_code;       \/\/ 5 = Data Table$/;"	m	struct:ata_sct_data_table_command
active_power	nvmecmds.h	/^  unsigned short  active_power;$/;"	m	struct:smartmontools::nvme_id_power_state
active_reg_t	regex/regex.h	/^typedef unsigned long int active_reg_t;$/;"	t
active_work_scale	nvmecmds.h	/^  unsigned char   active_work_scale;$/;"	m	struct:smartmontools::nvme_id_power_state
acwu	nvmecmds.h	/^  unsigned short  acwu;$/;"	m	struct:smartmontools::nvme_id_ctrl
adapno	megaraid.h	/^      uint16_t adapno;$/;"	m	struct:uioctl_t::__anon44::__anon45
add_epsilon_src_nodes	regex/regexec.c	/^add_epsilon_src_nodes (dfa, dest_nodes, candidates)$/;"	f	file:
additional_length	scsiata.cpp	/^    unsigned char additional_length;$/;"	m	struct:sg_scsi_sense_hdr	file:
addpath	os_solaris.cpp	/^addpath(const char *path, struct pathlist *res)$/;"	f	file:
addr	linux_nvme_ioctl.h	/^	__u64	addr;$/;"	m	struct:nvme_passthru_cmd
addr	linux_nvme_ioctl.h	/^	__u64	addr;$/;"	m	struct:nvme_user_io
addr	megaraid.h	/^  struct megasas_pd_address addr[MAX_SYS_PDS];$/;"	m	struct:megasas_pd_list	typeref:struct:megasas_pd_list::megasas_pd_address
addr32	aacraid.h	/^  uint32_t addr32;$/;"	m	struct:__anon137
addr64	aacraid.h	/^  address64 addr64;$/;"	m	struct:__anon136
address	os_freebsd.h	/^    u_int32_t	address;$/;"	m	struct:__anon1
address	os_linux.h	/^  unsigned int address;$/;"	m	struct:TAG_TW_SG_Entry
address64	aacraid.h	/^  }  address64;$/;"	t	typeref:struct:__anon135
aen_code	os_freebsd.h	/^	TW_UINT16	aen_code;$/;"	m	struct:tw_cl_event_packet
aerl	nvmecmds.h	/^  unsigned char   aerl;$/;"	m	struct:smartmontools::nvme_id_ctrl
aix_post_process_depfile	depcomp	/^aix_post_process_depfile ()$/;"	f
alasts	regex/regex_internal.h	/^  int alasts; \/* Allocation size of LASTS.  *\/$/;"	m	struct:__anon124
all_units	os_freebsd.h	/^    u_int16_t	all_units;$/;"	m	struct:__anon5
alloc	regex/regex_internal.h	/^  int alloc;$/;"	m	struct:__anon116
alloc	regex/regex_internal.h	/^  int alloc;$/;"	m	struct:__anon122
alloc	regex/regex_internal.h	/^  int alloc;$/;"	m	struct:re_fail_stack_t
alloc	regex/regex_internal.h	/^  int alloc;$/;"	m	struct:re_state_table_entry
allocated	regex/regex.h	/^  unsigned long int allocated;$/;"	m	struct:re_pattern_buffer
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length;$/;"	m	struct:_cdb::__anon62
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon63
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon67
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon72
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon73
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon75
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon76
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon77
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon79
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::__anon90
allocation_length	os_qnxnto.h	/^		uchar_t		allocation_length[2];$/;"	m	struct:_cdb::_mode_sense10
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DIST_COMMON	Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/config.h.in AUTHORS \\$/;"	m
am__EXTRA_smartctl_SOURCES_DIST	Makefile	/^am__EXTRA_smartctl_SOURCES_DIST = os_darwin.cpp os_darwin.h \\$/;"	m
am__EXTRA_smartd_SOURCES_DIST	Makefile	/^am__EXTRA_smartd_SOURCES_DIST = os_darwin.cpp os_darwin.h os_linux.cpp \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/pkg.m4 \\$/;"	m
am__append_1	Makefile	/^am__append_1 = -DSMARTMONTOOLS_DRIVEDBDIR='"$(drivedbdir)"'$/;"	m
am__append_23	Makefile	/^am__append_23 = update-smart-drivedb.8$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(examplesdir)" \\$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__smartctl_SOURCES_DIST	Makefile	/^am__smartctl_SOURCES_DIST = smartctl.cpp smartctl.h atacmdnames.cpp \\$/;"	m
am__smartd_SOURCES_DIST	Makefile	/^am__smartd_SOURCES_DIST = smartd.cpp atacmdnames.cpp atacmdnames.h \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCAS_	Makefile	/^am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCAS_0	Makefile	/^am__v_CCAS_0 = @echo "  CCAS    " $@;$/;"	m
am__v_CCAS_1	Makefile	/^am__v_CCAS_1 = $/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_CXXLD_	Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	Makefile	/^am__v_CXX_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_smartctl_OBJECTS	Makefile	/^am_smartctl_OBJECTS = smartctl.$(OBJEXT) atacmdnames.$(OBJEXT) \\$/;"	m
am_smartd_OBJECTS	Makefile	/^am_smartd_OBJECTS = smartd.$(OBJEXT) atacmdnames.$(OBJEXT) \\$/;"	m
analyze	regex/regcomp.c	/^analyze (dfa)$/;"	f	file:
analyze_tree	regex/regcomp.c	/^analyze_tree (dfa, node)$/;"	f	file:
any_device_auto_ptr	dev_interface.h	/^  explicit any_device_auto_ptr(device_type * dev = 0,$/;"	f	class:any_device_auto_ptr
any_device_auto_ptr	dev_interface.h	/^class any_device_auto_ptr$/;"	c
aport	os_freebsd.h	/^    u_int8_t	aport;$/;"	m	struct:__anon4
append	dev_interface.h	/^  void append(smart_device_list & devlist)$/;"	f	class:smart_device_list
append	knowndrives.cpp	/^  void append(const drive_settings * builtin_tab, unsigned builtin_size)$/;"	f	class:drive_database
appmask	linux_nvme_ioctl.h	/^	__u16	appmask;$/;"	m	struct:nvme_user_io
apptag	linux_nvme_ioctl.h	/^	__u16	apptag;$/;"	m	struct:nvme_user_io
apsta	nvmecmds.h	/^  unsigned char   apsta;$/;"	m	struct:smartmontools::nvme_id_ctrl
arcmsr_ata_pass_through	dev_areca.cpp	/^bool generic_areca_device::arcmsr_ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:generic_areca_device
arcmsr_command_handler	dev_areca.cpp	/^int generic_areca_device::arcmsr_command_handler(unsigned long arcmsr_cmd, unsigned char *data, int data_len)$/;"	f	class:generic_areca_device
arcmsr_do_scsi_io	dev_areca.h	/^  int arcmsr_do_scsi_io(struct scsi_cmnd_io * \/* iop *\/)$/;"	f	class:areca_ata_device
arcmsr_do_scsi_io	dev_areca.h	/^  int arcmsr_do_scsi_io(struct scsi_cmnd_io * \/* iop *\/)$/;"	f	class:areca_scsi_device
arcmsr_do_scsi_io	os_freebsd.cpp	/^int freebsd_areca_ata_device::arcmsr_do_scsi_io(struct scsi_cmnd_io * iop)$/;"	f	class:os_freebsd::freebsd_areca_ata_device
arcmsr_do_scsi_io	os_freebsd.cpp	/^int freebsd_areca_scsi_device::arcmsr_do_scsi_io(struct scsi_cmnd_io * iop)$/;"	f	class:os_freebsd::freebsd_areca_scsi_device
arcmsr_do_scsi_io	os_linux.cpp	/^int linux_areca_ata_device::arcmsr_do_scsi_io(struct scsi_cmnd_io * iop)$/;"	f	class:os_linux::linux_areca_ata_device
arcmsr_do_scsi_io	os_linux.cpp	/^int linux_areca_scsi_device::arcmsr_do_scsi_io(struct scsi_cmnd_io * iop)$/;"	f	class:os_linux::linux_areca_scsi_device
arcmsr_do_scsi_io	os_win32.cpp	/^int win_areca_ata_device::arcmsr_do_scsi_io(struct scsi_cmnd_io * iop)$/;"	f	class:os_win32::win_areca_ata_device
arcmsr_do_scsi_io	os_win32.cpp	/^int win_areca_scsi_device::arcmsr_do_scsi_io(struct scsi_cmnd_io * iop)$/;"	f	class:os_win32::win_areca_scsi_device
arcmsr_get_controller_type	dev_areca.cpp	/^int generic_areca_device::arcmsr_get_controller_type()$/;"	f	class:generic_areca_device
arcmsr_get_dev_type	dev_areca.cpp	/^int generic_areca_device::arcmsr_get_dev_type()$/;"	f	class:generic_areca_device
arcmsr_lock	dev_areca.h	/^  bool arcmsr_lock() { return true; }$/;"	f	class:areca_ata_device
arcmsr_lock	dev_areca.h	/^  bool arcmsr_lock() { return true; }$/;"	f	class:areca_scsi_device
arcmsr_lock	os_freebsd.cpp	/^bool freebsd_areca_ata_device::arcmsr_lock()$/;"	f	class:os_freebsd::freebsd_areca_ata_device
arcmsr_lock	os_freebsd.cpp	/^bool freebsd_areca_scsi_device::arcmsr_lock()$/;"	f	class:os_freebsd::freebsd_areca_scsi_device
arcmsr_lock	os_linux.cpp	/^bool linux_areca_ata_device::arcmsr_lock()$/;"	f	class:os_linux::linux_areca_ata_device
arcmsr_lock	os_linux.cpp	/^bool linux_areca_scsi_device::arcmsr_lock()$/;"	f	class:os_linux::linux_areca_scsi_device
arcmsr_lock	os_win32.cpp	/^bool win_areca_ata_device::arcmsr_lock()$/;"	f	class:os_win32::win_areca_ata_device
arcmsr_lock	os_win32.cpp	/^bool win_areca_scsi_device::arcmsr_lock()$/;"	f	class:os_win32::win_areca_scsi_device
arcmsr_probe	dev_areca.cpp	/^bool generic_areca_device::arcmsr_probe()$/;"	f	class:generic_areca_device
arcmsr_scsi_pass_through	dev_areca.cpp	/^bool generic_areca_device::arcmsr_scsi_pass_through(struct scsi_cmnd_io * iop)$/;"	f	class:generic_areca_device
arcmsr_ui_handler	dev_areca.cpp	/^int generic_areca_device::arcmsr_ui_handler(unsigned char *areca_packet, int areca_packet_len, unsigned char *result)$/;"	f	class:generic_areca_device
arcmsr_unlock	dev_areca.h	/^  bool arcmsr_unlock() { return true; }$/;"	f	class:areca_ata_device
arcmsr_unlock	dev_areca.h	/^  bool arcmsr_unlock() { return true; }$/;"	f	class:areca_scsi_device
arcmsr_unlock	os_freebsd.cpp	/^bool freebsd_areca_ata_device::arcmsr_unlock()$/;"	f	class:os_freebsd::freebsd_areca_ata_device
arcmsr_unlock	os_freebsd.cpp	/^bool freebsd_areca_scsi_device::arcmsr_unlock()$/;"	f	class:os_freebsd::freebsd_areca_scsi_device
arcmsr_unlock	os_linux.cpp	/^bool linux_areca_ata_device::arcmsr_unlock()$/;"	f	class:os_linux::linux_areca_ata_device
arcmsr_unlock	os_linux.cpp	/^bool linux_areca_scsi_device::arcmsr_unlock()$/;"	f	class:os_linux::linux_areca_scsi_device
arcmsr_unlock	os_win32.cpp	/^bool win_areca_ata_device::arcmsr_unlock()$/;"	f	class:os_win32::win_areca_ata_device
arcmsr_unlock	os_win32.cpp	/^bool win_areca_scsi_device::arcmsr_unlock()$/;"	f	class:os_win32::win_areca_scsi_device
areca_ata_device	dev_areca.cpp	/^areca_ata_device::areca_ata_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:areca_ata_device
areca_ata_device	dev_areca.h	/^  areca_ata_device(): smart_device(never_called)$/;"	f	class:areca_ata_device
areca_ata_device	dev_areca.h	/^class areca_ata_device$/;"	c
areca_scsi_device	dev_areca.cpp	/^areca_scsi_device::areca_scsi_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:areca_scsi_device
areca_scsi_device	dev_areca.h	/^  areca_scsi_device(): smart_device(never_called)$/;"	f	class:areca_scsi_device
areca_scsi_device	dev_areca.h	/^class areca_scsi_device$/;"	c
argv	getopt/getopt1.c	/^     char **argv;$/;"	v
array	regex/regex_internal.h	/^  re_dfastate_t **array;$/;"	m	struct:__anon122
array	regex/regex_internal.h	/^  re_dfastate_t **array;$/;"	m	struct:re_state_table_entry
ars	megaraid.h	/^  uint8_t  ars : 1;$/;"	m	struct:__anon41
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
asb	os_qnxnto.h	/^	ushort_t	asb;				\/\/ Additional Sense uchar_ts (Max 256-18)$/;"	m	struct:_scsi_sense
asc	os_qnxnto.h	/^	uchar_t		asc;				\/\/ Additional Sense Code$/;"	m	struct:_scsi_sense
asc	os_qnxnto.h	/^	uchar_t		asc;				\/\/ Additional Sense Code$/;"	m	struct:_scsi_sense_descriptor
asc	scsiata.cpp	/^    unsigned char asc;$/;"	m	struct:sg_scsi_sense_hdr	file:
asc	scsicmds.h	/^    UINT8 asc;$/;"	m	struct:scsi_sense_disect
ascq	os_qnxnto.h	/^	uchar_t		ascq;				\/\/ Additional Sense Code Qualifier$/;"	m	struct:_scsi_sense
ascq	os_qnxnto.h	/^	uchar_t		ascq;				\/\/ Additional Sense Code Qualifier$/;"	m	struct:_scsi_sense_descriptor
ascq	scsiata.cpp	/^    unsigned char ascq;$/;"	m	struct:sg_scsi_sense_hdr	file:
ascq	scsicmds.h	/^    UINT8 ascq;$/;"	m	struct:scsi_sense_disect
asl	os_qnxnto.h	/^	uchar_t		asl;				\/\/ Additional Sense Length$/;"	m	struct:_scsi_sense
asl	os_qnxnto.h	/^	uchar_t		asl;				\/\/ Additional Sense Length$/;"	m	struct:_scsi_sense_descriptor
assert	os_win32.cpp	46;"	d	file:
assert	os_win32.cpp	47;"	d	file:
assert_sizeof_ptr_t	megaraid.h	/^typedef char assert_sizeof_ptr_t[sizeof(ptr_t) == 8 ? 1 : -1];$/;"	t
asub_tops	regex/regex_internal.h	/^  int asub_tops;$/;"	m	struct:__anon125
at	dev_interface.h	/^  const smart_device * at(unsigned i) const$/;"	f	class:smart_device_list
at	dev_interface.h	/^  smart_device * at(unsigned i)$/;"	f	class:smart_device_list
ata	os_freebsd.h	/^    TWE_Command_ATA		ata;$/;"	m	union:__anon11
ataCheckPowerMode	atacmds.cpp	/^int ataCheckPowerMode(ata_device * device) {$/;"	f
ataDisableAutoOffline	atacmds.cpp	/^int ataDisableAutoOffline (ata_device * device){$/;"	f
ataDisableAutoSave	atacmds.cpp	/^int ataDisableAutoSave(ata_device * device){$/;"	f
ataDisableSmart	atacmds.cpp	/^int ataDisableSmart (ata_device * device ){$/;"	f
ataDoesSmartWork	atacmds.cpp	/^int ataDoesSmartWork(ata_device * device){$/;"	f
ataEnableAutoOffline	atacmds.cpp	/^int ataEnableAutoOffline (ata_device * device){$/;"	f
ataEnableAutoSave	atacmds.cpp	/^int ataEnableAutoSave(ata_device * device){$/;"	f
ataEnableSmart	atacmds.cpp	/^int ataEnableSmart (ata_device * device ){$/;"	f
ataGetSCTErrorRecoveryControltime	atacmds.cpp	/^int ataGetSCTErrorRecoveryControltime(ata_device * device, unsigned type, unsigned short & time_limit)$/;"	f
ataGetSetSCTErrorRecoveryControltime	atacmds.cpp	/^static int ataGetSetSCTErrorRecoveryControltime(ata_device * device, unsigned type,$/;"	f	file:
ataGetSetSCTWriteCacheReordering	atacmds.cpp	/^int ataGetSetSCTWriteCacheReordering(ata_device * device, bool enable, bool persistent, bool set)$/;"	f
ataIsSmartEnabled	atacmds.cpp	/^int ataIsSmartEnabled(const ata_identify_device * drive)$/;"	f
ataPrintMain	ataprint.cpp	/^int ataPrintMain (ata_device * device, const ata_print_options & options)$/;"	f
ataPrintSCTCapability	ataprint.cpp	/^static void ataPrintSCTCapability(const ata_identify_device *drive)$/;"	f	file:
ataPrintSCTErrorRecoveryControl	ataprint.cpp	/^static void ataPrintSCTErrorRecoveryControl(bool set, unsigned short read_timer, unsigned short write_timer)$/;"	f	file:
ataPrintSCTStatus	ataprint.cpp	/^static int ataPrintSCTStatus(const ata_sct_status_response * sts)$/;"	f	file:
ataPrintSCTTempHist	ataprint.cpp	/^static int ataPrintSCTTempHist(const ata_sct_temperature_history_table * tmh)$/;"	f	file:
ataPrintSelectiveSelfTestLog	ataprint.cpp	/^static void ataPrintSelectiveSelfTestLog(const ata_selective_self_test_log * log, const ata_smart_values * sv)$/;"	f	file:
ataPrintSmartSelfTestEntry	atacmds.cpp	/^int ataPrintSmartSelfTestEntry(unsigned testnum, unsigned char test_type,$/;"	f
ataPrintSmartSelfTestlog	atacmds.cpp	/^int ataPrintSmartSelfTestlog(const ata_smart_selftestlog * data, bool allentries,$/;"	f
ataReadErrorLog	atacmds.cpp	/^int ataReadErrorLog (ata_device * device, ata_smart_errorlog *data,$/;"	f
ataReadExtErrorLog	atacmds.cpp	/^bool ataReadExtErrorLog(ata_device * device, ata_smart_exterrlog * log,$/;"	f
ataReadExtSelfTestLog	atacmds.cpp	/^bool ataReadExtSelfTestLog(ata_device * device, ata_smart_extselftestlog * log,$/;"	f
ataReadLogDirectory	atacmds.cpp	/^int ataReadLogDirectory(ata_device * device, ata_smart_log_directory * data, bool gpl)$/;"	f
ataReadLogExt	atacmds.cpp	/^bool ataReadLogExt(ata_device * device, unsigned char logaddr,$/;"	f
ataReadSCTStatus	atacmds.cpp	/^int ataReadSCTStatus(ata_device * device, ata_sct_status_response * sts)$/;"	f
ataReadSCTTempHist	atacmds.cpp	/^int ataReadSCTTempHist(ata_device * device, ata_sct_temperature_history_table * tmh,$/;"	f
ataReadSelectiveSelfTestLog	atacmds.cpp	/^int ataReadSelectiveSelfTestLog(ata_device * device, struct ata_selective_self_test_log *data){$/;"	f
ataReadSelfTestLog	atacmds.cpp	/^int ataReadSelfTestLog (ata_device * device, ata_smart_selftestlog * data,$/;"	f
ataReadSmartLog	atacmds.cpp	/^bool ataReadSmartLog(ata_device * device, unsigned char logaddr,$/;"	f
ataReadSmartThresholds	atacmds.cpp	/^int ataReadSmartThresholds (ata_device * device, struct ata_smart_thresholds_pvt *data){$/;"	f
ataReadSmartValues	atacmds.cpp	/^int ataReadSmartValues(ata_device * device, struct ata_smart_values *data){$/;"	f
ataSetSCTErrorRecoveryControltime	atacmds.cpp	/^int ataSetSCTErrorRecoveryControltime(ata_device * device, unsigned type, unsigned short time_limit)$/;"	f
ataSetSCTTempInterval	atacmds.cpp	/^int ataSetSCTTempInterval(ata_device * device, unsigned interval, bool persistent)$/;"	f
ataSmartStatus2	atacmds.cpp	/^int ataSmartStatus2(ata_device * device){$/;"	f
ataSmartSupport	atacmds.cpp	/^int ataSmartSupport(const ata_identify_device * drive)$/;"	f
ataSmartTest	atacmds.cpp	/^int ataSmartTest(ata_device * device, int testtype, bool force,$/;"	f
ataWriteSelectiveSelfTestLog	atacmds.cpp	/^int ataWriteSelectiveSelfTestLog(ata_device * device, ata_selective_selftest_args & args,$/;"	f
ata_attr_raw_format	atacmds.h	/^enum ata_attr_raw_format$/;"	g
ata_attr_state	atacmds.h	/^enum ata_attr_state$/;"	g
ata_attribute	smartd.cpp	/^    ata_attribute() : id(0), val(0), worst(0), raw(0), resvd(0) { }$/;"	f	struct:persistent_dev_state::ata_attribute
ata_attribute	smartd.cpp	/^  struct ata_attribute {$/;"	s	struct:persistent_dev_state	file:
ata_attributes	smartd.cpp	/^  ata_attribute ata_attributes[NUMBER_ATA_SMART_ATTRIBUTES];$/;"	m	struct:persistent_dev_state	file:
ata_cmd_in	dev_interface.cpp	/^ata_cmd_in::ata_cmd_in()$/;"	f	class:ata_cmd_in
ata_cmd_in	dev_interface.h	/^struct ata_cmd_in$/;"	s
ata_cmd_is_ok	dev_interface.h	/^  bool ata_cmd_is_ok(const ata_cmd_in & in,$/;"	f	class:ata_device
ata_cmd_is_supported	dev_interface.cpp	/^bool ata_device::ata_cmd_is_supported(const ata_cmd_in & in,$/;"	f	class:ata_device
ata_cmd_out	dev_interface.cpp	/^ata_cmd_out::ata_cmd_out()$/;"	f	class:ata_cmd_out
ata_cmd_out	dev_interface.h	/^struct ata_cmd_out$/;"	s
ata_command_interface	atacmds.cpp	/^int parsed_ata_device::ata_command_interface(smart_command_set command, int select, char * data)$/;"	f	class:__anon51::parsed_ata_device
ata_command_interface	dev_legacy.cpp	/^int legacy_ata_device::ata_command_interface(smart_command_set command, int select, char * data)$/;"	f	class:os::legacy_ata_device
ata_command_interface	os_freebsd.cpp	/^int freebsd_highpoint_device::ata_command_interface(smart_command_set command, int select, char * data)$/;"	f	class:os_freebsd::freebsd_highpoint_device
ata_command_interface	os_linux.cpp	/^int linux_ata_device::ata_command_interface(smart_command_set command, int select, char * data)$/;"	f	class:os_linux::linux_ata_device
ata_command_interface	os_linux.cpp	/^int linux_highpoint_device::ata_command_interface(smart_command_set command, int select, char * data)$/;"	f	class:os_linux::linux_highpoint_device
ata_command_interface	os_linux.cpp	/^int linux_marvell_device::ata_command_interface(smart_command_set command, int select, char * data)$/;"	f	class:os_linux::linux_marvell_device
ata_command_interface	os_netbsd.cpp	/^ata_command_interface(int fd, smart_command_set command, int select, char *data)$/;"	f
ata_command_interface	os_openbsd.cpp	/^ata_command_interface(int fd, smart_command_set command, int select, char *data)$/;"	f
ata_command_interface	os_qnxnto.cpp	/^int ata_command_interface(int fd,smart_command_set command,int select,char *data)$/;"	f
ata_command_interface	os_solaris.cpp	/^int ata_command_interface(int fd, smart_command_set command, int select, char *data){$/;"	f
ata_command_interface	os_win32.cpp	/^int win_tw_cli_device::ata_command_interface(smart_command_set command, int \/*select*\/, char * data)$/;"	f	class:os_win32::win_tw_cli_device
ata_command_interface	scsiata.cpp	/^int usbcypress_device::ata_command_interface(smart_command_set command, int select, char *data)$/;"	f	class:sat::usbcypress_device
ata_debugmode	atacmds.cpp	/^unsigned char ata_debugmode = 0;$/;"	v
ata_device	dev_interface.h	/^  ata_device()$/;"	f	class:ata_device
ata_device	dev_interface.h	/^class ata_device$/;"	c
ata_device_auto_ptr	dev_interface.h	/^typedef any_device_auto_ptr<ata_device>   ata_device_auto_ptr;$/;"	t
ata_device_with_command_set	dev_ata_cmd_set.h	/^  ata_device_with_command_set()$/;"	f	class:ata_device_with_command_set
ata_device_with_command_set	dev_ata_cmd_set.h	/^class ata_device_with_command_set$/;"	c
ata_error_count	atacmds.h	/^  unsigned short int ata_error_count;$/;"	m	struct:ata_smart_errorlog
ata_find_attr_index	atacmds.cpp	/^int ata_find_attr_index(unsigned char id, const ata_smart_values & smartval)$/;"	f
ata_format_attr_raw_value	atacmds.cpp	/^std::string ata_format_attr_raw_value(const ata_smart_attribute & attr,$/;"	f
ata_format_id_string	atacmds.cpp	/^void ata_format_id_string(char * out, const unsigned char * in, int n)$/;"	f
ata_get_attr_raw_value	atacmds.cpp	/^uint64_t ata_get_attr_raw_value(const ata_smart_attribute & attr,$/;"	f
ata_get_attr_state	atacmds.cpp	/^ata_attr_state ata_get_attr_state(const ata_smart_attribute & attr,$/;"	f
ata_get_def_options	os_win32.cpp	/^static const char * ata_get_def_options()$/;"	f	namespace:os_win32
ata_get_rotation_rate	atacmds.cpp	/^int ata_get_rotation_rate(const ata_identify_device * id)$/;"	f
ata_get_size_info	atacmds.cpp	/^void ata_get_size_info(const ata_identify_device * id, ata_size_info & sizes)$/;"	f
ata_get_smart_attr_name	atacmds.cpp	/^std::string ata_get_smart_attr_name(unsigned char id, const ata_vendor_attr_defs & defs,$/;"	f
ata_get_wwn	atacmds.cpp	/^int ata_get_wwn(const ata_identify_device * id, unsigned & oui, uint64_t & unique_id)$/;"	f
ata_identify_device	atacmds.h	/^struct ata_identify_device {$/;"	s
ata_identify_is_cached	atacmds.cpp	/^bool parsed_ata_device::ata_identify_is_cached() const$/;"	f	class:__anon51::parsed_ata_device
ata_identify_is_cached	dev_interface.cpp	/^bool ata_device::ata_identify_is_cached() const$/;"	f	class:ata_device
ata_identify_is_cached	os_win32.cpp	/^bool win_ata_device::ata_identify_is_cached() const$/;"	f	class:os_win32::win_ata_device
ata_in_regs	dev_interface.h	/^struct ata_in_regs$/;"	s
ata_in_regs_48bit	dev_interface.cpp	/^ata_in_regs_48bit::ata_in_regs_48bit()$/;"	f	class:ata_in_regs_48bit
ata_in_regs_48bit	dev_interface.h	/^struct ata_in_regs_48bit$/;"	s
ata_interpret_sense	os_qnxnto.cpp	/^static int ata_interpret_sense(struct cam_pass_thru *cpt,void *sense,int *status,int rcount)$/;"	f	file:
ata_log_request	ataprint.h	/^  ata_log_request()$/;"	f	struct:ata_log_request
ata_log_request	ataprint.h	/^struct ata_log_request$/;"	s
ata_nodata_command	atacmds.cpp	/^bool ata_nodata_command(ata_device * device, unsigned char command,$/;"	f
ata_out_regs	dev_interface.h	/^struct ata_out_regs$/;"	s
ata_out_regs_48bit	dev_interface.cpp	/^ata_out_regs_48bit::ata_out_regs_48bit()$/;"	f	class:ata_out_regs_48bit
ata_out_regs_48bit	dev_interface.h	/^struct ata_out_regs_48bit$/;"	s
ata_out_regs_flags	dev_interface.h	/^  ata_out_regs_flags()$/;"	f	struct:ata_out_regs_flags
ata_out_regs_flags	dev_interface.h	/^struct ata_out_regs_flags$/;"	s
ata_pass_through	dev_areca.cpp	/^bool areca_ata_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:areca_ata_device
ata_pass_through	dev_ata_cmd_set.cpp	/^bool ata_device_with_command_set::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:ata_device_with_command_set
ata_pass_through	dev_interface.cpp	/^bool ata_device::ata_pass_through(const ata_cmd_in & in)$/;"	f	class:ata_device
ata_pass_through	os_darwin.cpp	/^bool darwin_ata_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:os::darwin_ata_device
ata_pass_through	os_freebsd.cpp	/^bool freebsd_ata_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:os_freebsd::freebsd_ata_device
ata_pass_through	os_freebsd.cpp	/^bool freebsd_escalade_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:os_freebsd::freebsd_escalade_device
ata_pass_through	os_linux.cpp	/^bool linux_escalade_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:os_linux::linux_escalade_device
ata_pass_through	os_win32.cpp	/^bool csmi_ata_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:os_win32::csmi_ata_device
ata_pass_through	os_win32.cpp	/^bool win_ata_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:os_win32::win_ata_device
ata_pass_through	scsiata.cpp	/^bool sat_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:sat::sat_device
ata_pass_through	scsiata.cpp	/^bool usbjmicron_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:sat::usbjmicron_device
ata_pass_through	scsiata.cpp	/^bool usbprolific_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:sat::usbprolific_device
ata_pass_through	scsiata.cpp	/^bool usbsunplus_device::ata_pass_through(const ata_cmd_in & in, ata_cmd_out & out)$/;"	f	class:sat::usbsunplus_device
ata_pass_through_ioctl	os_win32.cpp	/^static int ata_pass_through_ioctl(HANDLE hdevice, IDEREGS * regs, IDEREGS * prev_regs, char * data, int datasize)$/;"	f	namespace:os_win32
ata_pass_thru	os_qnxnto.cpp	/^static int ata_pass_thru(int fd,struct cam_pass_thru *pcpt)$/;"	f	file:
ata_pass_thru	os_qnxnto.h	/^	} ata_pass_thru;$/;"	m	union:_cdb	typeref:struct:_cdb::_ata_pass_thru
ata_pass_thru_	os_qnxnto.h	/^	} ata_pass_thru_;$/;"	v	typeref:struct:_ata_pass_thru
ata_print_identify_data	ataidentify.cpp	/^void ata_print_identify_data(const void * id, bool all_words, int bit_level)$/;"	f
ata_print_options	ataprint.h	/^  ata_print_options()$/;"	f	struct:ata_print_options
ata_print_options	ataprint.h	/^struct ata_print_options$/;"	s
ata_read_identity	atacmds.cpp	/^int ata_read_identity(ata_device * device, ata_identify_device * buf, bool fix_swapped_id,$/;"	f
ata_reg_alias_16	dev_interface.h	/^  ata_reg_alias_16(ata_register & lo, ata_register & hi)$/;"	f	class:ata_reg_alias_16
ata_reg_alias_16	dev_interface.h	/^class ata_reg_alias_16$/;"	c
ata_reg_alias_48	dev_interface.h	/^  ata_reg_alias_48(ata_register & ll, ata_register & lm, ata_register & lh,$/;"	f	class:ata_reg_alias_48
ata_reg_alias_48	dev_interface.h	/^class ata_reg_alias_48$/;"	c
ata_register	dev_interface.h	/^  ata_register()$/;"	f	class:ata_register
ata_register	dev_interface.h	/^class ata_register$/;"	c
ata_return_temperature_value	atacmds.cpp	/^unsigned char ata_return_temperature_value(const ata_smart_values * data, const ata_vendor_attr_defs & defs)$/;"	f
ata_sct_data_table_command	atacmds.h	/^struct ata_sct_data_table_command$/;"	s
ata_sct_error_recovery_control_command	atacmds.h	/^struct ata_sct_error_recovery_control_command$/;"	s
ata_sct_feature_control_command	atacmds.h	/^struct ata_sct_feature_control_command$/;"	s
ata_sct_status_response	atacmds.h	/^struct ata_sct_status_response$/;"	s
ata_sct_temperature_history_table	atacmds.h	/^struct ata_sct_temperature_history_table$/;"	s
ata_selective_self_test_log	atacmds.h	/^struct ata_selective_self_test_log {$/;"	s
ata_selective_selftest_args	atacmds.h	/^  ata_selective_selftest_args()$/;"	f	struct:ata_selective_selftest_args
ata_selective_selftest_args	atacmds.h	/^struct ata_selective_selftest_args$/;"	s
ata_sense_data	os_qnxnto.cpp	/^static int ata_sense_data(void *sdata,int *error,int *key,int *asc,int *ascq)$/;"	f	file:
ata_set_features	atacmds.cpp	/^bool ata_set_features(ata_device * device, unsigned char features,$/;"	f
ata_size_info	atacmds.h	/^struct ata_size_info$/;"	s
ata_smart_attribute	atacmds.h	/^struct ata_smart_attribute {$/;"	s
ata_smart_errorlog	atacmds.h	/^struct ata_smart_errorlog {$/;"	s
ata_smart_errorlog_command_struct	atacmds.h	/^struct ata_smart_errorlog_command_struct {$/;"	s
ata_smart_errorlog_error_struct	atacmds.h	/^struct ata_smart_errorlog_error_struct {$/;"	s
ata_smart_errorlog_struct	atacmds.h	/^struct ata_smart_errorlog_struct {$/;"	s
ata_smart_exterrlog	atacmds.h	/^struct ata_smart_exterrlog$/;"	s
ata_smart_exterrlog_command	atacmds.h	/^struct ata_smart_exterrlog_command$/;"	s
ata_smart_exterrlog_error	atacmds.h	/^struct ata_smart_exterrlog_error$/;"	s
ata_smart_exterrlog_error_log	atacmds.h	/^struct ata_smart_exterrlog_error_log$/;"	s
ata_smart_extselftestlog	atacmds.h	/^struct ata_smart_extselftestlog$/;"	s
ata_smart_extselftestlog_desc	atacmds.h	/^struct ata_smart_extselftestlog_desc$/;"	s
ata_smart_log_directory	atacmds.h	/^struct ata_smart_log_directory {$/;"	s
ata_smart_log_entry	atacmds.h	/^struct ata_smart_log_entry {$/;"	s
ata_smart_selftestlog	atacmds.h	/^struct ata_smart_selftestlog {$/;"	s
ata_smart_selftestlog	os_netbsd.h	36;"	d
ata_smart_selftestlog	os_netbsd.h	42;"	d
ata_smart_selftestlog	os_openbsd.h	43;"	d
ata_smart_selftestlog	os_openbsd.h	49;"	d
ata_smart_selftestlog_struct	atacmds.h	/^struct ata_smart_selftestlog_struct {$/;"	s
ata_smart_threshold_entry	atacmds.h	/^struct ata_smart_threshold_entry {$/;"	s
ata_smart_thresholds_pvt	atacmds.h	/^struct ata_smart_thresholds_pvt {$/;"	s
ata_smart_values	atacmds.h	/^struct ata_smart_values {$/;"	s
ata_vendor_attr_defs	atacmds.h	/^class ata_vendor_attr_defs$/;"	c
ata_vendor_def_prior	atacmds.h	/^enum ata_vendor_def_prior$/;"	g
ata_via_3ware_miniport_ioctl	os_win32.cpp	/^static int ata_via_3ware_miniport_ioctl(HANDLE hdevice, IDEREGS * regs, char * data, int datasize, int port)$/;"	f	namespace:os_win32
ata_via_scsi_miniport_smart_ioctl	os_win32.cpp	/^static int ata_via_scsi_miniport_smart_ioctl(HANDLE hdevice, IDEREGS * regs, char * data, int datasize)$/;"	f	namespace:os_win32
atacmdnames_cpp_cvsid	atacmdnames.cpp	/^const char * atacmdnames_cpp_cvsid = "$Id: atacmdnames.cpp 4120 2015-08-27 16:12:21Z samm2 $"$/;"	v
atacmds_cpp_cvsid	atacmds.cpp	/^const char * atacmds_cpp_cvsid = "$Id: atacmds.cpp 4301 2016-04-16 20:48:29Z chrfranke $"$/;"	v
atadrvrs	os_solaris.cpp	/^static const char *atadrvrs[] = {$/;"	v	file:
ataerrorcount	smartd.cpp	/^  int ataerrorcount;                      \/\/ Total number of ATA errors$/;"	m	struct:persistent_dev_state	file:
ataidentify_cpp_cvsid	ataidentify.cpp	/^const char * ataidentify_cpp_cvsid = "$Id: ataidentify.cpp 4120 2015-08-27 16:12:21Z samm2 $"$/;"	v
ataprint_cpp_cvsid	ataprint.cpp	/^const char * ataprint_cpp_cvsid = "$Id: ataprint.cpp 4256 2016-03-27 16:51:32Z chrfranke $"$/;"	v
attribute_defs	ataprint.h	/^  ata_vendor_attr_defs attribute_defs; \/\/ -v options$/;"	m	struct:ata_print_options
attribute_defs	smartd.cpp	/^  ata_vendor_attr_defs attribute_defs;    \/\/ -v options$/;"	m	struct:dev_config	file:
attribute_flags	smartd.cpp	/^  attribute_flags()$/;"	f	class:attribute_flags
attribute_flags	smartd.cpp	/^class attribute_flags$/;"	c	file:
attribute_hidden	getopt/getopt.c	/^int __getopt_initialized attribute_hidden;$/;"	v
attribute_hidden	getopt/getopt.c	95;"	d	file:
attribute_hidden	regex/regcomp.c	/^const char __re_error_msgid[] attribute_hidden =$/;"	v
attribute_hidden	regex/regcomp.c	/^const size_t __re_error_msgid_idx[] attribute_hidden =$/;"	v
attribute_hidden	regex/regex_internal.h	106;"	d
attributelog	Makefile	/^attributelog = $/;"	m
attributelogdir	Makefile	/^attributelogdir = $/;"	m
attrlog_file	smartd.cpp	/^  std::string attrlog_file;               \/\/ Path of the persistent attrlog file, empty if none$/;"	m	struct:dev_config	file:
attrlog_path_prefix	smartd.cpp	/^static std::string attrlog_path_prefix$/;"	v	file:
autodetect_open	dev_interface.cpp	/^smart_device * smart_device::autodetect_open()$/;"	f	class:smart_device
autodetect_open	dev_legacy.cpp	/^smart_device * legacy_scsi_device::autodetect_open()$/;"	f	class:os::legacy_scsi_device
autodetect_open	os_freebsd.cpp	/^smart_device * freebsd_areca_ata_device::autodetect_open()$/;"	f	class:os_freebsd::freebsd_areca_ata_device
autodetect_open	os_freebsd.cpp	/^smart_device * freebsd_areca_scsi_device::autodetect_open()$/;"	f	class:os_freebsd::freebsd_areca_scsi_device
autodetect_open	os_freebsd.cpp	/^smart_device * freebsd_scsi_device::autodetect_open()$/;"	f	class:os_freebsd::freebsd_scsi_device
autodetect_open	os_linux.cpp	/^smart_device * linux_areca_ata_device::autodetect_open()$/;"	f	class:os_linux::linux_areca_ata_device
autodetect_open	os_linux.cpp	/^smart_device * linux_areca_scsi_device::autodetect_open()$/;"	f	class:os_linux::linux_areca_scsi_device
autodetect_open	os_linux.cpp	/^smart_device * linux_megaraid_device::autodetect_open()$/;"	f	class:os_linux::linux_megaraid_device
autodetect_open	os_linux.cpp	/^smart_device * linux_scsi_device::autodetect_open()$/;"	f	class:os_linux::linux_scsi_device
autodetect_open	os_win32.cpp	/^smart_device * win_areca_ata_device::autodetect_open()$/;"	f	class:os_win32::win_areca_ata_device
autodetect_open	os_win32.cpp	/^smart_device * win_areca_scsi_device::autodetect_open()$/;"	f	class:os_win32::win_areca_scsi_device
autodetect_open	scsiata.cpp	/^smart_device * sat_device::autodetect_open()$/;"	f	class:sat::sat_device
autodetect_sat_device	scsiata.cpp	/^ata_device * smart_interface::autodetect_sat_device(scsi_device * scsidev,$/;"	f	class:smart_interface
autodetect_smart_device	dev_legacy.cpp	/^smart_device * legacy_smart_interface::autodetect_smart_device(const char * name)$/;"	f	class:os::legacy_smart_interface
autodetect_smart_device	os_darwin.cpp	/^smart_device * darwin_smart_interface::autodetect_smart_device(const char * name)$/;"	f	class:os::darwin_smart_interface
autodetect_smart_device	os_freebsd.cpp	/^smart_device * freebsd_smart_interface::autodetect_smart_device(const char * name)$/;"	f	class:os_freebsd::freebsd_smart_interface
autodetect_smart_device	os_generic.cpp	/^smart_device * generic_smart_interface::autodetect_smart_device(const char * name)$/;"	f	class:generic::generic_smart_interface
autodetect_smart_device	os_linux.cpp	/^smart_device * linux_smart_interface::autodetect_smart_device(const char * name)$/;"	f	class:os_linux::linux_smart_interface
autodetect_smart_device	os_win32.cpp	/^smart_device * win_smart_interface::autodetect_smart_device(const char * name)$/;"	f	class:os_win32::win_smart_interface
autoofflinetest	smartd.cpp	/^  char autoofflinetest;                   \/\/ 1=disable, 2=enable Auto Offline Test$/;"	m	struct:dev_config	file:
autosave	smartd.cpp	/^  char autosave;                          \/\/ 1=disable, 2=enable Autosave Attributes$/;"	m	struct:dev_config	file:
avail_spare	nvmecmds.h	/^  unsigned char  avail_spare;$/;"	m	struct:smartmontools::nvme_smart_log
avscc	nvmecmds.h	/^  unsigned char   avscc;$/;"	m	struct:smartmontools::nvme_id_ctrl
awun	nvmecmds.h	/^  unsigned short  awun;$/;"	m	struct:smartmontools::nvme_id_ctrl
awupf	nvmecmds.h	/^  unsigned short  awupf;$/;"	m	struct:smartmontools::nvme_id_ctrl
b	megaraid.h	/^    u8 b[12];$/;"	m	union:megasas_dcmd_frame::__anon46
b	os_linux.h	/^  } b;$/;"	m	union:ide_reg_valid_s	typeref:struct:ide_reg_valid_s::__anon40
bAdditionalCDB	csmisas.h	/^   __u8  bAdditionalCDB[24];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bAdditionalCDBLength	csmisas.h	/^   __u8  bAdditionalCDBLength;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bAdditionalRequestBytes	csmisas.h	/^   __u8  bAdditionalRequestBytes[1016];$/;"	m	struct:_CSMI_SAS_SMP_REQUEST
bAdditionalResponseBytes	csmisas.h	/^   __u8  bAdditionalResponseBytes[1016];$/;"	m	struct:_CSMI_SAS_SMP_RESPONSE
bApplicationScratchPad	csmisas.h	/^   __u8  bApplicationScratchPad[16];$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
bApplicationScratchPad	csmisas.h	/^   __u8  bApplicationScratchPad[16];$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
bApplicationScratchPad	csmisas.h	/^   __u8  bApplicationScratchPad[16];$/;"	m	struct:_CSMI_SAS_RAID_SET_SPARE_INFO
bApplicationScratchPad	csmisas.h	/^   __u8  bApplicationScratchPad[16];$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
bAttachedPhyIdentifier	csmisas.h	/^   __u8  bAttachedPhyIdentifier;$/;"	m	struct:_CSMI_SAS_DRIVE_LOCATION
bAttachedSASAddress	csmisas.h	/^   __u8  bAttachedSASAddress[8];$/;"	m	struct:_CSMI_SAS_DRIVE_LOCATION
bAutoDiscover	csmisas.h	/^   __u8  bAutoDiscover;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bBayIdentifier	csmisas.h	/^   __u8  bBayIdentifier;$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bBayPrefix	csmisas.h	/^   __u8  bBayPrefix[32];$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bBoxName	csmisas.h	/^   __u8  bBoxName[16];$/;"	m	struct:_CSMI_SAS_DRIVE_LOCATION
bBuffer	os_win32.cpp	/^  BYTE bBuffer[1];$/;"	m	struct:_SENDCMDINPARAMS_EX	file:
bBusNumber	csmisas.h	/^   __u8  bBusNumber;$/;"	m	struct:_CSMI_SAS_PCI_BUS_ADDRESS
bCDB	csmisas.h	/^   __u8  bCDB[16];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bCDBLength	csmisas.h	/^   __u8  bCDBLength;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bCacheRatio	csmisas.h	/^   __u8  bCacheRatio;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bCacheRatio	csmisas.h	/^   __u8  bCacheRatio;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
bCacheRatio	csmisas.h	/^   __u8  bCacheRatio;$/;"	m	struct:_CSMI_SAS_RAID_SET_CACHE_INFO
bCacheRatioFlag	csmisas.h	/^   __u8  bCacheRatioFlag;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bCacheRatioFlag	csmisas.h	/^   __u8  bCacheRatioFlag;$/;"	m	struct:_CSMI_SAS_RAID_SET_CACHE_INFO
bCacheRatiosSupported	csmisas.h	/^   __u8  bCacheRatiosSupported[104];$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bCacheSetting	csmisas.h	/^   __u8  bCacheSetting;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
bCacheSetting	csmisas.h	/^   __u8  bCacheSetting;$/;"	m	struct:_CSMI_SAS_RAID_SET_CACHE_INFO
bClearConfiguration	csmisas.h	/^   __u8  bClearConfiguration[8];$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bCommandFIS	csmisas.h	/^   __u8  bCommandFIS[20];$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
bConnectionRate	csmisas.h	/^   __u8  bConnectionRate;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
bConnectionRate	csmisas.h	/^   __u8  bConnectionRate;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bConnectionRate	csmisas.h	/^   __u8  bConnectionRate;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
bConnectionStatus	csmisas.h	/^   __u8  bConnectionStatus;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
bConnectionStatus	csmisas.h	/^   __u8  bConnectionStatus;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
bConnectionStatus	csmisas.h	/^   __u8  bConnectionStatus;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_STATUS
bConnector	csmisas.h	/^   __u8  bConnector[16];$/;"	m	struct:_CSMI_SAS_DRIVE_LOCATION
bConnector	csmisas.h	/^   __u8  bConnector[16];$/;"	m	struct:_CSMI_SAS_GET_CONNECTOR_INFO
bControllerClass	csmisas.h	/^   __u8  bControllerClass;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
bDataBuffer	csmisas.h	/^   __u8  bDataBuffer[1];$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD_BUFFER
bDataBuffer	csmisas.h	/^   __u8  bDataBuffer[1];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_BUFFER
bDataBuffer	csmisas.h	/^   __u8  bDataBuffer[1];$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_BUFFER
bDataPresent	csmisas.h	/^   __u8  bDataPresent;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
bDataType	csmisas.h	/^   __u8  bDataType;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
bDefaultRebuildPriority	csmisas.h	/^   __u8  bDefaultRebuildPriority;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bDefaultSurfaceScanPriority	csmisas.h	/^   __u8  bDefaultSurfaceScanPriority;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bDefaultTransformPriority	csmisas.h	/^   __u8  bDefaultTransformPriority;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bDestinationSASAddress	csmisas.h	/^   __u8  bDestinationSASAddress[8];$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
bDestinationSASAddress	csmisas.h	/^   __u8  bDestinationSASAddress[8];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bDestinationSASAddress	csmisas.h	/^   __u8  bDestinationSASAddress[8];$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
bDeviceIdentificationVPDPage	csmisas.h	/^   __u8  bDeviceIdentificationVPDPage[1];$/;"	m	struct:_CSMI_SAS_RAID_DEVICE_ID
bDeviceNumber	csmisas.h	/^   __u8  bDeviceNumber;$/;"	m	struct:_CSMI_SAS_PCI_BUS_ADDRESS
bDeviceType	csmisas.h	/^   __u8  bDeviceType;$/;"	m	struct:_CSMI_SAS_IDENTIFY
bDriveCount	csmisas.h	/^   __u8  bDriveCount;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
bDriveNumber	os_win32.cpp	/^  BYTE bDriveNumber;$/;"	m	struct:_SENDCMDINPARAMS_EX	file:
bDriveStatus	csmisas.h	/^   __u8  bDriveStatus;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bDriveType	csmisas.h	/^   __u8  bDriveType;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bDriveUsage	csmisas.h	/^   __u8  bDriveUsage;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bDriveUsage	csmisas.h	/^   __u8  bDriveUsage;$/;"	m	struct:_CSMI_SAS_RAID_SET_DRIVE_LIST
bEnclosureIdentifier	csmisas.h	/^   __u8  bEnclosureIdentifier[8];$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bEnclosureName	csmisas.h	/^   __u8  bEnclosureName[32];$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bExistingLun	csmisas.h	/^   __u8  bExistingLun[8];$/;"	m	struct:_CSMI_SAS_RAID_SET_LIST
bExtentType	csmisas.h	/^   __u8  bExtentType;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO
bFailureDescription	csmisas.h	/^   __u8  bFailureDescription[80];$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bFailureDescription	csmisas.h	/^   __u8  bFailureDescription[80];$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
bFailureDescription	csmisas.h	/^   __u8  bFailureDescription[80];$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION
bFirmware	csmisas.h	/^   __u8  bFirmware[8];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bFixedPattern	csmisas.h	/^   __u8  bFixedPattern;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bFrameType	csmisas.h	/^   __u8  bFrameType;$/;"	m	struct:_CSMI_SAS_SMP_REQUEST
bFrameType	csmisas.h	/^   __u8  bFrameType;$/;"	m	struct:_CSMI_SAS_SMP_RESPONSE
bFunction	csmisas.h	/^   __u8  bFunction;$/;"	m	struct:_CSMI_SAS_SMP_REQUEST
bFunction	csmisas.h	/^   __u8  bFunction;$/;"	m	struct:_CSMI_SAS_SMP_RESPONSE
bFunctionNumber	csmisas.h	/^   __u8  bFunctionNumber;$/;"	m	struct:_CSMI_SAS_PCI_BUS_ADDRESS
bFunctionResult	csmisas.h	/^   __u8  bFunctionResult;$/;"	m	struct:_CSMI_SAS_SMP_RESPONSE
bHostIndex	csmisas.h	/^   __u8  bHostIndex;$/;"	m	struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
bHostIndex	csmisas.h	/^   __u8  bHostIndex;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
bHostIndex	csmisas.h	/^   __u8  bHostIndex;$/;"	m	struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
bHostIndex	csmisas.h	/^   __u8  bHostIndex;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
bIDEDeviceMap	os_win32.cpp	/^  BYTE bIDEDeviceMap;$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
bIdentify	csmisas.h	/^   __u8  bIdentify;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
bInformation	csmisas.h	/^   __u8  bInformation;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
bInitiatorPortProtocol	csmisas.h	/^   __u8  bInitiatorPortProtocol;$/;"	m	struct:_CSMI_SAS_IDENTIFY
bIoBusType	csmisas.h	/^   __u8  bIoBusType;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
bLabel	csmisas.h	/^   __u8  bLabel[16];$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
bLabel	csmisas.h	/^   __u8  bLabel[16];$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
bLabel	csmisas.h	/^   __u8  bLabel[16];$/;"	m	struct:_CSMI_SAS_RAID_SET_LABEL_INFO
bLengthOfLocationIdentifier	csmisas.h	/^   __u8  bLengthOfLocationIdentifier;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
bLinkReserved	csmisas.h	/^   __u8  bLinkReserved[7];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
bLocation	csmisas.h	/^   __u8  bLocation;$/;"	m	struct:_CSMI_SAS_GET_CONNECTOR_INFO
bLocationFlags	csmisas.h	/^   __u32 bLocationFlags;$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bLocationState	csmisas.h	/^   __u8  bLocationState;$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bLun	csmisas.h	/^   __u8  bLun;$/;"	m	struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
bLun	csmisas.h	/^   __u8  bLun;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
bLun	csmisas.h	/^   __u8  bLun;$/;"	m	struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
bLun	csmisas.h	/^   __u8  bLun;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
bLun	csmisas.h	/^   __u8  bLun[8];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bMaxRaidTypes	csmisas.h	/^   __u8  bMaxRaidTypes;$/;"	m	struct:_CSMI_SAS_RAID_INFO
bMaximumLinkRate	csmisas.h	/^   __u8  bMaximumLinkRate;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bMinimumLinkRate	csmisas.h	/^   __u8  bMinimumLinkRate;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bModel	csmisas.h	/^   __u8  bModel[40];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bNegotiatedLinkRate	csmisas.h	/^   __u8  bNegotiatedLinkRate;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bNegotiatedLinkRate	csmisas.h	/^   __u8  bNegotiatedLinkRate;$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO
bNegotiatedLinkRate	csmisas.h	/^   __u8  bNegotiatedLinkRate[2];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA
bNegotitiatedLInkRate	csmisas.h	101;"	d
bNewLun	csmisas.h	/^   __u8  bNewLun[8];$/;"	m	struct:_CSMI_SAS_RAID_SET_LIST
bNumberOfControls	csmisas.h	/^   __u8  bNumberOfControls;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
bNumberOfLocationIdentifiers	csmisas.h	/^   __u8  bNumberOfLocationIdentifiers;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
bNumberOfPhys	csmisas.h	/^   __u8  bNumberOfPhys;$/;"	m	struct:_CSMI_SAS_PHY_INFO
bOnlineState	csmisas.h	/^   __u8  bOnlineState;$/;"	m	struct:_CSMI_SAS_RAID_SET_ONLINE_STATE_INFO
bPathId	csmisas.h	/^   __u8  bPathId;$/;"	m	struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
bPathId	csmisas.h	/^   __u8  bPathId;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
bPathId	csmisas.h	/^   __u8  bPathId;$/;"	m	struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
bPathId	csmisas.h	/^   __u8  bPathId;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
bPatternReserved	csmisas.h	/^   __u8  bPatternReserved[6];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bPhyChangeCount	csmisas.h	/^   __u8  bPhyChangeCount;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bPhyFeatures	csmisas.h	/^   __u8  bPhyFeatures;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_IDENTIFY
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_SATA_SIGNATURE
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bPhyIdentifier	csmisas.h	/^   __u8  bPhyIdentifier;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
bPortIdentifier	csmisas.h	/^   __u8  bPortIdentifier;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bPortIdentifier	csmisas.h	/^   __u8  bPortIdentifier;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
bPortIdentifier	csmisas.h	/^   __u8  bPortIdentifier;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bPortIdentifier	csmisas.h	/^   __u8  bPortIdentifier;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
bPortNumber	os_win32.cpp	/^  BYTE bPortNumber;     \/\/ 3ware specific: port number$/;"	m	struct:_SENDCMDINPARAMS_EX	file:
bProgrammedMaximumLinkRate	csmisas.h	/^   __u8  bProgrammedMaximumLinkRate;$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO
bProgrammedMinimumLinkRate	csmisas.h	/^   __u8  bProgrammedMinimumLinkRate;$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO
bRaidSetLun	csmisas.h	/^   __u8  bRaidSetLun[8];$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
bRaidType	csmisas.h	/^   __u8  bRaidType;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
bRaidType	csmisas.h	/^   __u8  bRaidType;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
bRaidType	csmisas.h	/^   __u8  bRaidType;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO
bRaidType	csmisas.h	/^   __u8  bRaidType;$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
bRaidType	csmisas.h	/^  __u8  bRaidType;$/;"	m	struct:_CSMI_SAS_RAID_TYPE_DESCRIPTION
bRate	csmisas.h	/^   __u8  bRate;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bRebuildPriority	csmisas.h	/^   __u8  bRebuildPriority;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bRebuildPriority	csmisas.h	/^   __u8  bRebuildPriority;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bReceiverEqualizationGain	csmisas.h	/^   __i8  bReceiverEqualizationGain;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bReceiverReserved	csmisas.h	/^   __i8  bReceiverReserved[14];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bReceiverThreshold	csmisas.h	/^   __i8  bReceiverThreshold;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bReceiverVendorUnique	csmisas.h	/^   __u8  bReceiverVendorUnique[64];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bReserved	csmisas.h	/^   __u8  bReserved;$/;"	m	struct:_CSMI_SAS_PCI_BUS_ADDRESS
bReserved	csmisas.h	/^   __u8  bReserved;$/;"	m	struct:_CSMI_SAS_PHY_ENTITY
bReserved	csmisas.h	/^   __u8  bReserved;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
bReserved	csmisas.h	/^   __u8  bReserved;$/;"	m	struct:_CSMI_SAS_SMP_RESPONSE
bReserved	csmisas.h	/^   __u8  bReserved;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bReserved	csmisas.h	/^   __u8  bReserved;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
bReserved	csmisas.h	/^   __u8  bReserved[104];$/;"	m	struct:_CSMI_SAS_RAID_SET_SPARE_INFO
bReserved	csmisas.h	/^   __u8  bReserved[108];$/;"	m	struct:_CSMI_SAS_RAID_SET_LABEL_INFO
bReserved	csmisas.h	/^   __u8  bReserved[11];$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
bReserved	csmisas.h	/^   __u8  bReserved[120];$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bReserved	csmisas.h	/^   __u8  bReserved[121];$/;"	m	struct:_CSMI_SAS_RAID_SET_CACHE_INFO
bReserved	csmisas.h	/^   __u8  bReserved[123];$/;"	m	struct:_CSMI_SAS_RAID_SET_ONLINE_STATE_INFO
bReserved	csmisas.h	/^   __u8  bReserved[123];$/;"	m	struct:_CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO
bReserved	csmisas.h	/^   __u8  bReserved[124];$/;"	m	struct:_CSMI_SAS_RAID_SET_DELETE_INFO
bReserved	csmisas.h	/^   __u8  bReserved[126];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES_ADDITIONAL_DATA
bReserved	csmisas.h	/^   __u8  bReserved[128];$/;"	m	struct:_CSMI_SAS_RAID_MODULE_INFO
bReserved	csmisas.h	/^   __u8  bReserved[12];$/;"	m	struct:_CSMI_SAS_RAID_SET_LIST
bReserved	csmisas.h	/^   __u8  bReserved[15];$/;"	m	struct:_CSMI_SAS_GET_CONNECTOR_INFO
bReserved	csmisas.h	/^   __u8  bReserved[15];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bReserved	csmisas.h	/^   __u8  bReserved[16];$/;"	m	struct:_CSMI_SAS_DRIVE_INFO
bReserved	csmisas.h	/^   __u8  bReserved[24];$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
bReserved	csmisas.h	/^   __u8  bReserved[27];$/;"	m	struct:_CSMI_SAS_RAID_SET_DRIVE_LIST
bReserved	csmisas.h	/^   __u8  bReserved[28];$/;"	m	struct:_CSMI_SAS_CNTLR_STATUS
bReserved	csmisas.h	/^   __u8  bReserved[28];$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION
bReserved	csmisas.h	/^   __u8  bReserved[2];$/;"	m	struct:_CSMI_SAS_LINK_ERRORS
bReserved	csmisas.h	/^   __u8  bReserved[2];$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bReserved	csmisas.h	/^   __u8  bReserved[2];$/;"	m	struct:_CSMI_SAS_SMP_REQUEST
bReserved	csmisas.h	/^   __u8  bReserved[2];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
bReserved	csmisas.h	/^   __u8  bReserved[32];$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD
bReserved	csmisas.h	/^   __u8  bReserved[32];$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
bReserved	csmisas.h	/^   __u8  bReserved[32];$/;"	m	union:_CSMI_SAS_IO_BUS_ADDRESS
bReserved	csmisas.h	/^   __u8  bReserved[3];$/;"	m	struct:_CSMI_SAS_PHY_INFO
bReserved	csmisas.h	/^   __u8  bReserved[3];$/;"	m	struct:_CSMI_SAS_SATA_SIGNATURE
bReserved	csmisas.h	/^   __u8  bReserved[3];$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO
bReserved	csmisas.h	/^   __u8  bReserved[3];$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_STATUS
bReserved	csmisas.h	/^   __u8  bReserved[44];$/;"	m	struct:_CSMI_SAS_RAID_INFO
bReserved	csmisas.h	/^   __u8  bReserved[48];$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
bReserved	csmisas.h	/^   __u8  bReserved[4];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
bReserved	csmisas.h	/^   __u8  bReserved[6];$/;"	m	struct:_CSMI_SAS_IDENTIFY
bReserved	csmisas.h	/^   __u8  bReserved[6];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bReserved	csmisas.h	/^   __u8  bReserved[79];$/;"	m	struct:_CSMI_SAS_DRIVE_LOCATION
bReserved	csmisas.h	/^   __u8  bReserved[7];$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
bReserved	csmisas.h	/^   __u8  bReserved[7];$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
bReserved	csmisas.h	/^   __u8  bReserved[80];$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
bReserved	csmisas.h	/^   __u8  bReserved[88];$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bReserved	csmisas.h	/^   __u8  bReserved[96];$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO
bReserved	csmisas.h	/^   __u8  bReserved[96];$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO
bReserved	csmisas.h	/^  __u8  bReserved[24];$/;"	m	struct:_CSMI_SAS_RAID_TYPE_DESCRIPTION
bReserved	os_win32.cpp	/^  BYTE bReserved;$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
bReserved2	csmisas.h	/^   __u8  bReserved2[2];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
bReserved2	csmisas.h	/^   __u8  bReserved2[3];$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
bReserved2	csmisas.h	/^   __u8  bReserved2[4];$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
bReservedByteFields	csmisas.h	/^   __u8  bReservedByteFields[7];$/;"	m	struct:_CSMI_SAS_RAID_INFO
bReservedBytes	csmisas.h	/^   __u8  bReservedBytes[11];$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
bReservedBytes	csmisas.h	/^   __u8  bReservedBytes[15];$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bReservedBytes	csmisas.h	/^   __u8  bReservedBytes[3];$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
bReservedBytes	csmisas.h	/^   __u8  bReservedBytes[4];$/;"	m	struct:_CSMI_SAS_DRIVE_LOCATION
bReservedBytes	csmisas.h	/^   __u8  bReservedBytes[7];$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO
bReservedBytes	csmisas.h	/^   __u8  bReservedBytes[7];$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
bReservedBytes	csmisas.h	/^   __u8  bReservedBytes[7];$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO
bReservedBytes	csmisas.h	/^  __u8  bReservedBytes[7];$/;"	m	struct:_CSMI_SAS_RAID_TYPE_DESCRIPTION
bReservedBytes2	csmisas.h	/^   __u8  bReservedBytes2[11];$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
bReservedFeatures	csmisas.h	/^   __u8  bReservedFeatures[32];$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bResetCounts	csmisas.h	/^   __u8  bResetCounts;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS
bResponse	csmisas.h	/^   __u8  bResponse[256];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
bResponseLength	csmisas.h	/^   __u8  bResponseLength[2];$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
bRestricted	csmisas.h	/^   __u8  bRestricted;$/;"	m	struct:_CSMI_SAS_IDENTIFY
bRestricted2	csmisas.h	/^   __u8  bRestricted2[8];$/;"	m	struct:_CSMI_SAS_IDENTIFY
bRevision	os_win32.cpp	/^  BYTE bRevision;$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
bSASAddress	csmisas.h	/^   __u8  bSASAddress[8];$/;"	m	struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
bSASAddress	csmisas.h	/^   __u8  bSASAddress[8];$/;"	m	struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
bSASAddress	csmisas.h	/^   __u8  bSASAddress[8];$/;"	m	struct:_CSMI_SAS_IDENTIFY
bSASAddress	csmisas.h	/^   __u8  bSASAddress[8];$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bSASAddress	csmisas.h	/^   __u8  bSASAddress[8];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bSASLun	csmisas.h	/^   __u8  bSASLun[8];$/;"	m	struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
bSASLun	csmisas.h	/^   __u8  bSASLun[8];$/;"	m	struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
bSASLun	csmisas.h	/^   __u8  bSASLun[8];$/;"	m	struct:_CSMI_SAS_LOCATION_IDENTIFIER
bSASLun	csmisas.h	/^   __u8  bSASLun[8];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bSSPStatus	csmisas.h	/^   __u8  bSSPStatus;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
bSerialNumber	csmisas.h	/^   __u8  bSerialNumber[40];$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
bSignalClass	csmisas.h	/^   __u8  bSignalClass;$/;"	m	struct:_CSMI_SAS_IDENTIFY
bSignalClass	csmisas.h	/^   __u8  bSignalClass;$/;"	m	struct:_CSMI_SAS_SET_PHY_INFO
bSignatureFIS	csmisas.h	/^   __u8  bSignatureFIS[20];$/;"	m	struct:_CSMI_SAS_SATA_SIGNATURE
bSpinupRate	csmisas.h	/^   __u8  bSpinupRate;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
bStatus	csmisas.h	/^   __u8  bStatus;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
bStatus	csmisas.h	/^   __u8  bStatus;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
bStatusFIS	csmisas.h	/^   __u8  bStatusFIS[20];$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_STATUS
bSurfaceScanPriority	csmisas.h	/^   __u8  bSurfaceScanPriority;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bSurfaceScanPriority	csmisas.h	/^   __u8  bSurfaceScanPriority;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bTargetId	csmisas.h	/^   __u8  bTargetId;$/;"	m	struct:_CSMI_SAS_GET_DEVICE_ADDRESS_BUFFER
bTargetId	csmisas.h	/^   __u8  bTargetId;$/;"	m	struct:_CSMI_SAS_GET_LOCATION_BUFFER
bTargetId	csmisas.h	/^   __u8  bTargetId;$/;"	m	struct:_CSMI_SAS_GET_SCSI_ADDRESS_BUFFER
bTargetId	csmisas.h	/^   __u8  bTargetId;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
bTargetPortProtocol	csmisas.h	/^   __u8  bTargetPortProtocol;$/;"	m	struct:_CSMI_SAS_IDENTIFY
bTaskManagementFunction	csmisas.h	/^   __u8  bTaskManagementFunction;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
bTransformPriority	csmisas.h	/^   __u8  bTransformPriority;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
bTransformPriority	csmisas.h	/^   __u8  bTransformPriority;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
bTransformType	csmisas.h	/^   __u8  bTransformType;$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
bTransmitAmplitude	csmisas.h	/^   __i8  bTransmitAmplitude;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bTransmitterPreemphasis	csmisas.h	/^   __i8  bTransmitterPreemphasis;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bTransmitterReserved	csmisas.h	/^   __i8  bTransmitterReserved[13];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bTransmitterSlewRate	csmisas.h	/^   __i8  bTransmitterSlewRate;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bTransmitterVendorUnique	csmisas.h	/^   __u8  bTransmitterVendorUnique[64];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bType	csmisas.h	/^   __u8  bType;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bTypeFlags	csmisas.h	/^   __u8  bTypeFlags;$/;"	m	struct:_CSMI_SAS_CHARACTER
bUserPatternLength	csmisas.h	/^   __u8  bUserPatternLength;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
bValue	csmisas.h	/^   __u8  bValue;$/;"	m	struct:_CSMI_SAS_CHARACTER
bVersion	os_win32.cpp	/^  BYTE bVersion;$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
bWriteProtectSetting	csmisas.h	/^   __u8  bWriteProtectSetting;$/;"	m	struct:_CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO
bWriteProtection	csmisas.h	/^   __u8  bWriteProtection;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
ba	os_qnxnto.h	/^		uchar_t		ba[4];			\/\/ block address$/;"	m	struct:_cdb::__anon83
be32toh	cciss.cpp	19;"	d	file:
bin_tree_t	regex/regex_internal.h	/^struct bin_tree_t$/;"	s
bin_tree_t	regex/regex_internal.h	/^typedef struct bin_tree_t bin_tree_t;$/;"	t	typeref:struct:bin_tree_t
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bitset	regex/regex_internal.h	/^typedef unsigned int bitset[BITSET_UINTS];$/;"	t
bitset_clear	regex/regex_internal.h	120;"	d
bitset_contain	regex/regex_internal.h	121;"	d
bitset_copy	regex/regex_internal.h	125;"	d
bitset_empty	regex/regex_internal.h	122;"	d
bitset_set	regex/regex_internal.h	119;"	d
bitset_set_all	regex/regex_internal.h	123;"	d
bkref_ents	regex/regex_internal.h	/^  struct re_backref_cache_entry *bkref_ents;$/;"	m	struct:__anon125	typeref:struct:__anon125::re_backref_cache_entry
block_count	os_freebsd.h	/^    u_int16_t	block_count;$/;"	m	struct:__anon3
block_count	os_linux.h	/^    unsigned short block_count;$/;"	m	union:TW_Command::__anon34
block_count	os_linux.h	/^    unsigned short block_count;$/;"	m	union:TW_Command_9000::__anon22
bms_status	scsiprint.cpp	/^static const char * bms_status[] = {$/;"	v	file:
board_id	cissio_freebsd.h	/^    u_int32_t	board_id;$/;"	m	struct:__anon96
bracket_elem_t	regex/regex_internal.h	/^} bracket_elem_t;$/;"	t	typeref:struct:__anon128
bracket_elem_type	regex/regex_internal.h	/^} bracket_elem_type;$/;"	t	typeref:enum:__anon127
buf	cissio_freebsd.h	/^    u_int32_t		buf;		\/* 4 *\/$/;"	m	struct:__anon112
buf	cissio_freebsd.h	/^    u_int8_t		*buf;		\/* 4 *\/$/;"	m	struct:__anon111
buf	freebsd_nvme_ioctl.h	/^	void *			buf;$/;"	m	struct:nvme_pt_command
buf_size	cissio_freebsd.h	/^    u_int16_t		buf_size;	\/* 2 *\/$/;"	m	struct:__anon111
buf_size	cissio_freebsd.h	/^    u_int16_t		buf_size;	\/* 2 *\/$/;"	m	struct:__anon112
buff	os_linux.cpp	/^    UINT8 buff[MAX_DXFER_LEN + 16];$/;"	m	struct:os_linux::linux_ioctl_send_command	file:
buffer	dev_interface.h	/^  void * buffer; \/\/\/< Pointer to data buffer$/;"	m	struct:ata_cmd_in
buffer	dev_interface.h	/^  void * buffer; \/\/\/< Pointer to data buffer$/;"	m	struct:nvme_cmd_in
buffer	megaraid.h	/^      ptr_t    buffer;$/;"	m	struct:uioctl_t::__anon44::__anon45
buffer	regex/regex.h	/^  unsigned char *buffer;$/;"	m	struct:re_pattern_buffer
buffer_length	os_freebsd.h	/^	TW_UINT32	buffer_length;$/;"	m	struct:tw_cl_driver_packet
buffer_length	os_linux.h	/^  unsigned int buffer_length;$/;"	m	struct:TAG_TW_Ioctl_Driver_Command_9000
bufs_len	regex/regex_internal.h	/^  int bufs_len;$/;"	m	struct:re_string_t
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_charclass	regex/regcomp.c	/^build_charclass (sbcset, mbcset, char_class_alloc, class_name, syntax)$/;"	f	file:
build_collating_symbol	regex/regcomp.c	/^build_collating_symbol (sbcset, mbcset, coll_sym_alloc, name)$/;"	f	file:
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_equiv_class	regex/regcomp.c	/^build_equiv_class (sbcset, mbcset, equiv_class_alloc, name)$/;"	f	file:
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_range_exp	regex/regcomp.c	/^build_range_exp (sbcset, mbcset, range_alloc, start_elem, end_elem)$/;"	f	file:
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_trtable	regex/regexec.c	/^build_trtable (preg, state, fl_search)$/;"	f	file:
build_upper_buffer	regex/regex_internal.c	/^build_upper_buffer (pstr)$/;"	f	file:
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
build_wcs_buffer	regex/regex_internal.c	/^build_wcs_buffer (pstr)$/;"	f	file:
build_wcs_upper_buffer	regex/regex_internal.c	/^build_wcs_upper_buffer (pstr)$/;"	f	file:
build_word_op	regex/regcomp.c	/^build_word_op (dfa, not, err)$/;"	f	file:
builddir	Makefile	/^builddir = .$/;"	m
builtin_knowndrives	knowndrives.cpp	/^const drive_settings builtin_knowndrives[] = {$/;"	v
builtin_knowndrives_size	knowndrives.cpp	/^const unsigned builtin_knowndrives_size =$/;"	v
bus	cissio_freebsd.h	/^    u_int8_t	bus;$/;"	m	struct:__anon96
byte0	os_linux.h	/^  } byte0;$/;"	m	struct:TAG_TW_Passthru	typeref:struct:TAG_TW_Passthru::__anon19
byte0	os_linux.h	/^  } byte0;$/;"	m	struct:TW_Command	typeref:struct:TW_Command::__anon32
byte0	os_linux.h	/^  } byte0;$/;"	m	struct:TW_Command_9000	typeref:struct:TW_Command_9000::__anon20
byte205	atacmds.h	/^  unsigned char byte205;            \/\/ 205: reserved (T13\/e06152r0-2: Average lifetime temperature)$/;"	m	struct:ata_sct_status_response
byte3	os_linux.h	/^  } byte3;$/;"	m	struct:TW_Command	typeref:struct:TW_Command::__anon33
byte3	os_linux.h	/^  } byte3;$/;"	m	struct:TW_Command_9000	typeref:struct:TW_Command_9000::__anon21
byte4	scsiata.cpp	/^    unsigned char byte4;$/;"	m	struct:sg_scsi_sense_hdr	file:
byte5	scsiata.cpp	/^    unsigned char byte5;$/;"	m	struct:sg_scsi_sense_hdr	file:
byte6	os_linux.h	/^  } byte6;$/;"	m	struct:TW_Command	typeref:union:TW_Command::__anon34
byte6	os_linux.h	/^  } byte6;$/;"	m	struct:TW_Command_9000	typeref:union:TW_Command_9000::__anon22
byte6	scsiata.cpp	/^    unsigned char byte6;$/;"	m	struct:sg_scsi_sense_hdr	file:
byte8	os_linux.h	/^  } byte8;$/;"	m	struct:TW_Command	typeref:union:TW_Command::__anon35
byte8	os_linux.h	/^  } byte8;$/;"	m	struct:TW_Command_9000	typeref:union:TW_Command_9000::__anon23
byteorder	atacmds.h	/^    char byteorder[8+1]; \/\/ String [012345rvwz] to define byte order$/;"	m	struct:ata_vendor_attr_defs::entry
bytes010_029	atacmds.h	/^  unsigned char bytes010_029[20];   \/\/ 10-29: reserved$/;"	m	struct:ata_sct_temperature_history_table
bytes011_013	atacmds.h	/^  unsigned char bytes011_013[3];    \/\/ 11-13: reserved$/;"	m	struct:ata_sct_status_response
bytes020_039	atacmds.h	/^  unsigned char bytes020_039[20];   \/\/ 20-39: reserved$/;"	m	struct:ata_sct_status_response
bytes048_199	atacmds.h	/^  unsigned char bytes048_199[152];  \/\/ 48-199: reserved$/;"	m	struct:ata_sct_status_response
bytes216_479	atacmds.h	/^  unsigned char bytes216_479[479-216+1]; \/\/ 216-479: reserved$/;"	m	struct:ata_sct_status_response
c	regex/regex_internal.h	/^    unsigned char c;		\/* for CHARACTER *\/$/;"	m	union:__anon119::__anon120
cBufferSize	os_win32.cpp	/^  DWORD cBufferSize;$/;"	m	struct:_SENDCMDINPARAMS_EX	file:
calc_eclosure	regex/regcomp.c	/^calc_eclosure (dfa)$/;"	f	file:
calc_eclosure_iter	regex/regcomp.c	/^calc_eclosure_iter (new_set, dfa, node, root)$/;"	f	file:
calc_epsdest	regex/regcomp.c	/^calc_epsdest (dfa, node)$/;"	f	file:
calc_first	regex/regcomp.c	/^calc_first (dfa, node)$/;"	f	file:
calc_inveclosure	regex/regcomp.c	/^calc_inveclosure (dfa)$/;"	f	file:
calc_next	regex/regcomp.c	/^calc_next (dfa, node)$/;"	f	file:
calc_state_hash	regex/regex_internal.c	/^calc_state_hash (nodes, context)$/;"	f	file:
can_be_null	regex/regex.h	/^  unsigned can_be_null : 1;$/;"	m	struct:re_pattern_buffer
capacity	atacmds.h	/^  uint64_t capacity;$/;"	m	struct:ata_size_info
caughtsig	os_win32/daemon_win32.cpp	/^static volatile sig_atomic_t caughtsig = 0;$/;"	v	file:
caughtsigEXIT	smartd.cpp	/^static volatile int caughtsigEXIT=0;$/;"	v	file:
caughtsigHUP	smartd.cpp	/^static volatile int caughtsigHUP=0;$/;"	v	file:
caughtsigUSR1	smartd.cpp	/^static volatile int caughtsigUSR1=0;$/;"	v	file:
caughtsigUSR2	smartd.cpp	/^static volatile int caughtsigUSR2=0;$/;"	v	file:
cb	atacmds.h	/^  signed char cb[478];              \/\/ 34-(34+cb_size-1): Circular buffer of temperature values$/;"	m	struct:ata_sct_temperature_history_table
cb_index	atacmds.h	/^  unsigned short cb_index;          \/\/ 32-33: Index of last updated entry (zero-based)$/;"	m	struct:ata_sct_temperature_history_table
cb_size	atacmds.h	/^  unsigned short cb_size;           \/\/ 30-31: Number of history entries (range 128-478)$/;"	m	struct:ata_sct_temperature_history_table
cciss_coalint_struct	cissio_freebsd.h	/^} cciss_coalint_struct;$/;"	t	typeref:struct:__anon97
cciss_cpp_cvsid	cciss.cpp	/^const char * cciss_cpp_cvsid = "$Id: cciss.cpp 4156 2015-10-18 12:20:40Z samm2 $"$/;"	v
cciss_getlun	cciss.cpp	/^static int cciss_getlun(int device, int target, unsigned char *physlun, int report)$/;"	f	file:
cciss_io_interface	cciss.cpp	/^int cciss_io_interface(int device, int target, struct scsi_cmnd_io * iop, int report)$/;"	f
cciss_pci_info_struct	cissio_freebsd.h	/^} cciss_pci_info_struct; $/;"	t	typeref:struct:__anon96
cciss_sendpassthru	cciss.cpp	/^static int cciss_sendpassthru(unsigned int cmdtype, unsigned char *CDB,$/;"	f	file:
cctemp	nvmecmds.h	/^  unsigned short  cctemp;$/;"	m	struct:smartmontools::nvme_id_ctrl
cd_scan	os_qnxnto.h	/^	} cd_scan;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon71
cd_speed	os_qnxnto.h	/^	} cd_speed;		$/;"	m	union:_cdb	typeref:struct:_cdb::__anon78
cdb	aacraid.h	/^  uint8_t  cdb[16];            \/\/ The actual cdb command$/;"	m	struct:__anon141
cdb	aacraid.h	/^  uint8_t  cdb[16];            \/\/ The actual cdb command$/;"	m	struct:__anon142
cdb	megaraid.h	/^  u8 cdb[16];            \/*20h *\/$/;"	m	struct:megasas_pthru_frame
cdb	megaraid.h	/^  uint8_t  cdb[MAX_CDB_LEN];$/;"	m	struct:__anon41
cdb	os_freebsd.h	/^	TW_UINT8	cdb[16];$/;"	m	struct:tw_cl_command_9k
cdb	os_linux.h	/^  unsigned char   cdb[16];$/;"	m	struct:TAG_TW_Command_Apache
cdb	os_linux.h	/^  unsigned char cdb[16];$/;"	m	struct:TAG_TW_Ioctl
cdb_len	megaraid.h	/^  u8 cdb_len;        \/*06h *\/$/;"	m	struct:megasas_pthru_frame
cdb_len	megaraid.h	/^  u8 cdb_len;       \/*06h *\/$/;"	m	struct:megasas_header
cdb_size	aacraid.h	/^  uint32_t cdb_size;           \/\/ Length of CDB$/;"	m	struct:__anon141
cdb_size	aacraid.h	/^  uint32_t cdb_size;           \/\/ Length of CDB$/;"	m	struct:__anon142
cdblen	megaraid.h	/^  uint8_t  cdblen;$/;"	m	struct:__anon41
cdw0	freebsd_nvme_ioctl.h	/^	uint32_t		cdw0;	\/* command-specific *\/$/;"	m	struct:nvme_completion
cdw10	dev_interface.h	/^  unsigned cdw10, cdw11, cdw12, cdw13, cdw14, cdw15; \/\/\/< Cmd specific$/;"	m	struct:nvme_cmd_in
cdw10	freebsd_nvme_ioctl.h	/^	uint32_t cdw10;		\/* command-specific *\/$/;"	m	struct:nvme_command
cdw10	linux_nvme_ioctl.h	/^	__u32	cdw10;$/;"	m	struct:nvme_passthru_cmd
cdw11	dev_interface.h	/^  unsigned cdw10, cdw11, cdw12, cdw13, cdw14, cdw15; \/\/\/< Cmd specific$/;"	m	struct:nvme_cmd_in
cdw11	freebsd_nvme_ioctl.h	/^	uint32_t cdw11;		\/* command-specific *\/$/;"	m	struct:nvme_command
cdw11	linux_nvme_ioctl.h	/^	__u32	cdw11;$/;"	m	struct:nvme_passthru_cmd
cdw12	dev_interface.h	/^  unsigned cdw10, cdw11, cdw12, cdw13, cdw14, cdw15; \/\/\/< Cmd specific$/;"	m	struct:nvme_cmd_in
cdw12	freebsd_nvme_ioctl.h	/^	uint32_t cdw12;		\/* command-specific *\/$/;"	m	struct:nvme_command
cdw12	linux_nvme_ioctl.h	/^	__u32	cdw12;$/;"	m	struct:nvme_passthru_cmd
cdw13	dev_interface.h	/^  unsigned cdw10, cdw11, cdw12, cdw13, cdw14, cdw15; \/\/\/< Cmd specific$/;"	m	struct:nvme_cmd_in
cdw13	freebsd_nvme_ioctl.h	/^	uint32_t cdw13;		\/* command-specific *\/$/;"	m	struct:nvme_command
cdw13	linux_nvme_ioctl.h	/^	__u32	cdw13;$/;"	m	struct:nvme_passthru_cmd
cdw14	dev_interface.h	/^  unsigned cdw10, cdw11, cdw12, cdw13, cdw14, cdw15; \/\/\/< Cmd specific$/;"	m	struct:nvme_cmd_in
cdw14	freebsd_nvme_ioctl.h	/^	uint32_t cdw14;		\/* command-specific *\/$/;"	m	struct:nvme_command
cdw14	linux_nvme_ioctl.h	/^	__u32	cdw14;$/;"	m	struct:nvme_passthru_cmd
cdw15	dev_interface.h	/^  unsigned cdw10, cdw11, cdw12, cdw13, cdw14, cdw15; \/\/\/< Cmd specific$/;"	m	struct:nvme_cmd_in
cdw15	freebsd_nvme_ioctl.h	/^	uint32_t cdw15;		\/* command-specific *\/$/;"	m	struct:nvme_command
cdw15	linux_nvme_ioctl.h	/^	__u32	cdw15;$/;"	m	struct:nvme_passthru_cmd
cdw2	linux_nvme_ioctl.h	/^	__u32	cdw2;$/;"	m	struct:nvme_passthru_cmd
cdw3	linux_nvme_ioctl.h	/^	__u32	cdw3;$/;"	m	struct:nvme_passthru_cmd
cert	os_qnxnto.h	/^        uchar_t         cert;$/;"	m	struct:_cdb::_format_unit_old
cfs_enable_1	atacmds.h	/^  unsigned short cfs_enable_1;$/;"	m	struct:ata_identify_device
ch	regex/regex_internal.h	/^    unsigned char ch;$/;"	m	union:__anon128::__anon129
channel	aacraid.h	/^  uint32_t channel;            \/\/bus$/;"	m	struct:__anon141
channel	aacraid.h	/^  uint32_t channel;            \/\/bus$/;"	m	struct:__anon142
channel	megaraid.h	/^  uint8_t  channel;$/;"	m	struct:__anon41
char_classes	regex/regex_internal.h	/^  wctype_t *char_classes;$/;"	m	struct:__anon118
check_abs_path	smartd.cpp	/^static void check_abs_path(char option, const std::string & path)$/;"	f	file:
check_arrival	regex/regexec.c	/^check_arrival (preg, mctx, path, top_node, top_str, last_node, last_str,$/;"	f	file:
check_arrival_add_next_nodes	regex/regexec.c	/^check_arrival_add_next_nodes (preg, dfa, mctx, str_idx, cur_nodes, next_nodes)$/;"	f	file:
check_arrival_expand_ecl	regex/regexec.c	/^check_arrival_expand_ecl (dfa, cur_nodes, ex_subexp, fl_open)$/;"	f	file:
check_arrival_expand_ecl_sub	regex/regexec.c	/^check_arrival_expand_ecl_sub (dfa, dst_nodes, target, ex_subexp, fl_open)$/;"	f	file:
check_attribute	smartd.cpp	/^static void check_attribute(const dev_config & cfg, dev_state & state,$/;"	f	file:
check_config	utility.cpp	/^void check_config()$/;"	f
check_dst_limits	regex/regexec.c	/^check_dst_limits (dfa, limits, mctx, dst_node, dst_idx, src_node, src_idx)$/;"	f	file:
check_dst_limits_calc_pos	regex/regexec.c	/^check_dst_limits_calc_pos (dfa, mctx, limit, eclosures, subexp_idx, node,$/;"	f	file:
check_endianness	utility.cpp	/^static void check_endianness()$/;"	f	file:
check_halt_node_context	regex/regexec.c	/^static int check_halt_node_context (dfa, node, context)$/;"	f	file:
check_halt_state_context	regex/regexec.c	/^check_halt_state_context (preg, state, mctx, idx)$/;"	f	file:
check_matching	regex/regexec.c	/^check_matching (preg, mctx, fl_search, fl_longest_match)$/;"	f	file:
check_multi_sector_sum	atacmds.cpp	/^static void check_multi_sector_sum(const void * data, unsigned nsectors, const char * msg)$/;"	f	file:
check_node_accept	regex/regexec.c	/^check_node_accept (preg, node, mctx, idx)$/;"	f	file:
check_node_accept_bytes	regex/regexec.c	/^check_node_accept_bytes (preg, node_idx, input, str_idx)$/;"	f	file:
check_pending	smartd.cpp	/^static void check_pending(const dev_config & cfg, dev_state & state,$/;"	f	file:
check_pending_id	smartd.cpp	/^static bool check_pending_id(const dev_config & cfg, const dev_state & state,$/;"	f	file:
check_regex	utility.cpp	/^static const char * check_regex(const char * pattern)$/;"	f	file:
check_snprintf	utility.cpp	/^static void check_snprintf()$/;"	f	file:
check_subexp	regex/regex_internal.h	/^  int check_subexp;$/;"	m	struct:__anon126
check_subexp_limits	regex/regexec.c	/^check_subexp_limits (dfa, dest_nodes, candidates, limits, bkref_ents, str_idx)$/;"	f	file:
check_subexp_matching_top	regex/regexec.c	/^check_subexp_matching_top (dfa, mctx, cur_nodes, str_idx)$/;"	f	file:
check_temp_range	atacmds.cpp	/^static bool check_temp_range(int t, unsigned char ut1, unsigned char ut2,$/;"	f	file:
check_temp_word	atacmds.cpp	/^static inline int check_temp_word(unsigned word)$/;"	f	file:
checkpoint	atacmds.h	/^  unsigned char checkpoint;$/;"	m	struct:ata_smart_extselftestlog_desc
checkstatus	os_freebsd.h	/^    TWE_Command_CHECKSTATUS	checkstatus;$/;"	m	union:__anon11
checksum	atacmds.cpp	/^unsigned char checksum(const void * data)$/;"	f
checksum	atacmds.h	/^  unsigned char      checksum;$/;"	m	struct:ata_selective_self_test_log
checksum	atacmds.h	/^  unsigned char checksum;$/;"	m	struct:ata_smart_errorlog
checksum	atacmds.h	/^  unsigned char checksum;$/;"	m	struct:ata_smart_exterrlog
checksum_err_mode	smartctl.cpp	/^static checksum_err_mode_t checksum_err_mode = CHECKSUM_ERR_WARN;$/;"	v	file:
checksum_err_mode_t	smartctl.cpp	/^enum checksum_err_mode_t {$/;"	g	file:
checksumwarning	smartctl.cpp	/^void checksumwarning(const char * string)$/;"	f
checksumwarning	smartd.cpp	/^void checksumwarning(const char * string)$/;"	f
checktime	smartd.cpp	/^static int checktime=CHECKTIME;$/;"	v	file:
child_console_handler	os_win32/daemon_win32.cpp	/^static BOOL WINAPI child_console_handler(DWORD event)$/;"	f	file:
child_exit	os_win32/daemon_win32.cpp	/^static void child_exit(void)$/;"	f	file:
child_main	os_win32/daemon_win32.cpp	/^static int child_main(HANDLE hev,int (*main_func)(int, char **), int argc, char **argv)$/;"	f	file:
chksum	atacmds.h	/^  unsigned char chksum;$/;"	m	struct:ata_smart_extselftestlog
chksum	atacmds.h	/^  unsigned char chksum;$/;"	m	struct:ata_smart_selftestlog
chksum	atacmds.h	/^  unsigned char chksum;$/;"	m	struct:ata_smart_thresholds_pvt
chksum	atacmds.h	/^  unsigned char chksum;$/;"	m	struct:ata_smart_values
cid	freebsd_nvme_ioctl.h	/^	uint16_t		cid;	\/* command identifier *\/$/;"	m	struct:nvme_completion
cid	freebsd_nvme_ioctl.h	/^	uint16_t cid;		\/* command identifier *\/$/;"	m	struct:nvme_command
ciss_qstat	cissio_freebsd.h	/^struct ciss_qstat {$/;"	s
ciss_statrequest	cissio_freebsd.h	/^union ciss_statrequest {$/;"	u
clean_state_log_if_need	regex/regexec.c	/^clean_state_log_if_need (mctx, next_state_log_idx)$/;"	f	file:
clear	dev_interface.h	/^    void clear()$/;"	f	struct:smart_device::error_info
clear	dev_interface.h	/^  void clear()$/;"	f	class:smart_device_list
clear_err	dev_interface.h	/^  void clear_err()$/;"	f	class:smart_device
clear_err	dev_interface.h	/^  void clear_err()$/;"	f	class:smart_interface
close	atacmds.cpp	/^bool parsed_ata_device::close()$/;"	f	class:__anon51::parsed_ata_device
close	dev_interface.cpp	/^bool tunnelled_device_base::close()$/;"	f	class:tunnelled_device_base
close	dev_legacy.cpp	/^bool legacy_smart_device::close()$/;"	f	class:os::legacy_smart_device
close	os_darwin.cpp	/^bool darwin_smart_device::close()$/;"	f	class:os::darwin_smart_device
close	os_freebsd.cpp	/^bool freebsd_atacam_device::close(){$/;"	f	class:os_freebsd::freebsd_atacam_device
close	os_freebsd.cpp	/^bool freebsd_scsi_device::close(){$/;"	f	class:os_freebsd::freebsd_scsi_device
close	os_freebsd.cpp	/^bool freebsd_smart_device::close()$/;"	f	class:os_freebsd::freebsd_smart_device
close	os_linux.cpp	/^bool linux_megaraid_device::close()$/;"	f	class:os_linux::linux_megaraid_device
close	os_linux.cpp	/^bool linux_smart_device::close()$/;"	f	class:os_linux::linux_smart_device
close	os_win32.cpp	/^bool win_csmi_device::close()$/;"	f	class:os_win32::win_csmi_device
close	os_win32.cpp	/^bool win_smart_device::close()$/;"	f	class:os_win32::win_smart_device
close	os_win32.cpp	/^bool win_tw_cli_device::close()$/;"	f	class:os_win32::win_tw_cli_device
close	utility.h	/^  bool close()$/;"	f	class:stdio_file
closelog	os_win32/syslog_win32.cpp	/^void closelog()$/;"	f
cls_subexp_idx	regex/regex_internal.h	/^  int cls_subexp_idx;$/;"	m	struct:__anon126
cmd	freebsd_nvme_ioctl.h	/^	struct nvme_command	cmd;$/;"	m	struct:nvme_pt_command	typeref:struct:nvme_pt_command::nvme_command
cmd	megaraid.h	/^  u8 cmd;            \/*00h *\/$/;"	m	struct:megasas_dcmd_frame
cmd	megaraid.h	/^  u8 cmd;            \/*00h *\/$/;"	m	struct:megasas_pthru_frame
cmd	megaraid.h	/^  u8 cmd;           \/*00h *\/$/;"	m	struct:megasas_header
cmd	megaraid.h	/^  uint8_t   cmd;$/;"	m	struct:__anon42
cmd	os_qnxnto.h	/^		uchar_t		cmd;$/;"	m	struct:_cdb::__anon65
cmd	os_qnxnto.h	/^		uchar_t		cmd;$/;"	m	struct:_cdb::__anon74
cmd_hdr	os_freebsd.h	/^	struct tw_cl_command_header	cmd_hdr;$/;"	m	struct:tw_cl_command_packet	typeref:struct:tw_cl_command_packet::tw_cl_command_header
cmd_opt	os_win32/daemon_win32.h	/^	const char * cmd_opt;  \/\/ argv[1] option for services$/;"	m	struct:daemon_winsvc_options_s
cmd_pkt	os_freebsd.h	/^	struct tw_cl_command_packet	cmd_pkt;$/;"	m	struct:tw_osli_ioctl_no_data_buf	typeref:struct:tw_osli_ioctl_no_data_buf::tw_cl_command_packet
cmd_pkt	os_freebsd.h	/^	struct tw_cl_command_packet	cmd_pkt;$/;"	m	struct:tw_osli_ioctl_with_payload	typeref:struct:tw_osli_ioctl_with_payload::tw_cl_command_packet
cmd_pkt_7k	os_freebsd.h	/^		union tw_cl_command_7k	cmd_pkt_7k;$/;"	m	union:tw_cl_command_packet::__anon16	typeref:union:tw_cl_command_packet::__anon16::tw_cl_command_7k
cmd_pkt_9k	os_freebsd.h	/^		struct tw_cl_command_9k cmd_pkt_9k;$/;"	m	union:tw_cl_command_packet::__anon16	typeref:struct:tw_cl_command_packet::__anon16::tw_cl_command_9k
cmd_recalibrate_ret4	atacmdnames.cpp	/^const char cmd_recalibrate_ret4[]= "RECALIBRATE [RET-4]";$/;"	v
cmd_reserved	atacmdnames.cpp	/^const char cmd_reserved[]        = "[RESERVED]";$/;"	v
cmd_reserved_cf	atacmdnames.cpp	/^const char cmd_reserved_cf[]     = "[RESERVED FOR COMPACTFLASH ASSOCIATION]";$/;"	v
cmd_reserved_mcpt	atacmdnames.cpp	/^const char cmd_reserved_mcpt[]   = "[RESERVED FOR MEDIA CARD PASS THROUGH]"; \/\/ ACS-3: Reserved$/;"	v
cmd_reserved_sa	atacmdnames.cpp	/^const char cmd_reserved_sa[]     = "[RESERVED FOR SERIAL ATA]";$/;"	v
cmd_seek_ret4	atacmdnames.cpp	/^const char cmd_seek_ret4[]       = "SEEK [RET-4]";$/;"	v
cmd_status	megaraid.h	/^  u8 cmd_status;     \/*02h *\/$/;"	m	struct:megasas_dcmd_frame
cmd_status	megaraid.h	/^  u8 cmd_status;     \/*02h *\/$/;"	m	struct:megasas_pthru_frame
cmd_status	megaraid.h	/^  u8 cmd_status;    \/*02h *\/$/;"	m	struct:megasas_header
cmd_vendor_specific	atacmdnames.cpp	/^const char cmd_vendor_specific[] = "[VENDOR SPECIFIC]";$/;"	v
cmdid	megaraid.h	/^  uint8_t   cmdid;$/;"	m	struct:__anon42
cmdid	nvmecmds.h	/^  unsigned short  cmdid;$/;"	m	struct:smartmontools::nvme_error_log_page
cmic	nvmecmds.h	/^  unsigned char   cmic;$/;"	m	struct:smartmontools::nvme_id_ctrl
cmnd	scsicmds.h	/^    UINT8 * cmnd;       \/* [in]: ptr to SCSI command block (cdb) *\/$/;"	m	struct:scsi_cmnd_io
cmnd_len	scsicmds.h	/^    size_t  cmnd_len;   \/* [in]: number of bytes in SCSI command *\/$/;"	m	struct:scsi_cmnd_io
cntlid	nvmecmds.h	/^  unsigned short  cntlid;$/;"	m	struct:smartmontools::nvme_id_ctrl
coll_syms	regex/regex_internal.h	/^  int32_t *coll_syms;$/;"	m	struct:__anon118
com_bstr	os_win32/wmiquery.cpp	/^com_bstr::com_bstr(const char * str)$/;"	f	class:com_bstr
com_bstr	os_win32/wmiquery.h	/^class com_bstr$/;"	c
com_intf_ptr	os_win32/wmiquery.h	/^  com_intf_ptr()$/;"	f	class:com_intf_ptr
com_intf_ptr	os_win32/wmiquery.h	/^class com_intf_ptr$/;"	c
command	atacmds.cpp	/^    smart_command_set command;$/;"	m	struct:__anon51::parsed_ata_device::parsed_ata_command	file:
command	dev_interface.h	/^  ata_register command;      \/\/ command          \/\/ command$/;"	m	struct:ata_in_regs
command	os_freebsd.h	/^	} command;$/;"	m	struct:tw_cl_command_packet	typeref:union:tw_cl_command_packet::__anon16
command	os_freebsd.h	/^    u_int8_t	command;$/;"	m	struct:__anon9
command	os_freebsd.h	/^  unsigned char command;$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
command	os_linux.h	/^  task_ioreg_t command;$/;"	m	struct:hd_drive_task_hdr
command	os_linux.h	/^  unsigned char command; \/\/ On return, contains ATA STATUS register$/;"	m	struct:TAG_TW_Passthru
command	os_linux.h	/^  } command;$/;"	m	struct:TAG_TW_Command_Apache	typeref:struct:TAG_TW_Command_Apache::__anon28
command	os_linux.h	/^  } command;$/;"	m	struct:TAG_TW_Command_Full_9000	typeref:union:TAG_TW_Command_Full_9000::__anon31
command	os_qnxnto.h	/^		uchar_t		command;$/;"	m	struct:_ata_pass_thru
command	os_qnxnto.h	/^		uchar_t		command;$/;"	m	struct:_cdb::_ata_pass_thru
command_register	atacmds.h	/^  unsigned char command_register;$/;"	m	struct:ata_smart_exterrlog_command
command_set_1	atacmds.h	/^  unsigned short command_set_1;$/;"	m	struct:ata_identify_device
command_set_2	atacmds.h	/^  unsigned short command_set_2;$/;"	m	struct:ata_identify_device
command_set_extension	atacmds.h	/^  unsigned short command_set_extension;$/;"	m	struct:ata_identify_device
command_table	atacmdnames.cpp	/^const char * const command_table[] = {$/;"	v
commandreg	atacmds.h	/^  unsigned char commandreg;$/;"	m	struct:ata_smart_errorlog_command_struct
commands	atacmds.h	/^  ata_smart_exterrlog_command commands[5];$/;"	m	struct:ata_smart_exterrlog_error_log
commands	atacmds.h	/^  struct ata_smart_errorlog_command_struct commands[5];$/;"	m	struct:ata_smart_errorlog_struct	typeref:struct:ata_smart_errorlog_struct::ata_smart_errorlog_command_struct
commandstrings	atacmds.cpp	/^static const char * const commandstrings[]={$/;"	v	file:
compat_pkt	os_freebsd.h	/^		struct tw_cl_compatibility_packet	compat_pkt;$/;"	m	union:tw_osli_ioctl_with_payload::__anon17	typeref:struct:tw_osli_ioctl_with_payload::__anon17::tw_cl_compatibility_packet
compile	knowndrives.cpp	/^static bool compile(regular_expression & regex, const char *pattern)$/;"	f	file:
compile	utility.cpp	/^bool regular_expression::compile()$/;"	f	class:regular_expression
compile	utility.cpp	/^bool regular_expression::compile(const char * pattern, int flags)$/;"	f	class:regular_expression
configfile	smartd.cpp	/^static const char * configfile;$/;"	v	file:
configfile_alt	smartd.cpp	/^static std::string configfile_alt;$/;"	v	file:
configfile_stdin	smartd.cpp	/^static const char * const configfile_stdin = "<stdin>";$/;"	v	file:
connect	os_win32/wmiquery.cpp	/^bool wbem_services::connect()$/;"	f	class:wbem_services
connect_port_bitmap	megaraid.h	/^  u8 connect_port_bitmap;$/;"	m	struct:megasas_pd_address
const	getopt/getopt.c	38;"	d	file:
const	getopt/getopt1.c	35;"	d	file:
constraint	regex/regex_internal.h	/^  unsigned int constraint : 10;	\/* context constraint *\/$/;"	m	struct:__anon119
context	megaraid.h	/^  u32 context;       \/*08h *\/$/;"	m	struct:megasas_dcmd_frame
context	megaraid.h	/^  u32 context;       \/*08h *\/$/;"	m	struct:megasas_pthru_frame
context	megaraid.h	/^  u32 context;      \/*08h *\/$/;"	m	struct:megasas_header
context	regex/regex_internal.h	/^  unsigned int context : 2;$/;"	m	struct:re_dfastate_t
control	linux_nvme_ioctl.h	/^	__u16	control;$/;"	m	struct:nvme_user_io
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_ata_pass_thru
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon53
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon54
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon55
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon56
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon57
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon58
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon59
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon60
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon61
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon62
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon63
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon64
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon65
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon66
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon67
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon68
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon69
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon70
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon75
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon76
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon77
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon79
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon82
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon83
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon84
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon85
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon86
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon87
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon88
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon89
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon90
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::__anon91
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::_ata_pass_thru
control	os_qnxnto.h	/^		uchar_t		control;$/;"	m	struct:_cdb::_mode_sense10
control_code	os_freebsd.h	/^	TW_UINT32	control_code;$/;"	m	struct:tw_cl_driver_packet
control_code	os_linux.h	/^  unsigned int control_code;$/;"	m	struct:TAG_TW_Ioctl_Driver_Command_9000
control_format	os_qnxnto.h	/^		uchar_t		control_format;$/;"	m	struct:_cdb::__anon72
control_hob	os_linux.h	/^    unsigned control_hob	: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
conveyance_test_completion_time	atacmds.h	/^  unsigned char conveyance_test_completion_time;$/;"	m	struct:ata_smart_values
copy	utility.cpp	/^void regular_expression::copy(const regular_expression & x)$/;"	f	class:regular_expression
copy_string	knowndrives.cpp	/^const char * drive_database::copy_string(const char * src)$/;"	f	class:drive_database
copy_swapped	os_win32.cpp	/^static void copy_swapped(unsigned char * dest, const char * src, int destsize)$/;"	f	namespace:os_win32
count	aacraid.h	/^  uint32_t         count;$/;"	m	struct:__anon138
count	aacraid.h	/^  uint32_t         count;$/;"	m	struct:__anon139
count	aacraid.h	/^  uint32_t count;              \/\/ Data xfer size$/;"	m	struct:__anon141
count	aacraid.h	/^  uint32_t count;              \/\/ Data xfer size$/;"	m	struct:__anon142
count	cissio_freebsd.h	/^    u_int32_t	count;$/;"	m	struct:__anon97
count	megaraid.h	/^  u32 count;$/;"	m	struct:megasas_pd_list
count	os_freebsd.h	/^	TW_UINT16	count;	\/* block cnt, parameter cnt, message credits *\/$/;"	m	struct:tw_cl_command_generic
count	os_freebsd.h	/^    u_int16_t	count;			\/* block count, parameter count, message credits *\/$/;"	m	struct:__anon10
count	os_qnxnto.h	/^		uchar_t		count[3];$/;"	m	struct:_cdb::__anon88
count_register	atacmds.h	/^  unsigned char count_register;$/;"	m	struct:ata_smart_exterrlog_command
count_register	atacmds.h	/^  unsigned char count_register;$/;"	m	struct:ata_smart_exterrlog_error
count_register_hi	atacmds.h	/^  unsigned char count_register_hi;$/;"	m	struct:ata_smart_exterrlog_command
count_register_hi	atacmds.h	/^  unsigned char count_register_hi;$/;"	m	struct:ata_smart_exterrlog_error
counter	scsicmds.h	/^    uint64_t counter[8];$/;"	m	struct:scsiErrorCounter
counterPC0	scsicmds.h	/^    uint64_t counterPC0;$/;"	m	struct:scsiNonMediumError
counterPE_H	scsicmds.h	/^    uint64_t counterPE_H;  \/* Positioning errors [Hitachi] *\/$/;"	m	struct:scsiNonMediumError
counterTFE_H	scsicmds.h	/^    uint64_t counterTFE_H; \/* Track following errors [Hitachi] *\/$/;"	m	struct:scsiNonMediumError
cpl	freebsd_nvme_ioctl.h	/^	struct nvme_completion	cpl;$/;"	m	struct:nvme_pt_command	typeref:struct:nvme_pt_command::nvme_completion
cqes	nvmecmds.h	/^  unsigned char   cqes;$/;"	m	struct:smartmontools::nvme_id_ctrl
create_cd_newstate	regex/regex_internal.c	/^create_cd_newstate (dfa, nodes, context, hash)$/;"	f	file:
create_ci_newstate	regex/regex_internal.c	/^create_ci_newstate (dfa, nodes, hash)$/;"	f	file:
create_event	os_win32/daemon_win32.cpp	/^static HANDLE create_event(int sig, BOOL initial, BOOL errmsg, BOOL * exists)$/;"	f	file:
create_initial_state	regex/regcomp.c	/^create_initial_state (dfa)$/;"	f	file:
create_newstate_common	regex/regex_internal.c	/^create_newstate_common (dfa, nodes, hash)$/;"	f	file:
create_tree	regex/regcomp.c	/^create_tree (left, right, type, index)$/;"	f	file:
create_vendor_attribute_arg_list	atacmds.cpp	/^std::string create_vendor_attribute_arg_list()$/;"	f
critical_comp_time	nvmecmds.h	/^  unsigned int   critical_comp_time;$/;"	m	struct:smartmontools::nvme_smart_log
critical_warning	nvmecmds.h	/^  unsigned char  critical_warning;$/;"	m	struct:smartmontools::nvme_smart_log
cs	os_freebsd.h	/^    u_int8_t	cs:1;				\/* request state change on src_unit *\/$/;"	m	struct:__anon8
cs_item	cissio_freebsd.h	/^    uint32_t		cs_item;$/;"	m	union:ciss_statrequest
cs_qstat	cissio_freebsd.h	/^    struct ciss_qstat	cs_qstat;$/;"	m	union:ciss_statrequest	typeref:struct:ciss_statrequest::ciss_qstat
csf_default	atacmds.h	/^  unsigned short csf_default;$/;"	m	struct:ata_identify_device
csinfo	os_qnxnto.h	/^	uchar_t		csinfo[4];			\/\/ Command-Specific Information$/;"	m	struct:_scsi_sense
csmi_ata_device	os_win32.cpp	/^  csmi_ata_device()$/;"	f	class:os_win32::csmi_ata_device
csmi_ata_device	os_win32.cpp	/^class csmi_ata_device$/;"	c	namespace:os_win32	file:
csmi_device	os_win32.cpp	/^  csmi_device()$/;"	f	class:os_win32::csmi_device
csmi_device	os_win32.cpp	/^class csmi_device$/;"	c	namespace:os_win32	file:
csmi_ioctl	os_win32.cpp	/^bool win_csmi_device::csmi_ioctl(unsigned code, IOCTL_HEADER * csmi_buffer,$/;"	f	class:os_win32::win_csmi_device
ctrl_busy_time	nvmecmds.h	/^  unsigned char  ctrl_busy_time[16];$/;"	m	struct:smartmontools::nvme_smart_log
ctrl_code	os_freebsd.h	/^  unsigned int ctrl_code; \/* operation control code *\/$/;"	m	struct:_HPT_IOCTL_PARAM
ctx_type	regex/regex_internal.h	/^    re_context_type ctx_type;	\/* for ANCHOR *\/$/;"	m	union:__anon119::__anon120
cur_bkref	regex/regex_internal.h	/^  int cur_bkref;$/;"	m	struct:__anon126
cur_idx	regex/regex_internal.h	/^  int cur_idx;$/;"	m	struct:re_string_t
cur_state	regex/regex_internal.h	/^  mbstate_t cur_state;$/;"	m	struct:re_string_t
curr_pending_id	smartd.cpp	/^  unsigned char curr_pending_id;          \/\/ ID of current pending sector count, 0 if none$/;"	m	struct:dev_config	file:
curr_pending_incr	smartd.cpp	/^  bool curr_pending_incr, offl_pending_incr; \/\/ True if current\/offline pending values increase$/;"	m	struct:dev_config	file:
curr_pending_set	smartd.cpp	/^  bool curr_pending_set,  offl_pending_set;  \/\/ True if '-C', '-U' set in smartd.conf$/;"	m	struct:dev_config	file:
current	atacmds.h	/^  unsigned char current;$/;"	m	struct:ata_smart_attribute
currentlba	atacmds.h	/^  uint64_t           currentlba;$/;"	m	struct:ata_selective_self_test_log
currentspan	atacmds.h	/^  unsigned short     currentspan;$/;"	m	struct:ata_selective_self_test_log
custom_size	knowndrives.cpp	/^  unsigned custom_size() const$/;"	f	class:drive_database
cylinder_hi	os_freebsd.h	/^    u_int16_t	cylinder_hi;$/;"	m	struct:__anon9
cylinder_hi	os_linux.h	/^  unsigned short cylinder_hi;$/;"	m	struct:TAG_TW_Passthru
cylinder_high	atacmds.h	/^  unsigned char cylinder_high;$/;"	m	struct:ata_smart_errorlog_command_struct
cylinder_high	atacmds.h	/^  unsigned char cylinder_high;$/;"	m	struct:ata_smart_errorlog_error_struct
cylinder_lo	os_freebsd.h	/^    u_int16_t	cylinder_lo;$/;"	m	struct:__anon9
cylinder_lo	os_linux.h	/^  unsigned short cylinder_lo;$/;"	m	struct:TAG_TW_Passthru
cylinder_low	atacmds.h	/^  unsigned char cylinder_low;$/;"	m	struct:ata_smart_errorlog_command_struct
cylinder_low	atacmds.h	/^  unsigned char cylinder_low;$/;"	m	struct:ata_smart_errorlog_error_struct
dStrHex	scsicmds.cpp	/^dStrHex(const char* str, int len, int no_ascii)$/;"	f
dStrHex	scsicmds.h	/^inline void dStrHex(const unsigned char* str, int len, int no_ascii)$/;"	f
daemon_detach	os_win32/daemon_win32.cpp	/^int daemon_detach(const char * ident)$/;"	f
daemon_disable_console	os_win32/daemon_win32.cpp	/^void daemon_disable_console()$/;"	f
daemon_enable_console	os_win32/daemon_win32.cpp	/^int daemon_enable_console(const char * title)$/;"	f
daemon_help	os_win32/daemon_win32.cpp	/^static void daemon_help(FILE * f, const char * ident, const char * message)$/;"	f	file:
daemon_main	os_win32/daemon_win32.cpp	/^int daemon_main(const char * ident, const daemon_winsvc_options * svc_opts,$/;"	f
daemon_signal	os_win32/daemon_win32.cpp	/^sigfunc_t daemon_signal(int sig, sigfunc_t func)$/;"	f
daemon_sleep	os_win32/daemon_win32.cpp	/^void daemon_sleep(int seconds)$/;"	f
daemon_spawn	os_win32/daemon_win32.cpp	/^int daemon_spawn(const char * cmd,$/;"	f
daemon_strsignal	os_win32/daemon_win32.cpp	/^const char * daemon_strsignal(int sig)$/;"	f
daemon_win32_cpp_cvsid	os_win32/daemon_win32.cpp	/^const char * daemon_win32_cpp_cvsid = "$Id: daemon_win32.cpp 4120 2015-08-27 16:12:21Z samm2 $"$/;"	v
daemon_winsvc_exitcode	os_win32/daemon_win32.cpp	/^int daemon_winsvc_exitcode; \/\/ Set by app to exit(code)$/;"	v
daemon_winsvc_options	os_win32/daemon_win32.h	/^} daemon_winsvc_options;$/;"	t	typeref:struct:daemon_winsvc_options_s
daemon_winsvc_options_s	os_win32/daemon_win32.h	/^typedef struct daemon_winsvc_options_s {$/;"	s
darwin_ata_device	os_darwin.cpp	/^class darwin_ata_device$/;"	c	namespace:os	file:
darwin_ata_device	os_darwin.cpp	/^darwin_ata_device::darwin_ata_device(smart_interface * intf, const char * dev_name, const char * req_type)$/;"	f	class:os::darwin_ata_device
darwin_smart_device	os_darwin.cpp	/^  explicit darwin_smart_device(const char * mode)$/;"	f	class:os::darwin_smart_device
darwin_smart_device	os_darwin.cpp	/^class darwin_smart_device$/;"	c	namespace:os	file:
darwin_smart_interface	os_darwin.cpp	/^class darwin_smart_interface$/;"	c	namespace:os	file:
data	atacmds.cpp	/^    char * data;$/;"	m	struct:__anon51::parsed_ata_device::parsed_ata_command	file:
data	megaraid.h	/^  ptr_t         data;$/;"	m	struct:uioctl_t
data	os_linux.h	/^    unsigned data		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
data	os_linux.h	/^  task_ioreg_t data;$/;"	m	struct:hd_drive_task_hdr
data	os_qnxnto.h	/^		uchar_t		data;$/;"	m	struct:_cdb::__anon79
data	utility.h	/^  const unsigned char * data() const$/;"	f	class:raw_buffer
data	utility.h	/^  unsigned char * data()$/;"	f	class:raw_buffer
data_buf	os_freebsd.h	/^		TW_INT8					data_buf[1];$/;"	m	union:tw_osli_ioctl_with_payload::__anon17
data_buffer	os_linux.h	/^  char                         data_buffer[1];$/;"	m	struct:TAG_TW_Ioctl_Apache
data_buffer	os_linux.h	/^  char          data_buffer[1];$/;"	m	struct:TAG_TW_New_Ioctl
data_buffer_length	os_linux.h	/^  unsigned int  data_buffer_length;$/;"	m	struct:TAG_TW_New_Ioctl
data_format	os_qnxnto.h	/^		uchar_t		data_format;$/;"	m	struct:_cdb::__anon79
data_hob	os_linux.h	/^    unsigned data_hob		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
data_in	dev_interface.h	/^    no_data = 0x0, data_out = 0x1, data_in = 0x2, data_io = 0x3$/;"	e	enum:nvme_cmd_in::__anon134
data_in	dev_interface.h	/^  enum { no_data = 0, data_in, data_out } direction; \/\/\/< I\/O direction$/;"	e	enum:ata_cmd_in::__anon132
data_io	dev_interface.h	/^    no_data = 0x0, data_out = 0x1, data_in = 0x2, data_io = 0x3$/;"	e	enum:nvme_cmd_in::__anon134
data_len	linux_nvme_ioctl.h	/^	__u32	data_len;$/;"	m	struct:nvme_passthru_cmd
data_out	dev_interface.h	/^    no_data = 0x0, data_out = 0x1, data_in = 0x2, data_io = 0x3$/;"	e	enum:nvme_cmd_in::__anon134
data_out	dev_interface.h	/^  enum { no_data = 0, data_in, data_out } direction; \/\/\/< I\/O direction$/;"	e	enum:ata_cmd_in::__anon132
data_phase	os_linux.h	/^  int		   data_phase;$/;"	m	struct:ide_task_request_s
data_units_read	nvmecmds.h	/^  unsigned char  data_units_read[16];$/;"	m	struct:smartmontools::nvme_smart_log
data_units_written	nvmecmds.h	/^  unsigned char  data_units_written[16];$/;"	m	struct:smartmontools::nvme_smart_log
data_xfer_len	megaraid.h	/^  u32 data_xfer_len; \/*14h *\/$/;"	m	struct:megasas_dcmd_frame
data_xfer_len	megaraid.h	/^  u32 data_xfer_len; \/*14h *\/$/;"	m	struct:megasas_pthru_frame
data_xfer_length	aacraid.h	/^  uint32_t data_xfer_length;$/;"	m	struct:__anon143
data_xferlen	megaraid.h	/^  u32 data_xferlen; \/*14h *\/$/;"	m	struct:megasas_header
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dataxferaddr	megaraid.h	/^  uint32_t dataxferaddr;$/;"	m	struct:__anon41
dataxferlen	megaraid.h	/^  uint32_t dataxferlen;$/;"	m	struct:__anon41
dateandtimezone	utility.cpp	/^void dateandtimezone(char *buffer){$/;"	f
dateandtimezoneepoch	utility.cpp	/^void dateandtimezoneepoch(char *buffer, time_t tval){$/;"	f
dbentry_type	knowndrives.cpp	/^enum dbentry_type {$/;"	g	file:
dcmd	megaraid.h	/^    struct megasas_dcmd_frame dcmd;$/;"	m	union:megasas_iocpacket::__anon47	typeref:struct:megasas_iocpacket::__anon47::megasas_dcmd_frame
debug_hex_dump	nvmecmds.cpp	/^static void debug_hex_dump(const void * data, unsigned size)$/;"	f	file:
debugging	os_win32/daemon_win32.cpp	42;"	d	file:
debugging	os_win32/daemon_win32.cpp	44;"	d	file:
debugmode	smartd.cpp	/^static unsigned char debugmode = 0;$/;"	v	file:
default_attr_defs	knowndrives.cpp	/^static ata_vendor_attr_defs default_attr_defs;$/;"	v	file:
defect_list_fmt	os_qnxnto.h	/^        uchar_t         defect_list_fmt;$/;"	m	struct:_cdb::_format_unit
delay	cissio_freebsd.h	/^    u_int32_t	delay;$/;"	m	struct:__anon97
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
desc	os_qnxnto.h	/^  ATA_STATUS_DESCRIPTOR	       desc;$/;"	m	struct:_ata_sense
desc	os_win32.cpp	/^  STORAGE_DEVICE_DESCRIPTOR desc;$/;"	m	union:os_win32::STORAGE_DEVICE_DESCRIPTOR_DATA	file:
descript	os_win32/daemon_win32.h	/^	const char * descript; \/\/ Service description$/;"	m	struct:daemon_winsvc_options_s
descriptor_len	os_qnxnto.h	/^	uchar_t			descriptor_len;			\/* 0xc *\/$/;"	m	struct:_ata_status_descriptor
descriptor_len	os_qnxnto.h	/^	uchar_t			descriptor_len;$/;"	m	struct:_scsi_sense_desriptor_header
descriptor_type	os_qnxnto.h	/^	uchar_t			descriptor_type;$/;"	m	struct:_ata_status_descriptor
descriptor_type	os_qnxnto.h	/^	uchar_t			descriptor_type;$/;"	m	struct:_scsi_sense_desriptor_header
dest	regex/regex_internal.h	/^     bitset dest;$/;"	v
dev_areca_cpp_cvsid	dev_areca.cpp	/^const char * dev_areca_cpp_cvsid = "$Id: dev_areca.cpp 4209 2016-01-22 20:49:44Z chrfranke $"$/;"	v
dev_ata_cmd_set_cpp_cvsid	dev_ata_cmd_set.cpp	/^const char * dev_ata_cmd_set_cpp_cvsid = "$Id: dev_ata_cmd_set.cpp 4122 2015-08-27 19:08:07Z chrfranke $"$/;"	v
dev_config	smartd.cpp	/^dev_config::dev_config()$/;"	f	class:dev_config
dev_config	smartd.cpp	/^struct dev_config$/;"	s	file:
dev_config_vector	smartd.cpp	/^typedef std::vector<dev_config> dev_config_vector;$/;"	t	file:
dev_darwin_cpp_cvsid	os_darwin.cpp	/^const char * dev_darwin_cpp_cvsid = "$Id: os_darwin.cpp 4214 2016-01-24 22:53:37Z samm2 $"$/;"	v
dev_fn	cissio_freebsd.h	/^    u_int8_t	dev_fn;$/;"	m	struct:__anon96
dev_idinfo	smartd.cpp	/^  std::string dev_idinfo;                 \/\/ Device identify info for warning emails$/;"	m	struct:dev_config	file:
dev_interface_cpp_cvsid	dev_interface.cpp	/^const char * dev_interface_cpp_cvsid = "$Id: dev_interface.cpp 4283 2016-04-10 12:55:59Z chrfranke $"$/;"	v
dev_legacy_cpp_cvsid	dev_legacy.cpp	/^const char * dev_legacy_cpp_cvsid = "$Id: dev_legacy.cpp 4251 2016-03-26 16:48:32Z chrfranke $"$/;"	v
dev_name	dev_interface.h	/^    std::string dev_name;  \/\/\/< Device (path)name$/;"	m	struct:smart_device::device_info
dev_name	smartd.cpp	/^  std::string dev_name;                   \/\/ Device name (plain, for SMARTD_DEVICE variable)$/;"	m	struct:dev_config	file:
dev_rpm	smartd.cpp	/^  int dev_rpm; \/\/ rotation rate, 0 = unknown, 1 = SSD, >1 = HDD$/;"	m	struct:dev_config	file:
dev_state	smartd.cpp	/^struct dev_state$/;"	s	file:
dev_state_vector	smartd.cpp	/^typedef std::vector<dev_state> dev_state_vector;$/;"	t	file:
dev_type	dev_interface.h	/^    std::string dev_type;  \/\/\/< Actual device type$/;"	m	struct:smart_device::device_info
dev_type	smartd.cpp	/^  std::string dev_type;                   \/\/ Device type argument from -d directive, empty if none$/;"	m	struct:dev_config	file:
device	dev_interface.h	/^  ata_register device;       \/\/ device\/head      \/\/ device$/;"	m	struct:ata_in_regs
device	dev_interface.h	/^  ata_register device;$/;"	m	struct:ata_out_regs
device	dev_interface.h	/^  bool error, sector_count, lba_low, lba_mid, lba_high, device, status;$/;"	m	struct:ata_out_regs_flags
device	os_qnxnto.h	/^		uchar_t		device;$/;"	m	struct:_ata_pass_thru
device	os_qnxnto.h	/^		uchar_t		device;$/;"	m	struct:_cdb::_ata_pass_thru
device	os_qnxnto.h	/^	uchar_t			device;$/;"	m	struct:_ata_status_descriptor
device_control_register	atacmds.h	/^  unsigned char device_control_register;$/;"	m	struct:ata_smart_exterrlog_command
device_control_register	atacmds.h	/^  unsigned char device_control_register;$/;"	m	struct:ata_smart_exterrlog_error
device_error_count	atacmds.h	/^  unsigned short device_error_count;$/;"	m	struct:ata_smart_exterrlog
device_head	os_linux.h	/^  task_ioreg_t device_head;$/;"	m	struct:hd_drive_task_hdr
device_id	megaraid.h	/^  u16 device_id;$/;"	m	struct:megasas_pd_address
device_info	dev_interface.h	/^    device_info()$/;"	f	struct:smart_device::device_info
device_info	dev_interface.h	/^    device_info(const char * d_name, const char * d_type, const char * r_type)$/;"	f	struct:smart_device::device_info
device_info	dev_interface.h	/^  struct device_info {$/;"	s	class:smart_device
device_register	atacmds.h	/^  unsigned char device_register;$/;"	m	struct:ata_smart_exterrlog_command
device_register	atacmds.h	/^  unsigned char device_register;$/;"	m	struct:ata_smart_exterrlog_error
device_state	atacmds.h	/^  unsigned char device_state;       \/\/ 10: Device State (0-5)$/;"	m	struct:ata_sct_status_response
device_type	dev_interface.h	/^  typedef Dev device_type;$/;"	t	class:any_device_auto_ptr
deviceclose	os_netbsd.cpp	/^deviceclose(int fd)$/;"	f
deviceclose	os_openbsd.cpp	/^deviceclose(int fd)$/;"	f
deviceclose	os_qnxnto.cpp	/^int deviceclose(int fd)$/;"	f
deviceclose	os_solaris.cpp	/^int deviceclose(int fd){$/;"	f
devicecontrolreg	atacmds.h	/^  unsigned char devicecontrolreg;$/;"	m	struct:ata_smart_errorlog_command_struct
deviceopen	os_netbsd.cpp	/^deviceopen(const char *pathname, char *type)$/;"	f
deviceopen	os_openbsd.cpp	/^deviceopen(const char *pathname, char *type)$/;"	f
deviceopen	os_qnxnto.cpp	/^int deviceopen(const char *pathname, char *type)$/;"	f
deviceopen	os_solaris.cpp	/^int deviceopen(const char *pathname, char *type){$/;"	f
devices	os_darwin.cpp	/^} devices[20];$/;"	v	typeref:struct:__anon95	file:
devices	os_freebsd.h	/^  unsigned int devices[MAXDEV_PER_CHANNEL];$/;"	m	struct:_HPT_CHANNEL_INFO
devices	os_freebsd.h	/^  unsigned int devices[PMPORT_PER_CHANNEL];$/;"	m	struct:_HPT_CHANNEL_INFO_V2
devstat_all_pages	ataprint.h	/^  bool devstat_all_pages, devstat_ssd_page;$/;"	m	struct:ata_print_options
devstat_entry_info	ataprint.cpp	/^struct devstat_entry_info$/;"	s	file:
devstat_info_0x00	ataprint.cpp	/^const devstat_entry_info devstat_info_0x00[] = {$/;"	v
devstat_info_0x01	ataprint.cpp	/^const devstat_entry_info devstat_info_0x01[] = {$/;"	v
devstat_info_0x02	ataprint.cpp	/^const devstat_entry_info devstat_info_0x02[] = {$/;"	v
devstat_info_0x03	ataprint.cpp	/^const devstat_entry_info devstat_info_0x03[] = {$/;"	v
devstat_info_0x04	ataprint.cpp	/^const devstat_entry_info devstat_info_0x04[] = {$/;"	v
devstat_info_0x05	ataprint.cpp	/^const devstat_entry_info devstat_info_0x05[] = {$/;"	v
devstat_info_0x06	ataprint.cpp	/^const devstat_entry_info devstat_info_0x06[] = {$/;"	v
devstat_info_0x07	ataprint.cpp	/^const devstat_entry_info devstat_info_0x07[] = {$/;"	v
devstat_infos	ataprint.cpp	/^const devstat_entry_info * devstat_infos[] = {$/;"	v
devstat_pages	ataprint.h	/^  std::vector<int> devstat_pages;$/;"	m	struct:ata_print_options
devstat_ssd_page	ataprint.h	/^  bool devstat_all_pages, devstat_ssd_page;$/;"	m	struct:ata_print_options
direction	dev_interface.h	/^  enum { no_data = 0, data_in, data_out } direction; \/\/\/< I\/O direction$/;"	m	struct:ata_cmd_in	typeref:enum:ata_cmd_in::__anon132
direction	dev_interface.h	/^  unsigned char direction() const$/;"	f	struct:nvme_cmd_in
disable_system_auto_standby	dev_interface.cpp	/^bool smart_interface::disable_system_auto_standby(bool \/*disable*\/)$/;"	f	class:smart_interface
disable_system_auto_standby	os_win32.cpp	/^bool win_smart_interface::disable_system_auto_standby(bool disable)$/;"	f	class:os_win32::win_smart_interface
dispname	os_win32/daemon_win32.h	/^	const char * dispname; \/\/ Service display name$/;"	m	struct:daemon_winsvc_options_s
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dnr	freebsd_nvme_ioctl.h	/^	uint16_t dnr	:  1;	\/* do not retry *\/$/;"	m	struct:nvme_status
do_cmd	os_freebsd.cpp	/^int freebsd_ata_device::do_cmd( struct ata_ioc_request* request, bool is_48bit_cmd)$/;"	f	class:os_freebsd::freebsd_ata_device
do_cmd	os_freebsd.cpp	/^int freebsd_atacam_device::do_cmd( struct ata_ioc_request* request, bool is_48bit_cmd)$/;"	f	class:os_freebsd::freebsd_atacam_device
do_disable_standby_check	smartd.cpp	/^static void do_disable_standby_check(const dev_config_vector & configs, const dev_state_vector & states)$/;"	f	file:
do_fork	smartd.cpp	/^static bool do_fork=true;$/;"	v	file:
do_normal_scsi_cmnd_io	os_linux.cpp	/^static int do_normal_scsi_cmnd_io(int dev_fd, struct scsi_cmnd_io * iop,$/;"	f	namespace:os_linux
do_not_use_in_implementation_classes	dev_interface.h	/^  enum do_not_use_in_implementation_classes { never_called };$/;"	g	class:smart_device
do_scsi_cmnd_io	os_netbsd.cpp	/^do_scsi_cmnd_io(int fd, struct scsi_cmnd_io * iop, int report)$/;"	f
do_scsi_cmnd_io	os_openbsd.cpp	/^do_scsi_cmnd_io(int fd, struct scsi_cmnd_io * iop, int report)$/;"	f
do_scsi_cmnd_io	os_qnxnto.cpp	/^int do_scsi_cmnd_io(int fd,struct scsi_cmnd_io * iop,int report)$/;"	f
do_scsi_cmnd_io	os_solaris.cpp	/^int do_scsi_cmnd_io(int fd, struct scsi_cmnd_io * iop, int report)$/;"	f
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docs_DATA	Makefile	/^docs_DATA = \\$/;"	m
docsdir	Makefile	/^docsdir = $(docdir)$/;"	m
done	os_freebsd.cpp	/^static char done[USB_MAX_DEVICES];$/;"	m	namespace:os_freebsd	file:
dont_print_serial_number	atacmds.cpp	/^bool dont_print_serial_number = false;$/;"	v
dosleep	smartd.cpp	/^static time_t dosleep(time_t wakeuptime, bool & sigwakeup)$/;"	f	file:
download	update-smart-drivedb	/^download()$/;"	f
download	update-smart-drivedb.in	/^download()$/;"	f
download_fw	os_freebsd.h	/^	struct tw_cl_command_download_firmware	download_fw;$/;"	m	union:tw_cl_command_7k	typeref:struct:tw_cl_command_7k::tw_cl_command_download_firmware
dpc	nvmecmds.h	/^  unsigned char   dpc;$/;"	m	struct:smartmontools::nvme_id_ns
dps	nvmecmds.h	/^  unsigned char   dps;$/;"	m	struct:smartmontools::nvme_id_ns
drive_capabilities	nvmeprint.h	/^  bool drive_capabilities;$/;"	m	struct:nvme_print_options
drive_database	knowndrives.cpp	/^class drive_database$/;"	c	file:
drive_database	knowndrives.cpp	/^drive_database::drive_database()$/;"	f	class:drive_database
drive_head	atacmds.h	/^  unsigned char drive_head;$/;"	m	struct:ata_smart_errorlog_command_struct
drive_head	atacmds.h	/^  unsigned char drive_head;$/;"	m	struct:ata_smart_errorlog_error_struct
drive_head	os_freebsd.h	/^    u_int8_t	drive_head;$/;"	m	struct:__anon9
drive_head	os_linux.h	/^  unsigned char drive_head;$/;"	m	struct:TAG_TW_Passthru
drive_info	ataprint.h	/^  bool drive_info;$/;"	m	struct:ata_print_options
drive_info	nvmeprint.h	/^  bool drive_info;$/;"	m	struct:nvme_print_options
drive_info	scsiprint.h	/^  bool drive_info;$/;"	m	struct:scsi_print_options
drive_letter	os_win32.cpp	/^static int drive_letter(const char * s)$/;"	f	namespace:os_win32
drive_settings	knowndrives.h	/^struct drive_settings {$/;"	s
drivedb_DATA	Makefile	/^drivedb_DATA = drivedb.h$/;"	m
drivedbdir	Makefile	/^drivedbdir = ${datadir}\/${PACKAGE}$/;"	m
driver_command	os_linux.h	/^  TW_Ioctl_Driver_Command_9000 driver_command;$/;"	m	struct:TAG_TW_Ioctl_Apache
driver_lock	freebsd_nvme_ioctl.h	/^	struct mtx *		driver_lock;$/;"	m	struct:nvme_pt_command	typeref:struct:nvme_pt_command::mtx
driver_pkt	os_freebsd.h	/^	struct tw_cl_driver_packet	driver_pkt;$/;"	m	struct:tw_osli_ioctl_no_data_buf	typeref:struct:tw_osli_ioctl_no_data_buf::tw_cl_driver_packet
driver_pkt	os_freebsd.h	/^	struct tw_cl_driver_packet	driver_pkt;$/;"	m	struct:tw_osli_ioctl_with_payload	typeref:struct:tw_osli_ioctl_with_payload::tw_cl_driver_packet
driver_version	os_freebsd.h	/^	TW_UINT8	driver_version[32];\/* driver version *\/$/;"	m	struct:tw_cl_compatibility_packet
driverhead	os_freebsd.h	/^  unsigned char driverhead;$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
dryrun	os_win32/smartd_warning.cmd	/^  set dryrun=t$/;"	v
dryrun	os_win32/smartd_warning.cmd	/^set dryrun=$/;"	v
ds	nvmecmds.h	/^  unsigned char   ds;$/;"	m	struct:smartmontools::nvme_lbaf
dsmgmt	linux_nvme_ioctl.h	/^	__u32	dsmgmt;$/;"	m	struct:nvme_user_io
duplicate_node	regex/regcomp.c	/^duplicate_node (new_idx, dfa, org_idx, constraint)$/;"	f	file:
duplicate_node_closure	regex/regcomp.c	/^duplicate_node_closure (dfa, top_org_node, top_clone_node, root_node,$/;"	f	file:
duplicate_tree	regex/regcomp.c	/^duplicate_tree (src, dfa)$/;"	f	file:
duplicated	regex/regex_internal.h	/^  unsigned int duplicated : 1;$/;"	m	struct:__anon119
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dwDeviceMapEx	os_win32.cpp	/^  DWORD dwDeviceMapEx;  \/\/ 3ware specific: RAID drive bit map$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
dwReserved	os_win32.cpp	/^  DWORD dwReserved[4];$/;"	m	struct:_SENDCMDINPARAMS_EX	file:
dwReserved	os_win32.cpp	/^  ULONG dwReserved[2];$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
dxfer_dir	scsicmds.h	/^    int dxfer_dir;      \/* [in]: DXFER_NONE, DXFER_FROM_DEVICE, or$/;"	m	struct:scsi_cmnd_io
dxfer_len	scsicmds.h	/^    size_t dxfer_len;   \/* [in]: bytes to be transferred to\/from dxferp *\/$/;"	m	struct:scsi_cmnd_io
dxferp	scsicmds.h	/^    UINT8 * dxferp;     \/* [in]: ptr to outgoing or incoming data buffer *\/$/;"	m	struct:scsi_cmnd_io
eclosure	regex/regex_internal.h	/^  re_node_set eclosure;$/;"	m	struct:bin_tree_t
eclosures	regex/regex_internal.h	/^  re_node_set *eclosures;$/;"	m	struct:re_dfa_t
edests	regex/regex_internal.h	/^  re_node_set *edests;$/;"	m	struct:re_dfa_t
efeatures	os_qnxnto.h	/^		uchar_t		efeatures;$/;"	m	struct:_ata_pass_thru
efeatures	os_qnxnto.h	/^		uchar_t		efeatures;$/;"	m	struct:_cdb::_ata_pass_thru
eflags	regex/regex_internal.h	/^  int eflags;$/;"	m	struct:__anon125
elba_high	os_qnxnto.h	/^		uchar_t		elba_high;$/;"	m	struct:_ata_pass_thru
elba_high	os_qnxnto.h	/^		uchar_t		elba_high;$/;"	m	struct:_cdb::_ata_pass_thru
elba_high	os_qnxnto.h	/^	uchar_t			elba_high;				\/* (15:8) *\/$/;"	m	struct:_ata_status_descriptor
elba_low	os_qnxnto.h	/^		uchar_t		elba_low;$/;"	m	struct:_ata_pass_thru
elba_low	os_qnxnto.h	/^		uchar_t		elba_low;$/;"	m	struct:_cdb::_ata_pass_thru
elba_low	os_qnxnto.h	/^	uchar_t			elba_low;				\/* (15:8) *\/$/;"	m	struct:_ata_status_descriptor
elba_mid	os_qnxnto.h	/^		uchar_t		elba_mid;$/;"	m	struct:_ata_pass_thru
elba_mid	os_qnxnto.h	/^		uchar_t		elba_mid;$/;"	m	struct:_cdb::_ata_pass_thru
elba_mid	os_qnxnto.h	/^	uchar_t			elba_mid;				\/* (15:8) *\/$/;"	m	struct:_ata_status_descriptor
elems	regex/regex_internal.h	/^  int *elems;$/;"	m	struct:__anon116
elpe	nvmecmds.h	/^  unsigned char   elpe;$/;"	m	struct:smartmontools::nvme_id_ctrl
emailaddress	smartd.cpp	/^  std::string emailaddress;               \/\/ email address, or empty$/;"	m	struct:dev_config	file:
emailcmdline	smartd.cpp	/^  std::string emailcmdline;               \/\/ script to execute, empty if no messages$/;"	m	struct:dev_config	file:
emailfreq	smartd.cpp	/^  unsigned char emailfreq;                \/\/ Emails once (1) daily (2) diminishing (3)$/;"	m	struct:dev_config	file:
emailtest	smartd.cpp	/^  bool emailtest;                         \/\/ Send test email?$/;"	m	struct:dev_config	file:
empty	utility.h	/^  bool empty() const$/;"	f	class:regular_expression
empty_set	regex/regexec.c	/^static re_node_set empty_set;$/;"	v	file:
enable_capabilities	smartd.cpp	/^static bool enable_capabilities = false;$/;"	v	file:
encl_device_id	megaraid.h	/^  u16 encl_device_id;$/;"	m	struct:megasas_pd_address
encl_index	megaraid.h	/^  u8 encl_index;$/;"	m	struct:megasas_pd_address
end	atacmds.h	/^    uint64_t end;     \/\/ Last block$/;"	m	struct:ata_selective_selftest_args::span_args
end	atacmds.h	/^  uint64_t end;$/;"	m	struct:test_span
end	regex/regex.h	/^  regoff_t *end;$/;"	m	struct:re_registers
end	regex/regex_internal.h	/^  int end;$/;"	m	struct:__anon121
end_frame	os_qnxnto.h	/^		uchar_t		end_frame;$/;"	m	struct:_cdb::__anon69
end_frame	os_qnxnto.h	/^		uchar_t		end_frame;$/;"	m	struct:_cdb::__anon81
end_index	os_qnxnto.h	/^		uchar_t		end_index;$/;"	m	struct:_cdb::__anon70
end_minute	os_qnxnto.h	/^		uchar_t		end_minute;$/;"	m	struct:_cdb::__anon69
end_minute	os_qnxnto.h	/^		uchar_t		end_minute;$/;"	m	struct:_cdb::__anon81
end_second	os_qnxnto.h	/^		uchar_t		end_second;$/;"	m	struct:_cdb::__anon69
end_second	os_qnxnto.h	/^		uchar_t		end_second;$/;"	m	struct:_cdb::__anon81
end_track	os_qnxnto.h	/^		uchar_t		end_track;$/;"	m	struct:_cdb::__anon70
entrance_nodes	regex/regex_internal.h	/^  re_node_set *entrance_nodes;$/;"	m	struct:re_dfastate_t
entry	atacmds.h	/^    entry()$/;"	f	struct:ata_vendor_attr_defs::entry
entry	atacmds.h	/^  struct ata_smart_log_entry entry[255];$/;"	m	struct:ata_smart_log_directory	typeref:struct:ata_smart_log_directory::ata_smart_log_entry
entry	atacmds.h	/^  struct entry$/;"	s	class:ata_vendor_attr_defs
entry_lat	nvmecmds.h	/^  unsigned int    entry_lat; \/\/ microseconds$/;"	m	struct:smartmontools::nvme_id_power_state
env_buffer	smartd.cpp	/^  env_buffer()$/;"	f	class:env_buffer
env_buffer	smartd.cpp	/^class env_buffer$/;"	c	file:
eps_via_nodes	regex/regex_internal.h	/^  re_node_set eps_via_nodes;$/;"	m	struct:re_fail_stack_ent_t
equiv_classes	regex/regex_internal.h	/^  int32_t *equiv_classes;$/;"	m	struct:__anon118
erase	os_qnxnto.h	/^	} erase;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon82
err	os_win32/smartd_warning.cmd	/^    if errorlevel 1 set err=t$/;"	v
err	os_win32/smartd_warning.cmd	/^set err=$/;"	v
errCounter	smartd.cpp	/^    struct scsiErrorCounter errCounter;$/;"	m	struct:persistent_dev_state::scsi_error_counter_t	typeref:struct:persistent_dev_state::scsi_error_counter_t::scsiErrorCounter	file:
err_specific_desc	os_freebsd.h	/^	TW_UINT8	err_specific_desc[98];$/;"	m	struct:tw_cl_command_header
err_specific_desc	os_linux.h	/^  unsigned char err_specific_desc[102];$/;"	m	struct:TAG_TW_Command_Apache_Header
errbuf	regex/regcomp.c	/^    char *errbuf;$/;"	v
errbuf_size	regex/regcomp.c	/^    size_t errbuf_size;$/;"	v
error	atacmds.h	/^  ata_smart_exterrlog_error error;$/;"	m	struct:ata_smart_exterrlog_error_log
error	dev_interface.h	/^  ata_register error;$/;"	m	struct:ata_out_regs
error	dev_interface.h	/^  bool error, sector_count, lba_low, lba_mid, lba_high, device, status;$/;"	m	struct:ata_out_regs_flags
error	os_freebsd.h	/^		TW_UINT16	error;$/;"	m	struct:tw_cl_command_header::__anon14
error	os_linux.h	/^    unsigned short error;$/;"	m	struct:TAG_TW_Command_Apache_Header::__anon29
error	os_qnxnto.h	/^	uchar_t			error;$/;"	m	struct:_ata_status_descriptor
error	os_qnxnto.h	/^	uchar_t		error;				\/\/ Error Code$/;"	m	struct:_scsi_sense
error	os_qnxnto.h	/^	uchar_t		error;				\/\/ Error Code$/;"	m	struct:_scsi_sense_descriptor
error	update-smart-drivedb	/^error()$/;"	f
error	update-smart-drivedb.in	/^error()$/;"	f
error_count	nvmecmds.h	/^  uint64_t        error_count;$/;"	m	struct:smartmontools::nvme_error_log_page
error_feature	os_linux.h	/^    unsigned error_feature	: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
error_feature_hob	os_linux.h	/^    unsigned error_feature_hob	: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
error_info	cissio_freebsd.h	/^    ErrorInfo_struct	error_info;	\/* 48 *\/$/;"	m	struct:__anon111
error_info	cissio_freebsd.h	/^    ErrorInfo_struct	error_info;	\/* 48 *\/$/;"	m	struct:__anon112
error_info	dev_interface.h	/^    error_info(int n, const char * m)$/;"	f	struct:smart_device::error_info
error_info	dev_interface.h	/^    explicit error_info(int n = 0)$/;"	f	struct:smart_device::error_info
error_info	dev_interface.h	/^  struct error_info {$/;"	s	class:smart_device
error_log_entries	nvmeprint.h	/^  unsigned error_log_entries;$/;"	m	struct:nvme_print_options
error_log_index	atacmds.h	/^  unsigned short error_log_index;$/;"	m	struct:ata_smart_exterrlog
error_log_pointer	atacmds.h	/^  unsigned char error_log_pointer;$/;"	m	struct:ata_smart_errorlog
error_logs	atacmds.h	/^  ata_smart_exterrlog_error_log error_logs[4];$/;"	m	struct:ata_smart_exterrlog
error_register	atacmds.h	/^  unsigned char error_register;$/;"	m	struct:ata_smart_errorlog_error_struct
error_register	atacmds.h	/^  unsigned char error_register;$/;"	m	struct:ata_smart_exterrlog_error
error_struct	atacmds.h	/^  struct ata_smart_errorlog_error_struct error_struct;$/;"	m	struct:ata_smart_errorlog_struct	typeref:struct:ata_smart_errorlog_struct::ata_smart_errorlog_error_struct
errorlog	smartd.cpp	/^  bool errorlog;                          \/\/ Monitor number of ATA errors$/;"	m	struct:dev_config	file:
errorlog_capability	atacmds.h	/^  unsigned char errorlog_capability;$/;"	m	struct:ata_smart_values
errorlog_struct	atacmds.h	/^  struct ata_smart_errorlog_struct errorlog_struct[5];$/;"	m	struct:ata_smart_errorlog	typeref:struct:ata_smart_errorlog::ata_smart_errorlog_struct
errval	atacmds.cpp	/^    int retval, errval;$/;"	m	struct:__anon51::parsed_ata_device::parsed_ata_command	file:
escalade_type_t	os_linux.cpp	/^  enum escalade_type_t {$/;"	g	class:os_linux::linux_escalade_device	file:
esector_count	os_qnxnto.h	/^		uchar_t		esector_count;$/;"	m	struct:_ata_pass_thru
esector_count	os_qnxnto.h	/^		uchar_t		esector_count;$/;"	m	struct:_cdb::_ata_pass_thru
esector_count	os_qnxnto.h	/^	uchar_t			esector_count;			\/* (15:8) *\/$/;"	m	struct:_ata_status_descriptor
eui64	nvmecmds.h	/^  unsigned char   eui64[8];$/;"	m	struct:smartmontools::nvme_id_ns
event_exists	os_win32/daemon_win32.cpp	/^static int event_exists(int sig)$/;"	f	file:
event_logger_thread	os_win32/syslog_win32.cpp	/^static ULONG WINAPI event_logger_thread(LPVOID arg)$/;"	f	file:
event_pkt	os_freebsd.h	/^		struct tw_cl_event_packet		event_pkt;$/;"	m	union:tw_osli_ioctl_with_payload::__anon17	typeref:struct:tw_osli_ioctl_with_payload::__anon17::tw_cl_event_packet
event_src	os_freebsd.h	/^	TW_UINT32	event_src;$/;"	m	struct:tw_cl_event_packet
evt_hthread	os_win32/syslog_win32.cpp	/^static HANDLE evt_hthread;$/;"	v	file:
evt_index_in	os_win32/syslog_win32.cpp	/^static int evt_index_in, evt_index_out;$/;"	v	file:
evt_index_out	os_win32/syslog_win32.cpp	/^static int evt_index_in, evt_index_out;$/;"	v	file:
evt_lines	os_win32/syslog_win32.cpp	/^static char evt_lines[MAXLINES][LINELEN+1];$/;"	v	file:
evt_priorities	os_win32/syslog_win32.cpp	/^static int evt_priorities[MAXLINES];$/;"	v	file:
evt_timeout	os_win32/syslog_win32.cpp	/^static volatile int evt_timeout;$/;"	v	file:
evt_wait_in	os_win32/syslog_win32.cpp	/^static HANDLE evt_wait_in, evt_wait_out;$/;"	v	file:
evt_wait_out	os_win32/syslog_win32.cpp	/^static HANDLE evt_wait_in, evt_wait_out;$/;"	v	file:
exampledir	Makefile	/^exampledir = ${docdir}\/examplescripts$/;"	m
examples_DATA	Makefile	/^examples_DATA = \\$/;"	m
examples_SCRIPTS	Makefile	/^examples_SCRIPTS = \\$/;"	m
examplesdir	Makefile	/^examplesdir = $(exampledir)$/;"	m
exchange	getopt/getopt.c	/^exchange (argv)$/;"	f	file:
exchange	os_qnxnto.h	/^	} exchange;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon74
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
execute	utility.h	/^  bool execute(const char * str, unsigned nmatch, regmatch_t * pmatch, int flags = 0) const$/;"	f	class:regular_expression
exit_lat	nvmecmds.h	/^  unsigned int    exit_lat;  \/\/ microseconds$/;"	m	struct:smartmontools::nvme_id_power_state
expand_bkref_cache	regex/regexec.c	/^expand_bkref_cache (preg, mctx, cur_nodes, cur_str, last_str, subexp_num,$/;"	f	file:
ext_status_code	atacmds.h	/^  unsigned short ext_status_code;   \/\/ 14-15: Status of last SCT command (0xffff if executing)$/;"	m	struct:ata_sct_status_response
extend_buffers	regex/regexec.c	/^extend_buffers (mctx)$/;"	f	file:
extend_test_completion_time_b	atacmds.h	/^  unsigned char extend_test_completion_time_b; \/\/ If 0xff, use 16-bit value below$/;"	m	struct:ata_smart_values
extend_test_completion_time_w	atacmds.h	/^  unsigned short extend_test_completion_time_w; \/\/ e04130r2, added to T13\/1699-D Revision 1c, April 2005$/;"	m	struct:ata_smart_values
extended_error	atacmds.h	/^  unsigned char extended_error[19];$/;"	m	struct:ata_smart_errorlog_error_struct
extended_error	atacmds.h	/^  unsigned char extended_error[19];$/;"	m	struct:ata_smart_exterrlog_error
fCapabilities	os_win32.cpp	/^  DWORD fCapabilities;$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
facility	smartd.cpp	/^static int facility=LOG_DAEMON;$/;"	v	file:
fail	dev_interface.h	/^  void fail() const$/;"	f	class:any_device_auto_ptr
fail	knowndrives.cpp	/^void stdin_iterator::fail() const$/;"	f	class:stdin_iterator
failing_lba	atacmds.h	/^  unsigned char failing_lba[6];$/;"	m	struct:ata_smart_extselftestlog_desc
failure_type	smartctl.h	/^enum failure_type {$/;"	g
failuretest	smartctl.cpp	/^void failuretest(failure_type type, int returnvalue)$/;"	f
failuretest_conservative	smartctl.cpp	/^bool failuretest_conservative = false;$/;"	v
failuretest_permissive	smartctl.cpp	/^unsigned char failuretest_permissive = 0;$/;"	v
failuretest_permissive	smartd.cpp	/^unsigned char failuretest_permissive = 0;$/;"	v
fake_logdir	ataprint.cpp	/^const ata_smart_log_directory * fake_logdir(ata_smart_log_directory * logdir,$/;"	f
fastmap	regex/regex.h	/^  char *fastmap;$/;"	m	struct:re_pattern_buffer
fastmap_accurate	regex/regex.h	/^  unsigned fastmap_accurate : 1;$/;"	m	struct:re_pattern_buffer
fca	megaraid.h	/^    uint8_t      fca[16];$/;"	m	union:uioctl_t::__anon44
fcs	megaraid.h	/^    } __attribute__((packed)) fcs;$/;"	m	union:uioctl_t::__anon44	typeref:struct:uioctl_t::__anon44::__anon45
feature	os_freebsd.h	/^    u_int8_t	feature;$/;"	m	struct:__anon5
feature	os_freebsd.h	/^  unsigned char feature;$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
feature	os_linux.h	/^  task_ioreg_t feature;$/;"	m	struct:hd_drive_task_hdr
feature_code	atacmds.h	/^  unsigned short feature_code;      \/\/ 3 = Temperature logging interval$/;"	m	struct:ata_sct_feature_control_command
feature_mode	os_freebsd.h	/^    u_int8_t	feature_mode;$/;"	m	struct:__anon5
feature_number	os_qnxnto.h	/^		uchar_t		feature_number[2];$/;"	m	struct:_cdb::__anon75
features	dev_interface.h	/^  ata_register features;     \/\/ features         \/\/ features$/;"	m	struct:ata_in_regs
features	os_freebsd.h	/^	TW_UINT32	features;$/;"	m	struct:tw_cl_command_init_connect
features	os_freebsd.h	/^    u_int16_t	features;$/;"	m	struct:__anon9
features	os_linux.h	/^  unsigned short features;  \/\/ On return, contains ATA ERROR register$/;"	m	struct:TAG_TW_Passthru
features	os_qnxnto.h	/^		uchar_t		features;$/;"	m	struct:_ata_pass_thru
features	os_qnxnto.h	/^		uchar_t		features;$/;"	m	struct:_cdb::_ata_pass_thru
features_16	dev_interface.h	/^  ata_reg_alias_16 features_16;$/;"	m	struct:ata_in_regs_48bit
features_register	atacmds.h	/^  unsigned char features_register;$/;"	m	struct:ata_smart_exterrlog_command
features_register_hi	atacmds.h	/^  unsigned char features_register_hi;$/;"	m	struct:ata_smart_exterrlog_command
featuresreg	atacmds.h	/^  unsigned char featuresreg;$/;"	m	struct:ata_smart_errorlog_command_struct
fetch_number	regex/regcomp.c	/^fetch_number (input, token, syntax)$/;"	f	file:
fetch_token	regex/regcomp.c	/^fetch_token (input, syntax)$/;"	f	file:
find_areca_in_proc	os_linux.cpp	/^static int find_areca_in_proc()$/;"	f	namespace:os_linux
find_collation_sequence_value	regex/regexec.c	/^find_collation_sequence_value (mbs, mbs_len)$/;"	f	file:
find_failed_attr	ataprint.cpp	/^static int find_failed_attr(const ata_smart_values * data,$/;"	f	file:
find_msb	ataprint.cpp	/^static int find_msb(unsigned short word)$/;"	f	file:
find_subexp_node	regex/regexec.c	/^find_subexp_node (dfa, nodes, subexp_idx, fl_open)$/;"	f	file:
findstr	os_win32.cpp	/^static const char * findstr(const char * str, const char * sub)$/;"	f	namespace:os_win32
finish_device_scan	smartd.cpp	/^static void finish_device_scan(dev_config & cfg, dev_state & state)$/;"	f	file:
firmware_command	os_linux.h	/^  TW_Command    firmware_command;$/;"	m	struct:TAG_TW_New_Ioctl
firmware_command	os_linux.h	/^  TW_Command_Full_9000         firmware_command;$/;"	m	struct:TAG_TW_Ioctl_Apache
firmwarebug_defs	atacmds.h	/^  firmwarebug_defs()$/;"	f	class:firmwarebug_defs
firmwarebug_defs	atacmds.h	/^class firmwarebug_defs$/;"	c
firmwarebug_t	atacmds.h	/^enum firmwarebug_t {$/;"	g
firmwarebugs	ataprint.h	/^  firmwarebug_defs firmwarebugs; \/\/ -F options$/;"	m	struct:ata_print_options
firmwarebugs	smartd.cpp	/^  firmwarebug_defs firmwarebugs;          \/\/ -F directives from drivedb or smartd.conf$/;"	m	struct:dev_config	file:
firmwareregexp	knowndrives.h	/^  const char * firmwareregexp;$/;"	m	struct:drive_settings
first	os_win32/smartd_warning.cmd	/^for \/F "tokens=1*" %%a in ("%SMARTD_ADDRESS%") do (set first=%%a)$/;"	v
first	os_win32/smartd_warning.cmd	/^set first=$/;"	v
first	regex/regex_internal.h	/^  int first;$/;"	m	struct:bin_tree_t
first_nonopt	getopt/getopt.c	/^static int first_nonopt;$/;"	v	file:
firstsent	smartd.cpp	/^  time_t firstsent;\/\/ time first email was sent, as defined by time(2)$/;"	m	struct:mailinfo	file:
fix_exterrlog_lba	atacmds.cpp	/^static void fix_exterrlog_lba(ata_smart_exterrlog * log, unsigned nsectors)$/;"	f	file:
fix_exterrlog_lba_cmd	atacmds.cpp	/^static inline void fix_exterrlog_lba_cmd(T & cmd)$/;"	f	file:
fix_swapped_id	ataprint.h	/^  bool fix_swapped_id; \/\/ Fix swapped ID strings returned by some buggy drivers$/;"	m	struct:ata_print_options
fix_swapped_id	smartd.cpp	/^const bool fix_swapped_id = false;$/;"	v
fixsamsungerrorlog	atacmds.cpp	/^static void fixsamsungerrorlog(ata_smart_errorlog * data)$/;"	f	file:
fixsamsungerrorlog2	atacmds.cpp	/^static void fixsamsungerrorlog2(ata_smart_errorlog * data)$/;"	f	file:
fixsamsungselftestlog	atacmds.cpp	/^static void fixsamsungselftestlog(ata_smart_selftestlog * data)$/;"	f	file:
fixtzname	utility.cpp	/^static char * fixtzname(char * dest, int destsize, const char * src)$/;"	f	file:
flag	getopt/getopt.h	/^  int *flag;$/;"	m	struct:option
flag	regex/regex_internal.h	/^  int flag;$/;"	m	struct:re_backref_cache_entry
flags	aacraid.h	/^  uint32_t flags;              \/\/Interesting stuff I must say$/;"	m	struct:__anon141
flags	aacraid.h	/^  uint32_t flags;              \/\/Interesting stuff I must say$/;"	m	struct:__anon142
flags	atacmds.h	/^    unsigned flags; \/\/ ATTRFLAG_*$/;"	m	struct:ata_vendor_attr_defs::entry
flags	atacmds.h	/^  unsigned short     flags;$/;"	m	struct:ata_selective_self_test_log
flags	atacmds.h	/^  unsigned short flags; $/;"	m	struct:ata_smart_attribute
flags	linux_nvme_ioctl.h	/^	__u8	flags;$/;"	m	struct:nvme_passthru_cmd
flags	linux_nvme_ioctl.h	/^	__u8	flags;$/;"	m	struct:nvme_user_io
flags	megaraid.h	/^  u16 flags;         \/*10h *\/$/;"	m	struct:megasas_dcmd_frame
flags	megaraid.h	/^  u16 flags;         \/*10h *\/$/;"	m	struct:megasas_pthru_frame
flags	megaraid.h	/^  u16 flags;        \/*10h *\/$/;"	m	struct:megasas_header
flags	nvmecmds.h	/^  unsigned char   flags;$/;"	m	struct:smartmontools::nvme_id_power_state
flags	os_freebsd.h	/^	TW_UINT8	flags;$/;"	m	struct:tw_cl_command_download_firmware
flags	os_freebsd.h	/^	TW_UINT8	flags;$/;"	m	struct:tw_cl_command_generic
flags	os_freebsd.h	/^	TW_UINT8	flags;$/;"	m	struct:tw_cl_command_init_connect
flags	os_freebsd.h	/^	TW_UINT8	flags;$/;"	m	struct:tw_cl_command_param
flags	os_freebsd.h	/^	TW_UINT8	flags;$/;"	m	struct:tw_cl_command_reset_firmware
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon10
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon2
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon3
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon4
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon5
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon6
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon7
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon8
flags	os_freebsd.h	/^    u_int8_t	flags;$/;"	m	struct:__anon9
flags	os_linux.h	/^  unsigned char flags;$/;"	m	struct:TAG_TW_Passthru
flags	os_linux.h	/^  unsigned char flags;$/;"	m	struct:TW_Command
flags	os_linux.h	/^  unsigned char flags;$/;"	m	struct:TW_Command_9000
flags	os_qnxnto.h	/^		uchar_t		flags;$/;"	m	struct:_ata_pass_thru
flags	os_qnxnto.h	/^		uchar_t		flags;$/;"	m	struct:_cdb::__anon80
flags	os_qnxnto.h	/^		uchar_t		flags;$/;"	m	struct:_cdb::__anon81
flags	os_qnxnto.h	/^		uchar_t		flags;$/;"	m	struct:_cdb::_ata_pass_thru
flags	os_qnxnto.h	/^	uchar_t			flags;$/;"	m	struct:_ata_status_descriptor
flbas	nvmecmds.h	/^  unsigned char   flbas;$/;"	m	struct:smartmontools::nvme_id_ns
fmt_temp	smartd.cpp	/^static const char * fmt_temp(unsigned char x, char (& buf)[20])$/;"	f	file:
fna	nvmecmds.h	/^  unsigned char   fna;$/;"	m	struct:smartmontools::nvme_id_ctrl
force_flag	os_freebsd.h	/^	TW_UINT32	force_flag;$/;"	m	struct:tw_cl_lock_packet
format	atacmds.cpp	/^  ata_attr_raw_format format;$/;"	m	struct:format_name_entry	file:
format	os_qnxnto.h	/^		uchar_t		format;$/;"	m	struct:_cdb::__anon72
format	os_qnxnto.h	/^		uchar_t		format;$/;"	m	struct:_cdb::__anon91
format_capacity	utility.cpp	/^const char * format_capacity(char * str, int strsize, uint64_t val,$/;"	f
format_char_array	utility.cpp	/^const char * format_char_array(char * str, int strsize, const char * chr, int chrsize)$/;"	f
format_char_array	utility.h	/^inline const char * format_char_array(char (& str)[STRSIZE], const char (& chr)[CHRSIZE])$/;"	f
format_media	os_qnxnto.h	/^	} format_media;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon91
format_milliseconds	ataprint.cpp	/^static std::string format_milliseconds(unsigned msec)$/;"	f	file:
format_name_entry	atacmds.cpp	/^struct format_name_entry$/;"	s	file:
format_names	atacmds.cpp	/^const format_name_entry format_names[] = {$/;"	v
format_power	nvmeprint.cpp	/^static const char * format_power(char (& str)[16], unsigned power, unsigned scale)$/;"	f	file:
format_set_result_msg	smartd.cpp	/^static void format_set_result_msg(std::string & msg, const char * name, bool ok,$/;"	f	file:
format_st_er_desc	ataprint.cpp	/^static inline std::string format_st_er_desc($/;"	f	file:
format_st_er_desc	ataprint.cpp	/^static std::string format_st_er_desc($/;"	f	file:
format_unit	os_qnxnto.h	/^	} format_unit;$/;"	m	union:_cdb	typeref:struct:_cdb::_format_unit
format_unit_old	os_qnxnto.h	/^	} format_unit_old;$/;"	m	union:_cdb	typeref:struct:_cdb::_format_unit_old
format_usb_id	scsiata.cpp	/^static std::string format_usb_id(int vendor_id, int product_id, int version)$/;"	f	file:
format_version	atacmds.h	/^  unsigned short format_version;    \/\/ 0-1: Data table format version number (2)$/;"	m	struct:ata_sct_temperature_history_table
format_version	atacmds.h	/^  unsigned short format_version;    \/\/ 0-1: Status response format version number (2, 3)$/;"	m	struct:ata_sct_status_response
format_version_info	utility.cpp	/^std::string format_version_info(const char * prog_name, bool full \/*= false*\/)$/;"	f
format_with_thousands_sep	utility.cpp	/^const char * format_with_thousands_sep(char * str, int strsize, uint64_t val,$/;"	f
found	smartd.cpp	/^    unsigned char found;$/;"	m	struct:persistent_dev_state::scsi_error_counter_t	file:
found	smartd.cpp	/^    unsigned char found;$/;"	m	struct:persistent_dev_state::scsi_nonmedium_error_t	file:
fpi	nvmecmds.h	/^  unsigned char   fpi;$/;"	m	struct:smartmontools::nvme_id_ns
fr	nvmecmds.h	/^  char            fr[8];$/;"	m	struct:smartmontools::nvme_id_ctrl
frame	megaraid.h	/^  } frame;$/;"	m	struct:megasas_iocpacket	typeref:union:megasas_iocpacket::__anon47
free_bin_tree	regex/regcomp.c	/^free_bin_tree (tree)$/;"	f	file:
free_buf	utility.cpp	/^void regular_expression::free_buf()$/;"	f	class:regular_expression
free_charset	regex/regcomp.c	/^free_charset (re_charset_t *cset)$/;"	f	file:
free_devnames	dev_legacy.cpp	/^static void free_devnames(char * * devnames, int numdevs)$/;"	f	namespace:os
free_devnames	os_darwin.cpp	/^static void free_devnames(char * * devnames, int numdevs)$/;"	f	namespace:os
free_dfa_content	regex/regcomp.c	/^free_dfa_content (re_dfa_t *dfa)$/;"	f	file:
free_fail_stack_return	regex/regexec.c	/^free_fail_stack_return (fs)$/;"	f	file:
free_state	regex/regex_internal.c	/^free_state (state)$/;"	f	file:
free_workarea_compile	regex/regcomp.c	/^free_workarea_compile (preg)$/;"	f	file:
freebsd_areca_ata_device	os_freebsd.cpp	/^class freebsd_areca_ata_device$/;"	c	namespace:os_freebsd	file:
freebsd_areca_ata_device	os_freebsd.cpp	/^freebsd_areca_ata_device::freebsd_areca_ata_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:os_freebsd::freebsd_areca_ata_device
freebsd_areca_scsi_device	os_freebsd.cpp	/^class freebsd_areca_scsi_device$/;"	c	namespace:os_freebsd	file:
freebsd_areca_scsi_device	os_freebsd.cpp	/^freebsd_areca_scsi_device::freebsd_areca_scsi_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:os_freebsd::freebsd_areca_scsi_device
freebsd_ata_device	os_freebsd.cpp	/^class freebsd_ata_device$/;"	c	namespace:os_freebsd	file:
freebsd_ata_device	os_freebsd.cpp	/^freebsd_ata_device::freebsd_ata_device(smart_interface * intf, const char * dev_name, const char * req_type)$/;"	f	class:os_freebsd::freebsd_ata_device
freebsd_atacam_device	os_freebsd.cpp	/^  freebsd_atacam_device(smart_interface * intf, const char * dev_name, const char * req_type)$/;"	f	class:os_freebsd::freebsd_atacam_device
freebsd_atacam_device	os_freebsd.cpp	/^class freebsd_atacam_device : public freebsd_ata_device$/;"	c	namespace:os_freebsd	file:
freebsd_cciss_device	os_freebsd.cpp	/^class freebsd_cciss_device$/;"	c	namespace:os_freebsd	file:
freebsd_cciss_device	os_freebsd.cpp	/^freebsd_cciss_device::freebsd_cciss_device(smart_interface * intf,$/;"	f	class:os_freebsd::freebsd_cciss_device
freebsd_escalade_device	os_freebsd.cpp	/^class freebsd_escalade_device$/;"	c	namespace:os_freebsd	file:
freebsd_escalade_device	os_freebsd.cpp	/^freebsd_escalade_device::freebsd_escalade_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_freebsd::freebsd_escalade_device
freebsd_highpoint_device	os_freebsd.cpp	/^class freebsd_highpoint_device$/;"	c	namespace:os_freebsd	file:
freebsd_highpoint_device	os_freebsd.cpp	/^freebsd_highpoint_device::freebsd_highpoint_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_freebsd::freebsd_highpoint_device
freebsd_nvme_device	os_freebsd.cpp	/^class freebsd_nvme_device$/;"	c	namespace:os_freebsd	file:
freebsd_nvme_device	os_freebsd.cpp	/^freebsd_nvme_device::freebsd_nvme_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_freebsd::freebsd_nvme_device
freebsd_scsi_device	os_freebsd.cpp	/^class freebsd_scsi_device$/;"	c	namespace:os_freebsd	file:
freebsd_scsi_device	os_freebsd.cpp	/^freebsd_scsi_device::freebsd_scsi_device(smart_interface * intf,$/;"	f	class:os_freebsd::freebsd_scsi_device
freebsd_smart_device	os_freebsd.cpp	/^  explicit freebsd_smart_device()$/;"	f	class:os_freebsd::freebsd_smart_device
freebsd_smart_device	os_freebsd.cpp	/^class freebsd_smart_device$/;"	c	namespace:os_freebsd	file:
freebsd_smart_interface	os_freebsd.cpp	/^class freebsd_smart_interface$/;"	c	namespace:os_freebsd	file:
frmw	nvmecmds.h	/^  unsigned char   frmw;$/;"	m	struct:smartmontools::nvme_id_ctrl
fruc	os_qnxnto.h	/^	uchar_t		fruc;				\/\/ Field Replaceable Unit Code$/;"	m	struct:_scsi_sense
full_match	utility.h	/^  bool full_match(const char * str, int flags = 0) const$/;"	f	class:regular_expression
func_cl_dashL	compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	compile	/^func_cl_wrapper ()$/;"	f
func_file_conv	compile	/^func_file_conv ()$/;"	f
function	aacraid.h	/^  uint32_t function;           \/\/SRB_FUNCTION_EXECUTE_SCSI 0x00$/;"	m	struct:__anon141
function	aacraid.h	/^  uint32_t function;           \/\/SRB_FUNCTION_EXECUTE_SCSI 0x00$/;"	m	struct:__anon142
function_code	atacmds.h	/^  unsigned short function_code;     \/\/ 1 = Read Table$/;"	m	struct:ata_sct_data_table_command
function_code	atacmds.h	/^  unsigned short function_code;     \/\/ 1 = Set, 2 = Return$/;"	m	struct:ata_sct_error_recovery_control_command
function_code	atacmds.h	/^  unsigned short function_code;     \/\/ 1 = Set, 2 = Return, 3 = Return options$/;"	m	struct:ata_sct_feature_control_command
function_code	atacmds.h	/^  unsigned short function_code;     \/\/ 18-19: Function code of last SCT command$/;"	m	struct:ata_sct_status_response
fuse	freebsd_nvme_ioctl.h	/^	uint16_t fuse	:  2;	\/* fused operation *\/$/;"	m	struct:nvme_command
fuses	nvmecmds.h	/^  unsigned short  fuses;$/;"	m	struct:smartmontools::nvme_id_ctrl
fw_arch_id	os_freebsd.h	/^	TW_UINT16	fw_arch_id;$/;"	m	struct:tw_cl_command_init_connect
fw_branch	os_freebsd.h	/^	TW_UINT16	fw_branch;$/;"	m	struct:tw_cl_command_init_connect
fw_build	os_freebsd.h	/^	TW_UINT16	fw_build;$/;"	m	struct:tw_cl_command_init_connect
fw_rev	atacmds.h	/^  unsigned char  fw_rev[8];$/;"	m	struct:ata_identify_device
fw_srl	os_freebsd.h	/^	TW_UINT16	fw_srl;$/;"	m	struct:tw_cl_command_init_connect
gBackgroundResultsLPage	scsiprint.cpp	/^static int gBackgroundResultsLPage = 0;$/;"	v	file:
gBuf	scsiprint.cpp	/^UINT8 gBuf[GBUF_SIZE];$/;"	v
gIecMPage	scsiprint.cpp	/^static int gIecMPage = 1;     \/* N.B. assume it until we know otherwise *\/$/;"	v	file:
gLastNErrorLPage	scsiprint.cpp	/^static int gLastNErrorLPage = 0;$/;"	v	file:
gNonMediumELPage	scsiprint.cpp	/^static int gNonMediumELPage = 0;$/;"	v	file:
gProtocolSpecificLPage	scsiprint.cpp	/^static int gProtocolSpecificLPage = 0;$/;"	v	file:
gReadECounterLPage	scsiprint.cpp	/^static int gReadECounterLPage = 0;$/;"	v	file:
gSSMediaLPage	scsiprint.cpp	/^static int gSSMediaLPage = 0;$/;"	v	file:
gSeagateCacheLPage	scsiprint.cpp	/^static int gSeagateCacheLPage = 0;$/;"	v	file:
gSeagateFactoryLPage	scsiprint.cpp	/^static int gSeagateFactoryLPage = 0;$/;"	v	file:
gSelfTestLPage	scsiprint.cpp	/^static int gSelfTestLPage = 0;$/;"	v	file:
gSmartLPage	scsiprint.cpp	/^static int gSmartLPage = 0;     \/* Informational Exceptions log page *\/$/;"	v	file:
gStartStopLPage	scsiprint.cpp	/^static int gStartStopLPage = 0;$/;"	v	file:
gTapeAlertsLPage	scsiprint.cpp	/^static int gTapeAlertsLPage = 0;$/;"	v	file:
gTempLPage	scsiprint.cpp	/^static int gTempLPage = 0;$/;"	v	file:
gVerifyECounterLPage	scsiprint.cpp	/^static int gVerifyECounterLPage = 0;$/;"	v	file:
gWriteECounterLPage	scsiprint.cpp	/^static int gWriteECounterLPage = 0;$/;"	v	file:
gcc_have_attr_packed	Makefile	/^gcc_have_attr_packed = yes$/;"	m
gen10	os_qnxnto.h	/^	} gen10;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon54
gen12	os_qnxnto.h	/^	} gen12;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon55
gen6	os_qnxnto.h	/^	} gen6;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon53
generic	os_freebsd.h	/^	struct tw_cl_command_generic		generic;$/;"	m	union:tw_cl_command_7k	typeref:struct:tw_cl_command_7k::tw_cl_command_generic
generic	os_freebsd.h	/^    TWE_Command_Generic		generic;$/;"	m	union:__anon11
generic	os_generic.cpp	/^namespace generic { \/\/ No need to publish anything, name provided for Doxygen$/;"	n	file:
generic_areca_device	dev_areca.cpp	/^generic_areca_device::generic_areca_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:generic_areca_device
generic_areca_device	dev_areca.h	/^  generic_areca_device()$/;"	f	class:generic_areca_device
generic_areca_device	dev_areca.h	/^class generic_areca_device :$/;"	c
generic_smart_interface	os_generic.cpp	/^class generic_smart_interface$/;"	c	namespace:generic	file:
get	dev_interface.h	/^  device_type * get() const$/;"	f	class:any_device_auto_ptr
get	knowndrives.cpp	/^void stdin_iterator::get()$/;"	f	class:stdin_iterator
get	os_win32/wmiquery.h	/^  T * get()$/;"	f	class:com_intf_ptr
get_aam	ataprint.h	/^  bool get_aam; \/\/ print Automatic Acoustic Management status$/;"	m	struct:ata_print_options
get_apm	ataprint.h	/^  bool get_apm; \/\/ print Advanced Power Management status$/;"	m	struct:ata_print_options
get_app_examples	dev_interface.cpp	/^std::string smart_interface::get_app_examples(const char * \/*appname*\/)$/;"	f	class:smart_interface
get_app_examples	dev_legacy.cpp	/^std::string legacy_smart_interface::get_app_examples(const char * appname)$/;"	f	class:os::legacy_smart_interface
get_app_examples	os_darwin.cpp	/^std::string darwin_smart_interface::get_app_examples(const char * appname)$/;"	f	class:os::darwin_smart_interface
get_app_examples	os_freebsd.cpp	/^std::string freebsd_smart_interface::get_app_examples(const char * appname)$/;"	f	class:os_freebsd::freebsd_smart_interface
get_app_examples	os_generic.cpp	/^std::string generic_smart_interface::get_app_examples(const char * appname)$/;"	f	class:generic::generic_smart_interface
get_app_examples	os_linux.cpp	/^std::string linux_smart_interface::get_app_examples(const char * appname)$/;"	f	class:os_linux::linux_smart_interface
get_app_examples	os_win32.cpp	/^std::string win_smart_interface::get_app_examples(const char * appname)$/;"	f	class:os_win32::win_smart_interface
get_ata_device	dev_legacy.cpp	/^ata_device * legacy_smart_interface::get_ata_device(const char * name, const char * type)$/;"	f	class:os::legacy_smart_interface
get_ata_device	os_darwin.cpp	/^ata_device * darwin_smart_interface::get_ata_device(const char * name, const char * type)$/;"	f	class:os::darwin_smart_interface
get_ata_device	os_freebsd.cpp	/^ata_device * freebsd_smart_interface::get_ata_device(const char * name, const char * type)$/;"	f	class:os_freebsd::freebsd_smart_interface
get_ata_device	os_generic.cpp	/^ata_device * generic_smart_interface::get_ata_device(const char * name, const char * type)$/;"	f	class:generic::generic_smart_interface
get_ata_device	os_linux.cpp	/^ata_device * linux_smart_interface::get_ata_device(const char * name, const char * type)$/;"	f	class:os_linux::linux_smart_interface
get_ata_device	os_win32.cpp	/^ata_device * win_smart_interface::get_ata_device(const char * name, const char * type)$/;"	f	class:os_win32::win_smart_interface
get_ata_major_version	ataprint.cpp	/^static const char * get_ata_major_version(const ata_identify_device * drive)$/;"	f	file:
get_ata_minor_version	ataprint.cpp	/^static const char * get_ata_minor_version(const ata_identify_device * drive)$/;"	f	file:
get_atacam_device	os_freebsd.cpp	/^ata_device * freebsd_smart_interface::get_atacam_device(const char * name, const char * type)$/;"	f	class:os_freebsd::freebsd_smart_interface
get_clipboard	os_win32.cpp	/^static int get_clipboard(char * data, int datasize)$/;"	f	namespace:os_win32
get_configuration	os_qnxnto.h	/^	} get_configuration;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon75
get_controller_type	os_win32.cpp	/^static win_dev_type get_controller_type(HANDLE hdevice, bool admin, GETVERSIONINPARAMS_EX * ata_version_ex)$/;"	f	namespace:os_win32
get_controller_type	os_win32.cpp	/^static win_dev_type get_controller_type(const char * path, GETVERSIONINPARAMS_EX * ata_version_ex = 0)$/;"	f	namespace:os_win32
get_custom_smart_device	dev_interface.cpp	/^smart_device * smart_interface::get_custom_smart_device(const char * \/*name*\/, const char * \/*type*\/)$/;"	f	class:smart_interface
get_custom_smart_device	os_freebsd.cpp	/^smart_device * freebsd_smart_interface::get_custom_smart_device(const char * name, const char * type)$/;"	f	class:os_freebsd::freebsd_smart_interface
get_custom_smart_device	os_generic.cpp	/^smart_device * generic_smart_interface::get_custom_smart_device(const char * name, const char * type)$/;"	f	class:generic::generic_smart_interface
get_custom_smart_device	os_linux.cpp	/^smart_device * linux_smart_interface::get_custom_smart_device(const char * name, const char * type)$/;"	f	class:os_linux::linux_smart_interface
get_custom_smart_device	os_win32.cpp	/^smart_device * win_smart_interface::get_custom_smart_device(const char * name, const char * type)$/;"	f	class:os_win32::win_smart_interface
get_dbentry_type	knowndrives.cpp	/^static inline dbentry_type get_dbentry_type(const drive_settings * dbentry)$/;"	f	file:
get_default_attr_defs	knowndrives.cpp	/^const ata_vendor_attr_defs & get_default_attr_defs()$/;"	f
get_dev_list	os_linux.cpp	/^bool linux_smart_interface::get_dev_list(smart_device_list & devlist,$/;"	f	class:os_linux::linux_smart_interface
get_dev_megasas	os_linux.cpp	/^bool linux_smart_interface::get_dev_megasas(smart_device_list & devlist)$/;"	f	class:os_linux::linux_smart_interface
get_dev_name	dev_interface.h	/^  const char * get_dev_name() const$/;"	f	class:smart_device
get_dev_names	os_netbsd.cpp	/^get_dev_names(char ***names, const char *prefix)$/;"	f
get_dev_names	os_openbsd.cpp	/^get_dev_names(char ***names, const char *prefix)$/;"	f
get_dev_names_ata	os_freebsd.cpp	/^int get_dev_names_ata(char*** names) {$/;"	f	namespace:os_freebsd
get_dev_names_cam	os_freebsd.cpp	/^bool get_dev_names_cam(std::vector<std::string> & names, bool show_all)$/;"	f	namespace:os_freebsd
get_dev_type	dev_interface.h	/^  const char * get_dev_type() const$/;"	f	class:smart_device
get_dev_type	os_win32.cpp	/^static win_dev_type get_dev_type(const char * name, int & phydrive, int & logdrive)$/;"	f	namespace:os_win32
get_device_power_state	os_win32.cpp	/^static int get_device_power_state(HANDLE hdevice)$/;"	f	namespace:os_win32
get_device_statistics_page_name	ataprint.cpp	/^static const char * get_device_statistics_page_name(int page)$/;"	f	file:
get_disknum	dev_areca.h	/^  int get_disknum()$/;"	f	class:generic_areca_device
get_drivedb_path_add	knowndrives.cpp	/^const char * get_drivedb_path_add()$/;"	f
get_drivedb_path_default	knowndrives.cpp	/^const char * get_drivedb_path_default()$/;"	f
get_encnum	dev_areca.h	/^  int get_encnum()$/;"	f	class:generic_areca_device
get_err	dev_interface.h	/^  const error_info & get_err() const$/;"	f	class:smart_device
get_err	dev_interface.h	/^  const smart_device::error_info & get_err() const$/;"	f	class:smart_interface
get_errmsg	dev_interface.h	/^  const char * get_errmsg() const$/;"	f	class:smart_device
get_errmsg	dev_interface.h	/^  const char * get_errmsg() const$/;"	f	class:smart_interface
get_errmsg	utility.h	/^  const char * get_errmsg() const$/;"	f	class:regular_expression
get_errno	dev_interface.h	/^  int get_errno() const$/;"	f	class:smart_device
get_errno	dev_interface.h	/^  int get_errno() const$/;"	f	class:smart_interface
get_error_log_state_desc	ataprint.cpp	/^static const char * get_error_log_state_desc(unsigned state)$/;"	f	file:
get_event	os_qnxnto.h	/^	} get_event;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon76
get_exe_dir	os_win32.cpp	/^std::string get_exe_dir()$/;"	f
get_fd	dev_legacy.cpp	/^  int get_fd() const$/;"	f	class:os::legacy_smart_device
get_fd	os_darwin.cpp	/^  int get_fd() const$/;"	f	class:os::darwin_smart_device
get_fd	os_freebsd.cpp	/^  int get_fd() const$/;"	f	class:os_freebsd::freebsd_smart_device
get_fd	os_linux.cpp	/^  int get_fd() const$/;"	f	class:os_linux::linux_smart_device
get_fh	os_win32.cpp	/^  HANDLE get_fh() const$/;"	f	class:os_win32::win_smart_device
get_form_factor	ataprint.cpp	/^static const char * get_form_factor(unsigned short word168)$/;"	f	file:
get_identify_from_device_property	os_win32.cpp	/^static int get_identify_from_device_property(HANDLE hdevice, ata_identify_device * id)$/;"	f	namespace:os_win32
get_info	dev_interface.h	/^  const device_info & get_info() const$/;"	f	class:smart_device
get_info_name	dev_interface.h	/^  const char * get_info_name() const$/;"	f	class:smart_device
get_kernel_release	os_linux.cpp	/^static unsigned get_kernel_release()$/;"	f	namespace:os_linux
get_log_drive_type	os_win32.cpp	/^static win_dev_type get_log_drive_type(int drive)$/;"	f	namespace:os_win32
get_log_rw	ataprint.cpp	/^static const char * get_log_rw(unsigned logaddr)$/;"	f	file:
get_lookahead	ataprint.h	/^  bool get_lookahead; \/\/ print read look-ahead status$/;"	m	struct:ata_print_options
get_modelfamily_type	knowndrives.cpp	/^static dbentry_type get_modelfamily_type(const char * modelfamily)$/;"	f	file:
get_msg_for_errno	dev_interface.cpp	/^const char * smart_interface::get_msg_for_errno(int no)$/;"	f	class:smart_interface
get_nsid	dev_interface.h	/^  unsigned get_nsid() const$/;"	f	class:nvme_device
get_num_objects	dev_interface.h	/^  static int get_num_objects()$/;"	f	class:smart_device
get_nvme_device	dev_interface.cpp	/^nvme_device * smart_interface::get_nvme_device(const char * \/*name*\/, const char * \/*type*\/, unsigned \/*nsid*\/)$/;"	f	class:smart_interface
get_nvme_device	os_freebsd.cpp	/^nvme_device * freebsd_smart_interface::get_nvme_device(const char * name, const char * type,$/;"	f	class:os_freebsd::freebsd_smart_interface
get_nvme_device	os_linux.cpp	/^nvme_device * linux_smart_interface::get_nvme_device(const char * name, const char * type,$/;"	f	class:os_linux::linux_smart_interface
get_nvme_device	os_win32.cpp	/^nvme_device * win_smart_interface::get_nvme_device(const char * name, const char * type,$/;"	f	class:os_win32::win_smart_interface
get_os_version_str	dev_interface.cpp	/^std::string smart_interface::get_os_version_str()$/;"	f	class:smart_interface
get_os_version_str	os_darwin.cpp	/^std::string darwin_smart_interface::get_os_version_str()$/;"	f	class:os::darwin_smart_interface
get_os_version_str	os_freebsd.cpp	/^std::string freebsd_smart_interface::get_os_version_str()$/;"	f	class:os_freebsd::freebsd_smart_interface
get_os_version_str	os_generic.cpp	/^const char * generic_smart_interface::get_os_version_str()$/;"	f	class:generic::generic_smart_interface
get_os_version_str	os_linux.cpp	/^std::string linux_smart_interface::get_os_version_str()$/;"	f	class:os_linux::linux_smart_interface
get_os_version_str	os_win32.cpp	/^std::string win_smart_interface::get_os_version_str()$/;"	f	class:os_win32::win_smart_interface
get_parsed_ata_device	atacmds.cpp	/^ata_device * get_parsed_ata_device(smart_interface * intf, const char * dev_name)$/;"	f
get_pata_version	ataprint.cpp	/^static const char * get_pata_version(unsigned short word222, char (& buf)[32])$/;"	f	file:
get_pattern	utility.h	/^  const char * get_pattern() const$/;"	f	class:regular_expression
get_phy_drive_type	os_win32.cpp	/^static win_dev_type get_phy_drive_type(int drive)$/;"	f	namespace:os_win32
get_phy_drive_type	os_win32.cpp	/^static win_dev_type get_phy_drive_type(int drive, GETVERSIONINPARAMS_EX * ata_version_ex)$/;"	f	namespace:os_win32
get_phy_ent	os_win32.cpp	/^  const CSMI_SAS_PHY_ENTITY & get_phy_ent() const$/;"	f	class:os_win32::csmi_device
get_phy_info	os_win32.cpp	/^bool csmi_device::get_phy_info(CSMI_SAS_PHY_INFO & phy_info)$/;"	f	class:os_win32::csmi_device
get_ports_used	os_win32.cpp	/^unsigned csmi_device::get_ports_used()$/;"	f	class:os_win32::csmi_device
get_protocol_info	smartctl.cpp	/^static const char * get_protocol_info(const smart_device * dev)$/;"	f	file:
get_rcd	scsiprint.h	/^  bool get_wce, get_rcd;$/;"	m	struct:scsi_print_options
get_registers	scsiata.cpp	/^bool usbjmicron_device::get_registers(unsigned short addr,$/;"	f	class:sat::usbjmicron_device
get_req_type	dev_interface.h	/^  const char * get_req_type() const$/;"	f	class:smart_device
get_sat_device	scsiata.cpp	/^ata_device * smart_interface::get_sat_device(const char * type, scsi_device * scsidev)$/;"	f	class:smart_interface
get_sata_curspeed	ataprint.cpp	/^static const char * get_sata_curspeed(const ata_identify_device * drive)$/;"	f	file:
get_sata_maxspeed	ataprint.cpp	/^static const char * get_sata_maxspeed(const ata_identify_device * drive)$/;"	f	file:
get_sata_speed	ataprint.cpp	/^static const char * get_sata_speed(int level)$/;"	f	file:
get_sata_version	ataprint.cpp	/^static const char * get_sata_version(unsigned short word222, char (& buf)[32])$/;"	f	file:
get_scsi_device	dev_legacy.cpp	/^scsi_device * legacy_smart_interface::get_scsi_device(const char * name, const char * type)$/;"	f	class:os::legacy_smart_interface
get_scsi_device	os_darwin.cpp	/^scsi_device * darwin_smart_interface::get_scsi_device(const char *, const char *)$/;"	f	class:os::darwin_smart_interface
get_scsi_device	os_freebsd.cpp	/^scsi_device * freebsd_smart_interface::get_scsi_device(const char * name, const char * type)$/;"	f	class:os_freebsd::freebsd_smart_interface
get_scsi_device	os_generic.cpp	/^scsi_device * generic_smart_interface::get_scsi_device(const char * name, const char * type)$/;"	f	class:generic::generic_smart_interface
get_scsi_device	os_linux.cpp	/^scsi_device * linux_smart_interface::get_scsi_device(const char * name, const char * type)$/;"	f	class:os_linux::linux_smart_interface
get_scsi_device	os_win32.cpp	/^scsi_device * win_smart_interface::get_scsi_device(const char * name, const char * type)$/;"	f	class:os_win32::win_smart_interface
get_security	ataprint.h	/^  bool get_security; \/\/ print ATA security status$/;"	m	struct:ata_print_options
get_serial_from_wmi	os_win32.cpp	/^static bool get_serial_from_wmi(int drive, ata_identify_device * id)$/;"	f	namespace:os_win32
get_set_used	ataprint.h	/^  bool get_set_used; \/\/ true if any get\/set command is used$/;"	m	struct:ata_print_options
get_smart_device	dev_interface.cpp	/^smart_device * smart_interface::get_smart_device(const char * name, const char * type)$/;"	f	class:smart_interface
get_str	os_win32/wmiquery.cpp	/^std::string wbem_object::get_str(const char * name) \/*const*\/$/;"	f	class:wbem_object
get_subexp	regex/regexec.c	/^get_subexp (preg, mctx, bkref_node, bkref_str_idx)$/;"	f	file:
get_subexp_sub	regex/regexec.c	/^get_subexp_sub (preg, mctx, sub_top, sub_last, bkref_node, bkref_str)$/;"	f	file:
get_timer_usec	dev_interface.cpp	/^int64_t smart_interface::get_timer_usec()$/;"	f	class:smart_interface
get_timer_usec	os_win32.cpp	/^int64_t win_smart_interface::get_timer_usec()$/;"	f	class:os_win32::win_smart_interface
get_token	knowndrives.cpp	/^static parse_ptr get_token(parse_ptr src, token_info & token, const char * path, int & line)$/;"	f	file:
get_tunnel_dev	dev_tunnelled.h	/^  const tunnel_device_type * get_tunnel_dev() const$/;"	f	class:tunnelled_device
get_tunnel_dev	dev_tunnelled.h	/^  tunnel_device_type * get_tunnel_dev()$/;"	f	class:tunnelled_device
get_unc_attr_id	atacmds.cpp	/^unsigned char get_unc_attr_id(bool offline, const ata_vendor_attr_defs & defs,$/;"	f
get_usb_dev_type_by_id	scsiata.cpp	/^const char * smart_interface::get_usb_dev_type_by_id(int vendor_id, int product_id,$/;"	f	class:smart_interface
get_usb_device	os_win32.cpp	/^ata_device * win_smart_interface::get_usb_device(const char * name,$/;"	f	class:os_win32::win_smart_interface
get_usb_id	os_linux.cpp	/^static bool get_usb_id(const char * name, unsigned short & vendor_id,$/;"	f	namespace:os_linux
get_usb_id	os_win32.cpp	/^static bool get_usb_id(int phydrive, int logdrive,$/;"	f	namespace:os_win32
get_valid_custom_dev_types_str	dev_interface.cpp	/^std::string smart_interface::get_valid_custom_dev_types_str()$/;"	f	class:smart_interface
get_valid_custom_dev_types_str	os_freebsd.cpp	/^std::string freebsd_smart_interface::get_valid_custom_dev_types_str()$/;"	f	class:os_freebsd::freebsd_smart_interface
get_valid_custom_dev_types_str	os_generic.cpp	/^std::string generic_smart_interface::get_valid_custom_dev_types_str()$/;"	f	class:generic::generic_smart_interface
get_valid_custom_dev_types_str	os_linux.cpp	/^std::string linux_smart_interface::get_valid_custom_dev_types_str()$/;"	f	class:os_linux::linux_smart_interface
get_valid_custom_dev_types_str	os_win32.cpp	/^std::string win_smart_interface::get_valid_custom_dev_types_str()$/;"	f	class:os_win32::win_smart_interface
get_valid_dev_types_str	dev_interface.cpp	/^std::string smart_interface::get_valid_dev_types_str()$/;"	f	class:smart_interface
get_valid_firmwarebug_args	atacmds.cpp	/^const char * get_valid_firmwarebug_args()$/;"	f
get_wcache	ataprint.h	/^  bool get_wcache; \/\/ print write cache status$/;"	m	struct:ata_print_options
get_wce	scsiprint.h	/^  bool get_wce, get_rcd;$/;"	m	struct:scsi_print_options
get_word	ataidentify.cpp	/^static inline unsigned short get_word(const void * id, int word)$/;"	f	file:
getopt	getopt/getopt.c	/^getopt (argc, argv, optstring)$/;"	f
getopt_long	getopt/getopt1.c	/^getopt_long (argc, argv, options, long_options, opt_index)$/;"	f
getopt_long_only	getopt/getopt1.c	/^getopt_long_only (argc, argv, options, long_options, opt_index)$/;"	f
gettext	regex/regex_internal.h	63;"	d
gettext	regex/regex_internal.h	64;"	d
gettext	regex/regex_internal.h	68;"	d
gettext_noop	regex/regex_internal.h	74;"	d
getvalidarglist	smartctl.cpp	/^static std::string getvalidarglist(int opt)$/;"	f	file:
give_advice	missing	/^give_advice ()$/;"	f
gotChangeable	scsicmds.h	/^    UINT8 gotChangeable;$/;"	m	struct:scsi_iec_mode_page
gotCurrent	scsicmds.h	/^    UINT8 gotCurrent;$/;"	m	struct:scsi_iec_mode_page
gotExtraPC	scsicmds.h	/^    UINT8 gotExtraPC;$/;"	m	struct:scsiErrorCounter
gotExtraPC	scsicmds.h	/^    UINT8 gotExtraPC;$/;"	m	struct:scsiNonMediumError
gotPC	scsicmds.h	/^    UINT8 gotPC[7];$/;"	m	struct:scsiErrorCounter
gotPC0	scsicmds.h	/^    UINT8 gotPC0;$/;"	m	struct:scsiNonMediumError
gotPE_H	scsicmds.h	/^    UINT8 gotPE_H;$/;"	m	struct:scsiNonMediumError
gotTFE_H	scsicmds.h	/^    UINT8 gotTFE_H;$/;"	m	struct:scsiNonMediumError
gp_logdir	ataprint.h	/^  bool gp_logdir, smart_logdir;$/;"	m	struct:ata_print_options
gpl	ataprint.h	/^  bool gpl; \/\/ false: SMART, true: GP$/;"	m	struct:ata_log_request
grokdir	os_solaris.cpp	/^grokdir(const char *dir, struct pathlist *res, int testfun(const char *))$/;"	f	file:
group_nodes_into_DFAstates	regex/regexec.c	/^group_nodes_into_DFAstates (preg, state, dests_node, dests_ch)$/;"	f	file:
guess_device_type	os_netbsd.cpp	/^guess_device_type(const char *dev_name)$/;"	f
guess_device_type	os_openbsd.cpp	/^guess_device_type(const char *dev_name)$/;"	f
guess_device_type	os_qnxnto.cpp	/^int guess_device_type (const char* dev_name)$/;"	f
guess_device_type	os_solaris.cpp	/^int guess_device_type (const char* dev_name) {$/;"	f
halt	regex/regex_internal.h	/^  unsigned int halt : 1;$/;"	m	struct:re_dfastate_t
has_arg	getopt/getopt.h	/^  int has_arg;$/;"	m	struct:option
has_backref	regex/regex_internal.h	/^  unsigned int has_backref : 1;$/;"	m	struct:re_dfastate_t
has_constraint	regex/regex_internal.h	/^  unsigned int has_constraint : 1;$/;"	m	struct:re_dfastate_t
has_mb_node	regex/regex_internal.h	/^  unsigned int has_mb_node : 1;$/;"	m	struct:re_dfa_t
has_plural_match	regex/regex_internal.h	/^  unsigned int has_plural_match : 1;$/;"	m	struct:re_dfa_t
has_sat_pass_through	scsiata.cpp	/^static bool has_sat_pass_through(ata_device * dev, bool packet_interface = false)$/;"	f	file:
hash	regex/regex_internal.h	/^  unsigned int hash;$/;"	m	struct:re_dfastate_t
hcyl	os_linux.h	/^    unsigned hcyl		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
hcyl_hob	os_linux.h	/^    unsigned hcyl_hob		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
hd_drive_task_hdr	os_linux.h	/^typedef struct hd_drive_task_hdr {$/;"	s
hda_temp	atacmds.h	/^  signed char hda_temp;             \/\/ 200: Current temperature in Celsius (0x80 = invalid)$/;"	m	struct:ata_sct_status_response
hdr	megaraid.h	/^    struct megasas_header hdr;$/;"	m	union:megasas_iocpacket::__anon47	typeref:struct:megasas_iocpacket::__anon47::megasas_header
header	os_linux.h	/^  TW_Command_Apache_Header header;$/;"	m	struct:TAG_TW_Command_Full_9000
header_desc	os_freebsd.h	/^	} header_desc;$/;"	m	struct:tw_cl_command_header	typeref:struct:tw_cl_command_header::__anon15
hi32	aacraid.h	/^  uint32_t hi32;$/;"	m	struct:__anon135
hide_ata	dev_interface.h	/^  void hide_ata(bool hide = true)$/;"	f	class:ata_device
hide_nvme	dev_interface.h	/^  void hide_nvme(bool hide = true)$/;"	f	class:nvme_device
hide_scsi	dev_interface.h	/^  void hide_scsi(bool hide = true)$/;"	f	class:scsi_device
high_cylinder	os_linux.h	/^  task_ioreg_t high_cylinder;$/;"	m	struct:hd_drive_task_hdr
hmmin	nvmecmds.h	/^  unsigned int    hmmin;$/;"	m	struct:smartmontools::nvme_id_ctrl
hmpre	nvmecmds.h	/^  unsigned int    hmpre;$/;"	m	struct:smartmontools::nvme_id_ctrl
hob_ports	os_linux.h	/^  task_ioreg_t	   hob_ports[8];$/;"	m	struct:ide_task_request_s
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_id	os_freebsd.h	/^    u_int8_t	host_id:4;$/;"	m	struct:__anon10
host_id	os_freebsd.h	/^    u_int8_t	host_id:4;$/;"	m	struct:__anon2
host_id	os_freebsd.h	/^    u_int8_t	host_id:4;$/;"	m	struct:__anon3
host_id	os_freebsd.h	/^    u_int8_t	host_id:4;$/;"	m	struct:__anon4
host_id	os_freebsd.h	/^    u_int8_t	host_id:4;$/;"	m	struct:__anon5
host_id	os_freebsd.h	/^    u_int8_t	host_id:4;$/;"	m	struct:__anon7
host_id	os_freebsd.h	/^    u_int8_t	host_id:4;$/;"	m	struct:__anon8
host_id	os_linux.h	/^    unsigned char host_id:4;$/;"	m	struct:TW_Command::__anon33
host_id	os_linux.h	/^    unsigned char host_id:4;$/;"	m	struct:TW_Command_9000::__anon21
host_id__unit	os_freebsd.h	/^	TW_UINT8	host_id__unit;	\/* 4:4 *\/$/;"	m	struct:tw_cl_command_generic
host_id__unit	os_freebsd.h	/^	TW_UINT8	host_id__unit;	\/* 4:4 *\/$/;"	m	struct:tw_cl_command_param
host_no	megaraid.h	/^  u16 host_no;$/;"	m	struct:megasas_iocpacket
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_reads	nvmecmds.h	/^  unsigned char  host_reads[16];$/;"	m	struct:smartmontools::nvme_smart_log
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
host_writes	nvmecmds.h	/^  unsigned char  host_writes[16];$/;"	m	struct:smartmontools::nvme_smart_log
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
icase	regex/regex_internal.h	/^  unsigned int icase : 1;$/;"	m	struct:re_string_t
id	aacraid.h	/^  uint32_t id;                 \/\/use the ID number this is wrong$/;"	m	struct:__anon141
id	aacraid.h	/^  uint32_t id;                 \/\/use the ID number this is wrong$/;"	m	struct:__anon142
id	atacmds.h	/^  unsigned char id;$/;"	m	struct:ata_smart_attribute
id	atacmds.h	/^  unsigned char id;$/;"	m	struct:ata_smart_threshold_entry
id	os_freebsd.h	/^  unsigned int id;          \/* disk ID *\/$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
id	os_qnxnto.h	/^  int  id;$/;"	m	struct:_drive_attribute
id	smartd.cpp	/^    unsigned char id;$/;"	m	struct:persistent_dev_state::ata_attribute	file:
ide_pass_through_ioctl	os_win32.cpp	/^static int ide_pass_through_ioctl(HANDLE hdevice, IDEREGS * regs, char * data, unsigned datasize)$/;"	f	namespace:os_win32
ide_reg_valid_s	os_linux.h	/^typedef union ide_reg_valid_s {$/;"	u
ide_reg_valid_t	os_linux.h	/^} ide_reg_valid_t;$/;"	t	typeref:union:ide_reg_valid_s
ide_task_request_s	os_linux.h	/^typedef struct ide_task_request_s {$/;"	s
ide_task_request_t	os_linux.h	/^} ide_task_request_t;$/;"	t	typeref:struct:ide_task_request_s
identify_bit_level	ataprint.h	/^  int identify_word_level, identify_bit_level;$/;"	m	struct:ata_print_options
identify_descriptions	ataidentify.cpp	/^const char * const identify_descriptions[] = {$/;"	v
identify_word_level	ataprint.h	/^  int identify_word_level, identify_bit_level;$/;"	m	struct:ata_print_options
idle_power	nvmecmds.h	/^  unsigned short  idle_power;$/;"	m	struct:smartmontools::nvme_id_power_state
idle_scale	nvmecmds.h	/^  unsigned char   idle_scale;$/;"	m	struct:smartmontools::nvme_id_power_state
idx	regex/regex_internal.h	/^     int idx;$/;"	v
idx	regex/regex_internal.h	/^    int idx;			\/* for BACK_REF *\/$/;"	m	union:__anon119::__anon120
idx	regex/regex_internal.h	/^  int idx;$/;"	m	struct:re_fail_stack_ent_t
ieee	nvmecmds.h	/^  unsigned char   ieee[3];$/;"	m	struct:smartmontools::nvme_id_ctrl
ignore	smartd.cpp	/^  bool ignore;                            \/\/ Ignore this entry$/;"	m	struct:dev_config	file:
ignore_presets	ataprint.h	/^  bool ignore_presets; \/\/ Ignore presets from drive database$/;"	m	struct:ata_print_options
ignorepresets	smartd.cpp	/^  bool ignorepresets;                     \/\/ Ignore database of -v options$/;"	m	struct:dev_config	file:
in	os_freebsd.h	/^  void* in;               \/* input data buffer *\/$/;"	m	struct:_HPT_IOCTL_PARAM
in_flags	os_linux.h	/^  ide_reg_valid_t  in_flags;$/;"	m	struct:ide_task_request_s
in_regs	dev_interface.h	/^  ata_in_regs_48bit in_regs;  \/\/\/< Input registers$/;"	m	struct:ata_cmd_in
in_size	os_freebsd.h	/^  unsigned int in_size;   \/* size of input data buffer *\/$/;"	m	struct:_HPT_IOCTL_PARAM
in_size	os_linux.h	/^  unsigned long	   in_size;$/;"	m	struct:ide_task_request_s
inbufsize	os_linux.cpp	/^    int inbufsize;$/;"	m	struct:os_linux::linux_ioctl_send_command	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
info	os_qnxnto.h	/^	uchar_t		info[4];			\/\/ Information (32bit big-endian value)$/;"	m	struct:_scsi_sense
info_name	dev_interface.h	/^    std::string info_name; \/\/\/< Informal name$/;"	m	struct:smart_device::device_info
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infofound	ataprint.cpp	/^static const char * infofound(const char *output) {$/;"	f	file:
init	dev_legacy.cpp	/^void smart_interface::init()$/;"	f	class:smart_interface
init	os_darwin.cpp	/^void smart_interface::init()$/;"	f	class:smart_interface
init	os_freebsd.cpp	/^void smart_interface::init()$/;"	f	class:smart_interface
init	os_generic.cpp	/^void smart_interface::init()$/;"	f	class:smart_interface
init	os_linux.cpp	/^void smart_interface::init()$/;"	f	class:smart_interface
init	os_win32.cpp	/^void smart_interface::init()$/;"	f	class:smart_interface
init_connect	os_freebsd.h	/^	struct tw_cl_command_init_connect	init_connect;$/;"	m	union:tw_cl_command_7k	typeref:struct:tw_cl_command_7k::tw_cl_command_init_connect
init_connection	os_linux.h	/^    } init_connection;$/;"	m	union:TW_Command::__anon35	typeref:struct:TW_Command::__anon35::__anon38
init_connection	os_linux.h	/^    } init_connection;$/;"	m	union:TW_Command_9000::__anon23	typeref:struct:TW_Command_9000::__anon23::__anon26
init_default_attr_defs	knowndrives.cpp	/^static bool init_default_attr_defs()$/;"	f	file:
init_dfa	regex/regcomp.c	/^init_dfa (dfa, pat_len)$/;"	f	file:
init_disable_standby_check	smartd.cpp	/^static void init_disable_standby_check(dev_config_vector & configs)$/;"	f	file:
init_drive_database	knowndrives.cpp	/^bool init_drive_database(bool use_default_db)$/;"	f
init_node	regex/regex_internal.h	/^  int init_node;$/;"	m	struct:re_dfa_t
init_state	regex/regex_internal.h	/^  re_dfastate_t *init_state;$/;"	m	struct:re_dfa_t
init_state_begbuf	regex/regex_internal.h	/^  re_dfastate_t *init_state_begbuf;$/;"	m	struct:re_dfa_t
init_state_nl	regex/regex_internal.h	/^  re_dfastate_t *init_state_nl;$/;"	m	struct:re_dfa_t
init_state_word	regex/regex_internal.h	/^  re_dfastate_t *init_state_word;$/;"	m	struct:re_dfa_t
init_word_char	regex/regcomp.c	/^init_word_char (dfa)$/;"	f	file:
initconnection	os_freebsd.h	/^    TWE_Command_INITCONNECTION	initconnection;$/;"	m	union:__anon11
initd_DATA_install	Makefile	/^initd_DATA_install = install-initdDATA-null$/;"	m
initd_DATA_uninstall	Makefile	/^initd_DATA_uninstall = uninstall-initdDATA-null$/;"	m
initd_main	os_win32/daemon_win32.cpp	/^static int initd_main(const char * ident, int argc, char **argv)$/;"	f	file:
initddir	Makefile	/^initddir = $/;"	m
initdfile	Makefile	/^initdfile = smartd.initd$/;"	m
inlen	megaraid.h	/^  uint32_t       inlen;$/;"	m	struct:uioctl_t
inline	regex/regex_internal.h	85;"	d
inpath	update-smart-drivedb	/^inpath()$/;"	f
inpath	update-smart-drivedb.in	/^inpath()$/;"	f
input	regex/regex_internal.h	/^  re_string_t *input;$/;"	m	struct:__anon125
input_data	os_linux.h	/^  unsigned char input_data[499];$/;"	m	struct:TAG_TW_Ioctl
input_length	os_linux.h	/^  int input_length;$/;"	m	struct:TAG_TW_Ioctl
inst_evtmsg	os_win32/daemon_win32.cpp	/^static void inst_evtmsg(const char * ident)$/;"	f	file:
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/ogh\/work\/git\/openssd-jasmine\/smartmon\/smartmontools-6.5\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int64_t	int64.h	/^typedef          __int64    int64_t;$/;"	t
int64_t	int64.h	/^typedef          long long  int64_t;$/;"	t
interleave	os_qnxnto.h	/^        uchar_t         interleave;$/;"	m	struct:_cdb::_format_unit_old
interleave	os_qnxnto.h	/^        ushort_t        interleave;$/;"	m	struct:_cdb::_format_unit
interval	atacmds.h	/^  unsigned short interval;          \/\/ 4-5: Timer interval between history entries$/;"	m	struct:ata_sct_temperature_history_table
invalidate_serno	atacmds.cpp	/^static void invalidate_serno(ata_identify_device * id)$/;"	f	file:
inveclosures	regex/regex_internal.h	/^  re_node_set *inveclosures;$/;"	m	struct:re_dfa_t
io	os_freebsd.h	/^    TWE_Command_IO		io;$/;"	m	union:__anon11
io	os_linux.h	/^    } io;$/;"	m	union:TW_Command::__anon35	typeref:struct:TW_Command::__anon35::__anon36
io	os_linux.h	/^    } io;$/;"	m	union:TW_Command_9000::__anon23	typeref:struct:TW_Command_9000::__anon23::__anon24
io_ports	os_linux.h	/^  task_ioreg_t	   io_ports[8];$/;"	m	struct:ide_task_request_s
ioctl_miniport_version	os_linux.h	/^    } ioctl_miniport_version;$/;"	m	union:TW_Command::__anon35	typeref:struct:TW_Command::__anon35::__anon39
ioctl_miniport_version	os_linux.h	/^    } ioctl_miniport_version;$/;"	m	union:TW_Command_9000::__anon23	typeref:struct:TW_Command_9000::__anon23::__anon27
ioctldatabuffer	dev_areca.h	/^  unsigned char   ioctldatabuffer[1032]; \/\/ the buffer to put the command data to\/from firmware$/;"	m	struct:_SRB_BUFFER
ioob	os_darwin.cpp	/^  io_object_t ioob;$/;"	m	struct:__anon95	file:
irDriveRegs	os_win32.cpp	/^  IDEREGS irDriveRegs;$/;"	m	struct:_SENDCMDINPARAMS_EX	file:
isGeneralPurposeLoggingCapable	atacmds.cpp	/^int isGeneralPurposeLoggingCapable(const ata_identify_device *identity)$/;"	f
isSCTCapable	atacmds.h	/^inline bool isSCTCapable(const ata_identify_device *drive)$/;"	f
isSCTDataTableCapable	atacmds.h	/^inline bool isSCTDataTableCapable(const ata_identify_device *drive)$/;"	f
isSCTErrorRecoveryControlCapable	atacmds.h	/^inline bool isSCTErrorRecoveryControlCapable(const ata_identify_device *drive)$/;"	f
isSCTFeatureControlCapable	atacmds.h	/^inline bool isSCTFeatureControlCapable(const ata_identify_device *drive)$/;"	f
isSmartErrorLogCapable	atacmds.cpp	/^int isSmartErrorLogCapable (const ata_smart_values * data, const ata_identify_device * identity)$/;"	f
isSmartTestLogCapable	atacmds.cpp	/^int isSmartTestLogCapable (const ata_smart_values * data, const ata_identify_device *identity)$/;"	f
isSupportAutomaticTimer	atacmds.cpp	/^int isSupportAutomaticTimer(const ata_smart_values * data)$/;"	f
isSupportConveyanceSelfTest	atacmds.cpp	/^int isSupportConveyanceSelfTest(const ata_smart_values * data)$/;"	f
isSupportExecuteOfflineImmediate	atacmds.cpp	/^int isSupportExecuteOfflineImmediate(const ata_smart_values *data)$/;"	f
isSupportOfflineAbort	atacmds.cpp	/^int isSupportOfflineAbort(const ata_smart_values *data)$/;"	f
isSupportOfflineSurfaceScan	atacmds.cpp	/^int isSupportOfflineSurfaceScan(const ata_smart_values * data)$/;"	f
isSupportSelectiveSelfTest	atacmds.cpp	/^int isSupportSelectiveSelfTest(const ata_smart_values * data)$/;"	f
isSupportSelfTest	atacmds.cpp	/^int isSupportSelfTest (const ata_smart_values * data)$/;"	f
is_48bit_cmd	dev_interface.h	/^  bool is_48bit_cmd() const$/;"	f	struct:ata_in_regs_48bit
is_ata	dev_interface.h	/^  bool is_ata() const$/;"	f	class:smart_device
is_duplicate_device	smartd.cpp	/^static bool is_duplicate_device(const smart_device * dev,$/;"	f	file:
is_initd_command	os_win32/daemon_win32.cpp	/^static int is_initd_command(char * s)$/;"	f	file:
is_initialized	smartd.cpp	/^static bool is_initialized = false;$/;"	v	file:
is_intel_raid_volume	os_win32.cpp	/^static bool is_intel_raid_volume(const STORAGE_DEVICE_DESCRIPTOR_DATA * data)$/;"	f	namespace:os_win32
is_nvme	dev_interface.h	/^  bool is_nvme() const$/;"	f	class:smart_device
is_offl_coll_in_progress	smartd.cpp	/^static inline bool is_offl_coll_in_progress(unsigned char status)$/;"	f	file:
is_open	atacmds.cpp	/^bool parsed_ata_device::is_open() const$/;"	f	class:__anon51::parsed_ata_device
is_open	dev_interface.cpp	/^bool tunnelled_device_base::is_open() const$/;"	f	class:tunnelled_device_base
is_open	dev_legacy.cpp	/^bool legacy_smart_device::is_open() const$/;"	f	class:os::legacy_smart_device
is_open	os_darwin.cpp	/^bool darwin_smart_device::is_open() const$/;"	f	class:os::darwin_smart_device
is_open	os_freebsd.cpp	/^bool freebsd_smart_device::is_open() const$/;"	f	class:os_freebsd::freebsd_smart_device
is_open	os_linux.cpp	/^bool linux_smart_device::is_open() const$/;"	f	class:os_linux::linux_smart_device
is_open	os_win32.cpp	/^bool win_csmi_device::is_open() const$/;"	f	class:os_win32::win_csmi_device
is_open	os_win32.cpp	/^bool win_smart_device::is_open() const$/;"	f	class:os_win32::win_smart_device
is_open	os_win32.cpp	/^bool win_tw_cli_device::is_open() const$/;"	f	class:os_win32::win_tw_cli_device
is_permissive	ataprint.cpp	/^static bool is_permissive()$/;"	f	file:
is_permissive	os_win32.cpp	/^static int is_permissive()$/;"	f	namespace:os_win32
is_powered_down	dev_interface.cpp	/^bool smart_device::is_powered_down()$/;"	f	class:smart_device
is_powered_down	os_win32.cpp	/^bool win_ata_device::is_powered_down()$/;"	f	class:os_win32::win_ata_device
is_raid_type	smartd.cpp	/^static bool is_raid_type(const char * type)$/;"	f	file:
is_read	freebsd_nvme_ioctl.h	/^	uint32_t		is_read;$/;"	m	struct:nvme_pt_command
is_real_48bit_cmd	dev_interface.h	/^  bool is_real_48bit_cmd() const$/;"	f	struct:ata_in_regs_48bit
is_sat	os_win32.cpp	/^static bool is_sat(const STORAGE_DEVICE_DESCRIPTOR_DATA * data)$/;"	f	namespace:os_win32
is_scsi	dev_interface.h	/^  bool is_scsi() const$/;"	f	class:smart_device
is_self_test_in_progress	smartd.cpp	/^static inline bool is_self_test_in_progress(unsigned char status)$/;"	f	file:
is_set	atacmds.h	/^  bool is_set(firmwarebug_t bug) const$/;"	f	class:firmwarebug_defs
is_set	dev_interface.h	/^  bool is_set() const$/;"	f	class:ata_register
is_set	dev_interface.h	/^  bool is_set() const$/;"	f	struct:ata_in_regs
is_set	dev_interface.h	/^  bool is_set() const$/;"	f	struct:ata_out_regs
is_set	dev_interface.h	/^  bool is_set() const$/;"	f	struct:ata_out_regs_flags
is_set	smartd.cpp	/^  bool is_set(int id, unsigned char flag) const$/;"	f	class:attribute_flags
is_smart_capable	os_darwin.cpp	/^static bool is_smart_capable (io_object_t dev) {$/;"	f	namespace:os
is_supported	scsicmds.cpp	/^supported_vpd_pages::is_supported(int vpd_page_num) const$/;"	f	class:supported_vpd_pages
is_syscall_unsup	dev_interface.cpp	/^bool smart_device::is_syscall_unsup() const$/;"	f	class:smart_device
is_wow64	os_win32.cpp	/^static bool is_wow64()$/;"	f	namespace:os_win32
isatadev	os_solaris.cpp	/^isatadev(const char *path)$/;"	f	file:
isbigendian	utility.h	/^inline bool isbigendian()$/;"	f
isblank	regex/regex_internal.h	47;"	d
isdevtype	os_solaris.cpp	/^isdevtype(const char *dev_name, const char *table[], int tsize)$/;"	f	file:
islogical	megaraid.h	/^  uint8_t  islogical : 1;$/;"	m	struct:__anon41
isscsidev	os_solaris.cpp	/^isscsidev(const char *path)$/;"	f	file:
kIOATABlockStorageDeviceClass	os_darwin.cpp	38;"	d	file:
kIOPropertySMARTCapableKey	os_darwin.h	32;"	d
kelvin_to_str	nvmeprint.cpp	/^static const char * kelvin_to_str(char (& str)[64], int k)$/;"	f	file:
knowndrives	knowndrives.cpp	/^static drive_database knowndrives;$/;"	v	file:
knowndrives_cpp_cvsid	knowndrives.cpp	/^const char * knowndrives_cpp_cvsid = "$Id: knowndrives.cpp 4208 2016-01-22 19:45:35Z chrfranke $"$/;"	v
last_node	regex/regex_internal.h	/^  int last_node;$/;"	m	struct:__anon125
last_node	regex/regex_internal.h	/^  int last_node;$/;"	m	struct:__anon126
last_nonopt	getopt/getopt.c	/^static int last_nonopt;$/;"	v	file:
last_str_idx	regex/regex_internal.h	/^  int last_str_idx;$/;"	m	struct:__anon126
lastpowermodeskipped	smartd.cpp	/^  int lastpowermodeskipped;               \/\/ the last power mode that was skipped$/;"	m	struct:temp_dev_state	file:
lasts	regex/regex_internal.h	/^  re_sub_match_last_t **lasts;$/;"	m	struct:__anon124
lastsent	smartd.cpp	/^  time_t lastsent; \/\/ time last email was sent, as defined by time(2)$/;"	m	struct:mailinfo	file:
lba	megaraid.h	/^  uint32_t  lba;$/;"	m	struct:__anon42
lba	nvmecmds.h	/^  uint64_t        lba;$/;"	m	struct:smartmontools::nvme_error_log_page
lba	os_freebsd.h	/^    u_int32_t	lba;$/;"	m	struct:__anon3
lba	os_linux.h	/^      u32 lba;$/;"	m	struct:TW_Command::__anon35::__anon36
lba	os_linux.h	/^      u32 lba;$/;"	m	struct:TW_Command_9000::__anon23::__anon24
lba	os_qnxnto.h	/^		uchar_t		lba[2];$/;"	m	struct:_cdb::__anon56
lba	os_qnxnto.h	/^		uchar_t		lba[4];$/;"	m	struct:_cdb::__anon57
lba	os_qnxnto.h	/^		uchar_t		lba[4];$/;"	m	struct:_cdb::__anon58
lba	os_qnxnto.h	/^		uchar_t		lba[4];$/;"	m	struct:_cdb::__anon66
lba	os_qnxnto.h	/^		uchar_t		lba[4];$/;"	m	struct:_cdb::__anon80
lba_48	dev_interface.h	/^  ata_reg_alias_48 lba_48;$/;"	m	struct:ata_in_regs_48bit
lba_48	dev_interface.h	/^  ata_reg_alias_48 lba_48;$/;"	m	struct:ata_out_regs_48bit
lba_byte0	os_qnxnto.h	/^		uchar_t		lba_byte0;				\/\/ LSB$/;"	m	struct:_cdb::__anon53
lba_byte0	os_qnxnto.h	/^		uchar_t		lba_byte0;$/;"	m	struct:_cdb::__anon54
lba_byte0	os_qnxnto.h	/^		uchar_t		lba_byte0;$/;"	m	struct:_cdb::__anon55
lba_byte1	os_qnxnto.h	/^		uchar_t		lba_byte1;$/;"	m	struct:_cdb::__anon53
lba_byte1	os_qnxnto.h	/^		uchar_t		lba_byte1;$/;"	m	struct:_cdb::__anon54
lba_byte1	os_qnxnto.h	/^		uchar_t		lba_byte1;$/;"	m	struct:_cdb::__anon55
lba_byte3	os_qnxnto.h	/^		uchar_t		lba_byte3;$/;"	m	struct:_cdb::__anon54
lba_byte3	os_qnxnto.h	/^		uchar_t		lba_byte3;$/;"	m	struct:_cdb::__anon55
lba_byte4	os_qnxnto.h	/^		uchar_t		lba_byte4;$/;"	m	struct:_cdb::__anon54
lba_byte4	os_qnxnto.h	/^		uchar_t		lba_byte4;$/;"	m	struct:_cdb::__anon55
lba_current	atacmds.h	/^  uint64_t lba_current;             \/\/ 40-47: LBA of SCT command executing in background$/;"	m	struct:ata_sct_status_response
lba_high	dev_interface.h	/^  ata_register lba_high;     \/\/ cylinder high    \/\/ ]$/;"	m	struct:ata_in_regs
lba_high	dev_interface.h	/^  ata_register lba_high;$/;"	m	struct:ata_out_regs
lba_high	dev_interface.h	/^  bool error, sector_count, lba_low, lba_mid, lba_high, device, status;$/;"	m	struct:ata_out_regs_flags
lba_high	os_qnxnto.h	/^		uchar_t		lba_high;$/;"	m	struct:_ata_pass_thru
lba_high	os_qnxnto.h	/^		uchar_t		lba_high;$/;"	m	struct:_cdb::_ata_pass_thru
lba_high	os_qnxnto.h	/^	uchar_t			lba_high;				\/* (7:0) *\/$/;"	m	struct:_ata_status_descriptor
lba_high_16	dev_interface.h	/^  ata_reg_alias_16 lba_high_16;$/;"	m	struct:ata_in_regs_48bit
lba_high_16	dev_interface.h	/^  ata_reg_alias_16 lba_high_16;$/;"	m	struct:ata_out_regs_48bit
lba_high_register	atacmds.h	/^  unsigned char lba_high_register;$/;"	m	struct:ata_smart_exterrlog_command
lba_high_register	atacmds.h	/^  unsigned char lba_high_register;$/;"	m	struct:ata_smart_exterrlog_error
lba_high_register_hi	atacmds.h	/^  unsigned char lba_high_register_hi;$/;"	m	struct:ata_smart_exterrlog_command
lba_high_register_hi	atacmds.h	/^  unsigned char lba_high_register_hi;$/;"	m	struct:ata_smart_exterrlog_error
lba_low	dev_interface.h	/^  ata_register lba_low;      \/\/ sector number    \/\/ ]$/;"	m	struct:ata_in_regs
lba_low	dev_interface.h	/^  ata_register lba_low;$/;"	m	struct:ata_out_regs
lba_low	dev_interface.h	/^  bool error, sector_count, lba_low, lba_mid, lba_high, device, status;$/;"	m	struct:ata_out_regs_flags
lba_low	os_qnxnto.h	/^		uchar_t		lba_low;$/;"	m	struct:_ata_pass_thru
lba_low	os_qnxnto.h	/^		uchar_t		lba_low;$/;"	m	struct:_cdb::_ata_pass_thru
lba_low	os_qnxnto.h	/^	uchar_t			lba_low;				\/* (7:0) *\/$/;"	m	struct:_ata_status_descriptor
lba_low_16	dev_interface.h	/^  ata_reg_alias_16 lba_low_16;$/;"	m	struct:ata_in_regs_48bit
lba_low_16	dev_interface.h	/^  ata_reg_alias_16 lba_low_16;$/;"	m	struct:ata_out_regs_48bit
lba_low_register	atacmds.h	/^  unsigned char lba_low_register;$/;"	m	struct:ata_smart_exterrlog_command
lba_low_register	atacmds.h	/^  unsigned char lba_low_register;$/;"	m	struct:ata_smart_exterrlog_error
lba_low_register_hi	atacmds.h	/^  unsigned char lba_low_register_hi;$/;"	m	struct:ata_smart_exterrlog_command
lba_low_register_hi	atacmds.h	/^  unsigned char lba_low_register_hi;$/;"	m	struct:ata_smart_exterrlog_error
lba_mid	dev_interface.h	/^  ata_register lba_mid;      \/\/ cylinder low     \/\/ ] lba$/;"	m	struct:ata_in_regs
lba_mid	dev_interface.h	/^  ata_register lba_mid;$/;"	m	struct:ata_out_regs
lba_mid	dev_interface.h	/^  bool error, sector_count, lba_low, lba_mid, lba_high, device, status;$/;"	m	struct:ata_out_regs_flags
lba_mid	os_qnxnto.h	/^		uchar_t		lba_mid;$/;"	m	struct:_ata_pass_thru
lba_mid	os_qnxnto.h	/^		uchar_t		lba_mid;$/;"	m	struct:_cdb::_ata_pass_thru
lba_mid	os_qnxnto.h	/^	uchar_t			lba_mid;				\/* (7:0) *\/$/;"	m	struct:_ata_status_descriptor
lba_mid_16	dev_interface.h	/^  ata_reg_alias_16 lba_mid_16;$/;"	m	struct:ata_in_regs_48bit
lba_mid_16	dev_interface.h	/^  ata_reg_alias_16 lba_mid_16;$/;"	m	struct:ata_out_regs_48bit
lba_mid_register	atacmds.h	/^  unsigned char lba_mid_register;$/;"	m	struct:ata_smart_exterrlog_command
lba_mid_register	atacmds.h	/^  unsigned char lba_mid_register;$/;"	m	struct:ata_smart_exterrlog_error
lba_mid_register_hi	atacmds.h	/^  unsigned char lba_mid_register_hi;$/;"	m	struct:ata_smart_exterrlog_command
lba_mid_register_hi	atacmds.h	/^  unsigned char lba_mid_register_hi;$/;"	m	struct:ata_smart_exterrlog_error
lbacap_to_str	nvmeprint.cpp	/^static const char * lbacap_to_str(char (& str)[64], uint64_t lba_cnt, int lba_bits)$/;"	f	file:
lbaf	nvmecmds.h	/^  struct nvme_lbaf  lbaf[16];$/;"	m	struct:smartmontools::nvme_id_ns	typeref:struct:smartmontools::nvme_id_ns::nvme_lbaf
lbafirstfailure	atacmds.h	/^  unsigned int lbafirstfailure;$/;"	m	struct:ata_smart_selftestlog_struct
lbahigh	os_freebsd.h	/^  unsigned char lbahigh;$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
lbalow	os_freebsd.h	/^  unsigned char lbalow;$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
lbamid	os_freebsd.h	/^  unsigned char lbamid;$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
lcyl	os_linux.h	/^    unsigned lcyl		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
lcyl_hob	os_linux.h	/^    unsigned lcyl_hob		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
le128_is_non_zero	nvmeprint.cpp	/^static bool le128_is_non_zero(const unsigned char (& val)[16])$/;"	f	file:
le128_to_str	nvmeprint.cpp	/^static const char * le128_to_str(char (& str)[64], const unsigned char (& val)[16],$/;"	f	file:
le128_to_str	nvmeprint.cpp	/^static const char * le128_to_str(char (& str)[64], uint64_t hi, uint64_t lo, unsigned bytes_per_unit)$/;"	f	file:
le128_to_uint64	smartd.cpp	/^static uint64_t le128_to_uint64(const unsigned char (& val)[16])$/;"	f	file:
le16_to_uint	nvmeprint.cpp	/^static inline unsigned le16_to_uint(const unsigned char (& val)[2])$/;"	f	file:
left	regex/regex_internal.h	/^  struct bin_tree_t *left;$/;"	m	struct:bin_tree_t	typeref:struct:bin_tree_t::bin_tree_t
legacy_ata_device	dev_legacy.cpp	/^class legacy_ata_device$/;"	c	namespace:os	file:
legacy_ata_device	dev_legacy.cpp	/^legacy_ata_device::legacy_ata_device(smart_interface * intf, const char * dev_name, const char * req_type)$/;"	f	class:os::legacy_ata_device
legacy_scsi_device	dev_legacy.cpp	/^class legacy_scsi_device$/;"	c	namespace:os	file:
legacy_scsi_device	dev_legacy.cpp	/^legacy_scsi_device::legacy_scsi_device(smart_interface * intf,$/;"	f	class:os::legacy_scsi_device
legacy_smart_device	dev_legacy.cpp	/^  explicit legacy_smart_device(const char * mode)$/;"	f	class:os::legacy_smart_device
legacy_smart_device	dev_legacy.cpp	/^class legacy_smart_device$/;"	c	namespace:os	file:
legacy_smart_interface	dev_legacy.cpp	/^class legacy_smart_interface$/;"	c	namespace:os	file:
len	freebsd_nvme_ioctl.h	/^	uint32_t		len;$/;"	m	struct:nvme_pt_command
len	regex/regex_internal.h	/^  int len;$/;"	m	struct:re_string_t
length	aacraid.h	/^  uint32_t length;  \/* Length. *\/$/;"	m	struct:__anon136
length	aacraid.h	/^  uint32_t length;$/;"	m	struct:__anon137
length	megaraid.h	/^      uint32_t length;$/;"	m	struct:uioctl_t::__anon44::__anon45
length	megaraid.h	/^  u32 length;$/;"	m	struct:megasas_sge32
length	megaraid.h	/^  u32 length;$/;"	m	struct:megasas_sge64
length	os_freebsd.h	/^    u_int32_t	length;$/;"	m	struct:__anon1
length	os_linux.h	/^  unsigned int length;$/;"	m	struct:TAG_TW_SG_Entry
length	regex/regexec.c	/^    int length, start, range;$/;"	v
length	regex/regexec.c	/^    int length, start;$/;"	v
length1	regex/regexec.c	/^    int length1, length2, start, range, stop;$/;"	v
length1	regex/regexec.c	/^    int length1, length2, start, stop;$/;"	v
length2	regex/regexec.c	/^    int length1, length2, start, range, stop;$/;"	v
length2	regex/regexec.c	/^    int length1, length2, start, stop;$/;"	v
libc_freeres_fn	regex/regcomp.c	/^libc_freeres_fn (free_mem)$/;"	f
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
life_max_temp	atacmds.h	/^  signed char life_max_temp;        \/\/ 204: Maximum lifetime temperature$/;"	m	struct:ata_sct_status_response
life_min_temp	atacmds.h	/^  signed char life_min_temp;        \/\/ 203: Minimum lifetime temperature$/;"	m	struct:ata_sct_status_response
limited_states	regex/regex_internal.h	/^  re_dfastate_t **limited_states;$/;"	m	struct:__anon126
limits	regex/regex_internal.h	/^  re_node_set limits;$/;"	m	struct:__anon126
line	knowndrives.cpp	/^  int line;$/;"	m	struct:token_info	file:
lineno	smartd.cpp	/^  int lineno;                             \/\/ Line number of entry in file$/;"	m	struct:dev_config	file:
linux_aacraid_device	os_linux.cpp	/^class linux_aacraid_device$/;"	c	namespace:os_linux	file:
linux_aacraid_device	os_linux.cpp	/^linux_aacraid_device::linux_aacraid_device(smart_interface *intf,$/;"	f	class:os_linux::linux_aacraid_device
linux_areca_ata_device	os_linux.cpp	/^class linux_areca_ata_device$/;"	c	namespace:os_linux	file:
linux_areca_ata_device	os_linux.cpp	/^linux_areca_ata_device::linux_areca_ata_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:os_linux::linux_areca_ata_device
linux_areca_scsi_device	os_linux.cpp	/^class linux_areca_scsi_device$/;"	c	namespace:os_linux	file:
linux_areca_scsi_device	os_linux.cpp	/^linux_areca_scsi_device::linux_areca_scsi_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:os_linux::linux_areca_scsi_device
linux_ata_device	os_linux.cpp	/^class linux_ata_device$/;"	c	namespace:os_linux	file:
linux_ata_device	os_linux.cpp	/^linux_ata_device::linux_ata_device(smart_interface * intf, const char * dev_name, const char * req_type)$/;"	f	class:os_linux::linux_ata_device
linux_cciss_device	os_linux.cpp	/^class linux_cciss_device$/;"	c	namespace:os_linux	file:
linux_cciss_device	os_linux.cpp	/^linux_cciss_device::linux_cciss_device(smart_interface * intf,$/;"	f	class:os_linux::linux_cciss_device
linux_escalade_device	os_linux.cpp	/^class linux_escalade_device$/;"	c	namespace:os_linux	file:
linux_escalade_device	os_linux.cpp	/^linux_escalade_device::linux_escalade_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_linux::linux_escalade_device
linux_highpoint_device	os_linux.cpp	/^class linux_highpoint_device$/;"	c	namespace:os_linux	file:
linux_highpoint_device	os_linux.cpp	/^linux_highpoint_device::linux_highpoint_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_linux::linux_highpoint_device
linux_ioctl_send_command	os_linux.cpp	/^struct linux_ioctl_send_command$/;"	s	namespace:os_linux	file:
linux_marvell_device	os_linux.cpp	/^class linux_marvell_device$/;"	c	namespace:os_linux	file:
linux_marvell_device	os_linux.cpp	/^linux_marvell_device::linux_marvell_device(smart_interface * intf,$/;"	f	class:os_linux::linux_marvell_device
linux_megaraid_device	os_linux.cpp	/^class linux_megaraid_device$/;"	c	namespace:os_linux	file:
linux_megaraid_device	os_linux.cpp	/^linux_megaraid_device::linux_megaraid_device(smart_interface *intf,$/;"	f	class:os_linux::linux_megaraid_device
linux_nvme_device	os_linux.cpp	/^class linux_nvme_device$/;"	c	namespace:os_linux	file:
linux_nvme_device	os_linux.cpp	/^linux_nvme_device::linux_nvme_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_linux::linux_nvme_device
linux_scsi_device	os_linux.cpp	/^class linux_scsi_device$/;"	c	namespace:os_linux	file:
linux_scsi_device	os_linux.cpp	/^linux_scsi_device::linux_scsi_device(smart_interface * intf,$/;"	f	class:os_linux::linux_scsi_device
linux_smart_device	os_linux.cpp	/^  explicit linux_smart_device(int flags, int retry_flags = -1)$/;"	f	class:os_linux::linux_smart_device
linux_smart_device	os_linux.cpp	/^class linux_smart_device$/;"	c	namespace:os_linux	file:
linux_smart_interface	os_linux.cpp	/^class linux_smart_interface$/;"	c	namespace:os_linux	file:
lo32	aacraid.h	/^  uint32_t lo32;$/;"	m	struct:__anon135
load	os_qnxnto.h	/^	} load;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon65
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locate	os_qnxnto.h	/^	} locate;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon83
lock_pkt	os_freebsd.h	/^		struct tw_cl_lock_packet		lock_pkt;$/;"	m	union:tw_osli_ioctl_with_payload::__anon17	typeref:struct:tw_osli_ioctl_with_payload::__anon17::tw_cl_lock_packet
log_desc_index	atacmds.h	/^  unsigned short log_desc_index;$/;"	m	struct:ata_smart_extselftestlog
log_descs	atacmds.h	/^  struct ata_smart_extselftestlog_desc log_descs[19];$/;"	m	struct:ata_smart_extselftestlog	typeref:struct:ata_smart_extselftestlog::ata_smart_extselftestlog_desc
log_offline_data_coll_status	smartd.cpp	/^static void log_offline_data_coll_status(const char * name, unsigned char status)$/;"	f	file:
log_page	nvmeprint.h	/^  unsigned char log_page;$/;"	m	struct:nvme_print_options
log_page_size	nvmeprint.h	/^  unsigned log_page_size;$/;"	m	struct:nvme_print_options
log_requests	ataprint.h	/^  std::vector<ata_log_request> log_requests;$/;"	m	struct:ata_print_options
log_sector_offset	atacmds.h	/^  unsigned log_sector_offset;$/;"	m	struct:ata_size_info
log_sector_size	atacmds.h	/^  unsigned log_sector_size;$/;"	m	struct:ata_size_info
log_select	os_qnxnto.h	/^	} log_select;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon61
log_self_test_exec_status	smartd.cpp	/^static void log_self_test_exec_status(const char * name, unsigned char status)$/;"	f	file:
log_sense	os_qnxnto.h	/^	} log_sense;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon63
logaddr	ataprint.h	/^  unsigned char logaddr; \/\/ Log address$/;"	m	struct:ata_log_request
logdrv	megaraid.h	/^  uint8_t   logdrv;$/;"	m	struct:__anon42
logdrv	megaraid.h	/^  uint8_t  logdrv;$/;"	m	struct:__anon41
logged	smartd.cpp	/^  int logged;\/\/ number of times an email has been sent$/;"	m	struct:mailinfo	file:
logical_subunit	os_freebsd.h	/^    u_int8_t	logical_subunit;		\/* for RAID10 rebuild of logical subunit *\/$/;"	m	struct:__anon8
logversion	atacmds.h	/^  unsigned short     logversion;$/;"	m	struct:ata_selective_self_test_log
logversion	atacmds.h	/^  unsigned short int logversion;$/;"	m	struct:ata_smart_log_directory
look_up_ata_command	atacmdnames.cpp	/^const char *look_up_ata_command(unsigned char c_code, unsigned char f_reg) {$/;"	f
lookup_drive	knowndrives.cpp	/^static const drive_settings * lookup_drive(const char * model, const char * firmware)$/;"	f	file:
lookup_drive_apply_presets	knowndrives.cpp	/^const drive_settings * lookup_drive_apply_presets($/;"	f
lookup_usb_device	knowndrives.cpp	/^int lookup_usb_device(int vendor_id, int product_id, int bcd_device,$/;"	f
low_cylinder	os_linux.h	/^  task_ioreg_t low_cylinder;$/;"	m	struct:hd_drive_task_hdr
lpa	nvmecmds.h	/^  unsigned char   lpa;$/;"	m	struct:smartmontools::nvme_id_ctrl
lun	aacraid.h	/^  uint32_t lun;                \/\/Logical unit number$/;"	m	struct:__anon141
lun	aacraid.h	/^  uint32_t lun;                \/\/Logical unit number$/;"	m	struct:__anon142
lun	megaraid.h	/^  u8 lun;            \/*05h *\/$/;"	m	struct:megasas_pthru_frame
lun	megaraid.h	/^  u8 lun;           \/*05h *\/$/;"	m	struct:megasas_header
lun_code	os_qnxnto.h	/^		uchar_t		lun_code;$/;"	m	struct:_cdb::__anon88
lun_h4__sgl_entries	os_freebsd.h	/^	TW_UINT16	lun_h4__sgl_entries;$/;"	m	struct:tw_cl_command_9k
lun_l4__req_id	os_freebsd.h	/^	TW_UINT16	lun_l4__req_id;	\/* 4:12 *\/$/;"	m	struct:tw_cl_command_9k
lun_lba	os_qnxnto.h	/^		uchar_t		lun_lba;$/;"	m	struct:_cdb::__anon56
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon53
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon54
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon55
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon57
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon58
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon59
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon60
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon61
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon62
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon63
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon64
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon65
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon66
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon68
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon69
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon70
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon72
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon73
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon74
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon77
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon78
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon79
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::__anon85
lun_opt	os_qnxnto.h	/^		uchar_t		lun_opt;$/;"	m	struct:_cdb::_mode_sense10
lun_stype	os_qnxnto.h	/^		uchar_t		lun_stype;$/;"	m	struct:_cdb::__anon80
lun_stype	os_qnxnto.h	/^		uchar_t		lun_stype;$/;"	m	struct:_cdb::__anon81
m	freebsd_nvme_ioctl.h	/^	uint16_t m	:  1;	\/* more *\/$/;"	m	struct:nvme_status
m	os_win32/smartd_warning.cmd	/^  set m=$/;"	v
m_admin	os_win32.cpp	/^  bool m_admin; \/\/ open with admin access?$/;"	m	class:os_win32::win_ata_device	file:
m_ata_48bit_support	scsiata.cpp	/^  bool m_ata_48bit_support;$/;"	m	class:sat::usbjmicron_device	file:
m_ata_identify_is_cached	atacmds.cpp	/^  bool m_ata_identify_is_cached;$/;"	m	class:__anon51::parsed_ata_device	file:
m_ata_ptr	dev_interface.h	/^  ata_device * m_ata_ptr;$/;"	m	class:smart_device
m_base_dev	dev_interface.h	/^  smart_device * m_base_dev;$/;"	m	class:any_device_auto_ptr
m_bstr	os_win32/wmiquery.h	/^  BSTR m_bstr;$/;"	m	class:com_bstr
m_buf	smartd.cpp	/^  char * m_buf;$/;"	m	class:env_buffer	file:
m_bugs	atacmds.h	/^  unsigned m_bugs;$/;"	m	class:firmwarebug_defs
m_builtin_size	knowndrives.cpp	/^  unsigned m_builtin_size;$/;"	m	class:drive_database	file:
m_builtin_tab	knowndrives.cpp	/^  const drive_settings * m_builtin_tab;$/;"	m	class:drive_database	file:
m_c	knowndrives.cpp	/^  char m_c, m_next;$/;"	m	class:stdin_iterator	file:
m_camdev	os_freebsd.cpp	/^  struct cam_device *m_camdev;$/;"	m	class:os_freebsd::freebsd_atacam_device	typeref:struct:os_freebsd::freebsd_atacam_device::cam_device	file:
m_camdev	os_freebsd.cpp	/^  struct cam_device *m_camdev;$/;"	m	class:os_freebsd::freebsd_scsi_device	typeref:struct:os_freebsd::freebsd_scsi_device::cam_device	file:
m_command_table	atacmds.cpp	/^  parsed_ata_command m_command_table[max_num_commands];$/;"	m	class:__anon51::parsed_ata_device	file:
m_controller_port	os_freebsd.cpp	/^unsigned char m_controller_port; $/;"	m	namespace:os_freebsd	file:
m_controller_type	os_freebsd.cpp	/^unsigned char m_controller_type;$/;"	m	namespace:os_freebsd	file:
m_ctrnum	os_win32.cpp	/^  int m_ctrnum;$/;"	m	class:os_win32::win_aacraid_device	file:
m_custom_strings	knowndrives.cpp	/^  std::vector<char *> m_custom_strings;$/;"	m	class:drive_database	file:
m_custom_tab	knowndrives.cpp	/^  std::vector<drive_settings> m_custom_tab;$/;"	m	class:drive_database	file:
m_data	utility.h	/^  unsigned char * m_data;$/;"	m	class:raw_buffer
m_defs	atacmds.h	/^  entry m_defs[256];$/;"	m	class:ata_vendor_attr_defs
m_dev	dev_interface.h	/^  device_type * m_dev;$/;"	m	class:any_device_auto_ptr
m_disknum	dev_areca.h	/^  int m_disknum; \/\/\/< Disk number.$/;"	m	class:generic_areca_device
m_disknum	os_freebsd.cpp	/^  int m_disknum; \/\/\/< Disk number.$/;"	m	class:os_freebsd::freebsd_escalade_device	file:
m_disknum	os_freebsd.cpp	/^  unsigned char m_disknum; \/\/\/< Disk number.$/;"	m	class:os_freebsd::freebsd_cciss_device	file:
m_disknum	os_linux.cpp	/^  int m_disknum; \/\/\/< Disk number.$/;"	m	class:os_linux::linux_escalade_device	file:
m_disknum	os_linux.cpp	/^  unsigned char m_disknum; \/\/\/< Disk number.$/;"	m	class:os_linux::linux_cciss_device	file:
m_disknum	os_linux.cpp	/^  unsigned int m_disknum;$/;"	m	class:os_linux::linux_megaraid_device	file:
m_enable_auto	scsiata.cpp	/^  bool m_enable_auto;$/;"	m	class:sat::sat_device	file:
m_encnum	dev_areca.h	/^  int m_encnum;  \/\/\/< Enclosure number.$/;"	m	class:generic_areca_device
m_err	dev_interface.h	/^  error_info m_err;$/;"	m	class:smart_device
m_err	dev_interface.h	/^  smart_device::error_info m_err;$/;"	m	class:smart_interface
m_errmsg	utility.h	/^  std::string m_errmsg;$/;"	m	class:regular_expression
m_escalade_type	os_freebsd.cpp	/^  int m_escalade_type; \/\/\/< Type string for escalade_command_interface().$/;"	m	class:os_freebsd::freebsd_escalade_device	file:
m_escalade_type	os_linux.cpp	/^  escalade_type_t m_escalade_type; \/\/\/< Controller type$/;"	m	class:os_linux::linux_escalade_device	file:
m_f	knowndrives.cpp	/^  FILE * m_f;$/;"	m	class:stdin_iterator	file:
m_fd	dev_legacy.cpp	/^  int m_fd; \/\/\/< filedesc, -1 if not open.$/;"	m	class:os::legacy_smart_device	file:
m_fd	os_darwin.cpp	/^  int m_fd; \/\/\/< filedesc, -1 if not open.$/;"	m	class:os::darwin_smart_device	file:
m_fd	os_freebsd.cpp	/^  int m_fd; \/\/\/< filedesc, -1 if not open.$/;"	m	class:os_freebsd::freebsd_smart_device	file:
m_fd	os_freebsd.cpp	/^  int m_fd;$/;"	m	class:os_freebsd::freebsd_atacam_device	file:
m_fd	os_linux.cpp	/^  int m_fd; \/\/\/< filedesc, -1 if not open.$/;"	m	class:os_linux::linux_smart_device	file:
m_fd	os_linux.cpp	/^  int m_fd;$/;"	m	class:os_linux::linux_megaraid_device	file:
m_fh	os_win32.cpp	/^  HANDLE m_fh; \/\/\/< Controller device handle$/;"	m	class:os_win32::win_csmi_device	file:
m_fh	os_win32.cpp	/^  HANDLE m_fh; \/\/\/< File handle$/;"	m	class:os_win32::win_smart_device	file:
m_file	utility.h	/^  FILE * m_file;$/;"	m	class:stdio_file
m_flags	os_linux.cpp	/^  int m_flags; \/\/\/< Flags for ::open()$/;"	m	class:os_linux::linux_smart_device	file:
m_flags	smartd.cpp	/^  unsigned char m_flags[256];$/;"	m	class:attribute_flags	file:
m_flags	utility.h	/^  int m_flags;$/;"	m	class:regular_expression
m_hba	os_linux.cpp	/^  unsigned int m_hba;$/;"	m	class:os_linux::linux_megaraid_device	file:
m_hh	dev_interface.h	/^               & m_hl, & m_hm, & m_hh;$/;"	m	class:ata_reg_alias_48
m_hi	dev_interface.h	/^  ata_register & m_lo, & m_hi;$/;"	m	class:ata_reg_alias_16
m_hl	dev_interface.h	/^               & m_hl, & m_hm, & m_hh;$/;"	m	class:ata_reg_alias_48
m_hm	dev_interface.h	/^               & m_hl, & m_hm, & m_hh;$/;"	m	class:ata_reg_alias_48
m_hpt_data	os_freebsd.cpp	/^  unsigned char m_hpt_data[3]; \/\/\/< controller\/channel\/port$/;"	m	class:os_freebsd::freebsd_highpoint_device	file:
m_hpt_data	os_linux.cpp	/^  unsigned char m_hpt_data[3]; \/\/\/< controller\/channel\/port$/;"	m	class:os_linux::linux_highpoint_device	file:
m_id_is_cached	os_win32.cpp	/^  bool m_id_is_cached; \/\/ ata_identify_is_cached() return value.$/;"	m	class:os_win32::win_ata_device	file:
m_ident_buf	os_win32.cpp	/^  ata_identify_device m_ident_buf;$/;"	m	class:os_win32::win_tw_cli_device	file:
m_ident_valid	os_win32.cpp	/^  bool m_ident_valid, m_smart_valid;$/;"	m	class:os_win32::win_tw_cli_device	file:
m_info	dev_interface.h	/^  device_info m_info;$/;"	m	class:smart_device
m_intf	dev_interface.h	/^  smart_interface * m_intf;$/;"	m	class:smart_device
m_intf	os_win32/wmiquery.h	/^  com_intf_ptr<IEnumWbemClassObject> m_intf;$/;"	m	class:wbem_enumerator
m_intf	os_win32/wmiquery.h	/^  com_intf_ptr<IWbemClassObject> m_intf;$/;"	m	class:wbem_object
m_intf	os_win32/wmiquery.h	/^  com_intf_ptr<IWbemServices> m_intf;$/;"	m	class:wbem_services
m_is_3ware	os_win32.cpp	/^  bool m_is_3ware; \/\/ LSI\/3ware controller detected?$/;"	m	class:os_win32::win_ata_device	file:
m_is_set	dev_interface.h	/^  bool m_is_set; \/\/\/< true if set$/;"	m	class:ata_register
m_lh	dev_interface.h	/^  ata_register & m_ll, & m_lm, & m_lh,$/;"	m	class:ata_reg_alias_48
m_list	dev_interface.h	/^  std::vector<smart_device *> m_list;$/;"	m	class:smart_device_list
m_ll	dev_interface.h	/^  ata_register & m_ll, & m_lm, & m_lh,$/;"	m	class:ata_reg_alias_48
m_lm	dev_interface.h	/^  ata_register & m_ll, & m_lm, & m_lh,$/;"	m	class:ata_reg_alias_48
m_lo	dev_interface.h	/^  ata_register & m_lo, & m_hi;$/;"	m	class:ata_reg_alias_16
m_lun	os_win32.cpp	/^  int m_lun;$/;"	m	class:os_win32::win_aacraid_device	file:
m_mode	dev_legacy.cpp	/^  const char * m_mode; \/\/\/< Mode string for deviceopen().$/;"	m	class:os::legacy_smart_device	file:
m_mode	os_darwin.cpp	/^  const char * m_mode; \/\/\/< Mode string for deviceopen().$/;"	m	class:os::darwin_smart_device	file:
m_mutex	os_win32.cpp	/^  HANDLE m_mutex;$/;"	m	class:os_win32::win_areca_ata_device	file:
m_mutex	os_win32.cpp	/^  HANDLE m_mutex;$/;"	m	class:os_win32::win_areca_scsi_device	file:
m_next	knowndrives.cpp	/^  char m_c, m_next;$/;"	m	class:stdin_iterator	file:
m_next_replay_command	atacmds.cpp	/^  int m_next_replay_command;$/;"	m	class:__anon51::parsed_ata_device	file:
m_nsid	dev_interface.h	/^  unsigned m_nsid;$/;"	m	class:nvme_device
m_num_commands	atacmds.cpp	/^  int m_num_commands;$/;"	m	class:__anon51::parsed_ata_device	file:
m_nvme_ptr	dev_interface.h	/^  nvme_device * m_nvme_ptr;$/;"	m	class:smart_device
m_options	os_win32.cpp	/^  std::string m_options;$/;"	m	class:os_win32::win_ata_device	file:
m_owner	utility.h	/^  bool m_owner;$/;"	m	class:stdio_file
m_passthrulen	scsiata.cpp	/^  int m_passthrulen;$/;"	m	class:sat::sat_device	file:
m_pattern	utility.h	/^  std::string m_pattern;$/;"	m	class:regular_expression
m_phy_ent	os_win32.cpp	/^  CSMI_SAS_PHY_ENTITY m_phy_ent; \/\/\/< CSMI info for this phy$/;"	m	class:os_win32::csmi_device	file:
m_phydrive	os_win32.cpp	/^  int m_phydrive; \/\/ PhysicalDriveN or -1$/;"	m	class:os_win32::win_ata_device	file:
m_port	os_win32.cpp	/^  int m_port; \/\/ LSI\/3ware port$/;"	m	class:os_win32::win_ata_device	file:
m_port	os_win32.cpp	/^  int m_port; \/\/\/< Port number$/;"	m	class:os_win32::win_csmi_device	file:
m_port	scsiata.cpp	/^  int m_port;$/;"	m	class:sat::usbjmicron_device	file:
m_prolific	scsiata.cpp	/^  bool m_prolific;$/;"	m	class:sat::usbjmicron_device	file:
m_ptr	os_win32/wmiquery.h	/^  T * m_ptr;$/;"	m	class:com_intf_ptr
m_regex_buf	utility.h	/^  regex_t m_regex_buf;$/;"	m	class:regular_expression
m_replay_out_of_sync	atacmds.cpp	/^  bool m_replay_out_of_sync;$/;"	m	class:__anon51::parsed_ata_device	file:
m_retry_flags	os_linux.cpp	/^  int m_retry_flags; \/\/\/< Flags to retry ::open(), -1 if no retry$/;"	m	class:os_linux::linux_smart_device	file:
m_scanning	os_linux.cpp	/^  bool m_scanning; \/\/\/< true if created within scan_smart_devices$/;"	m	class:os_linux::linux_scsi_device	file:
m_scsi_no	os_win32.cpp	/^  int m_scsi_no;$/;"	m	class:os_win32::win_nvme_device	file:
m_scsi_ptr	dev_interface.h	/^  scsi_device * m_scsi_ptr;$/;"	m	class:smart_device
m_signature	scsiata.cpp	/^  unsigned char m_signature;$/;"	m	class:sat::usbcypress_device	file:
m_size	utility.h	/^  unsigned m_size;$/;"	m	class:raw_buffer
m_smart_buf	os_win32.cpp	/^  ata_smart_values m_smart_buf;$/;"	m	class:os_win32::win_tw_cli_device	file:
m_smart_valid	os_win32.cpp	/^  bool m_ident_valid, m_smart_valid;$/;"	m	class:os_win32::win_tw_cli_device	file:
m_smartver_state	os_win32.cpp	/^  int m_smartver_state;$/;"	m	class:os_win32::win_ata_device	file:
m_target	os_win32.cpp	/^  int m_target;$/;"	m	class:os_win32::win_aacraid_device	file:
m_tunnel_base_dev	dev_tunnelled.h	/^  smart_device * m_tunnel_base_dev;$/;"	m	class:tunnelled_device_base
m_tunnel_dev	dev_tunnelled.h	/^  tunnel_device_type * m_tunnel_dev;$/;"	m	class:tunnelled_device
m_usr_options	os_win32.cpp	/^  bool m_usr_options; \/\/ options set by user?$/;"	m	class:os_win32::win_ata_device	file:
m_val	dev_interface.h	/^  unsigned char m_val; \/\/\/< Register value$/;"	m	class:ata_register
magic	os_freebsd.h	/^  unsigned int magic;     \/* used to check if it's a valid ioctl packet *\/$/;"	m	struct:_HPT_IOCTL_PARAM
mailinfo	smartd.cpp	/^  mailinfo()$/;"	f	struct:mailinfo
mailinfo	smartd.cpp	/^struct mailinfo {$/;"	s	file:
maillog	smartd.cpp	/^  mailinfo maillog[SMARTD_NMAIL];         \/\/ log info on when mail sent$/;"	m	struct:persistent_dev_state	file:
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	getopt/getopt.c	/^main (argc, argv)$/;"	f
main	os_win32/daemon_win32.cpp	/^int main(int argc, char **argv)$/;"	f
main	os_win32/runcmd.c	/^int main(int argc, char **argv)$/;"	f
main	os_win32/syslog_win32.cpp	/^int main(int argc, char* argv[])$/;"	f
main	os_win32/wtssendmsg.c	/^int main(int argc, const char **argv)$/;"	f
main	smartctl.cpp	/^int main(int argc, char **argv)$/;"	f
main	smartd.cpp	/^int main(int argc, char **argv)$/;"	f
main	smartd.cpp	/^int main(int argc, char **argv){$/;"	f
main_worker	smartctl.cpp	/^static int main_worker(int argc, char **argv)$/;"	f	file:
main_worker	smartd.cpp	/^static int main_worker(int argc, char **argv)$/;"	f	file:
major_rev_num	atacmds.h	/^  unsigned short major_rev_num;$/;"	m	struct:ata_identify_device
make_device_names	os_darwin.cpp	/^static int make_device_names (char*** devlist, const char* name) {$/;"	f	namespace:os
make_device_names	os_netbsd.cpp	/^make_device_names(char ***devlist, const char *name)$/;"	f
make_device_names	os_openbsd.cpp	/^make_device_names(char ***devlist, const char *name)$/;"	f
make_device_names	os_qnxnto.cpp	/^int make_device_names (char*** devlist, const char* name) {$/;"	f
make_device_names	os_solaris.cpp	/^int make_device_names (char*** devlist, const char* name) {$/;"	f
make_dummy_depfile	depcomp	/^make_dummy_depfile ()$/;"	f
make_evtkey	os_win32/daemon_win32.cpp	/^static bool make_evtkey(char * buf, unsigned size, const char * ident)$/;"	f	file:
make_name	os_win32/daemon_win32.cpp	/^static void make_name(char * name, int sig)$/;"	f	file:
man5dir	Makefile	/^man5dir = $(mandir)\/man5$/;"	m
man8dir	Makefile	/^man8dir = $(mandir)\/man8$/;"	m
man_MANS	Makefile	/^man_MANS = smartd.conf.5 smartctl.8 smartd.8 \\$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map_old_vendor_opts	atacmds.cpp	/^const char * const map_old_vendor_opts[][2] = {$/;"	v
match	knowndrives.cpp	/^static bool match(const char * pattern, const char * str)$/;"	f	file:
match	utility.h	/^  bool match(const char * str, int flags = 0) const$/;"	f	class:regular_expression
match_ctx_add_entry	regex/regexec.c	/^match_ctx_add_entry (mctx, node, str_idx, from, to)$/;"	f	file:
match_ctx_add_sublast	regex/regexec.c	/^match_ctx_add_sublast (subtop, node, str_idx)$/;"	f	file:
match_ctx_add_subtop	regex/regexec.c	/^match_ctx_add_subtop (mctx, node, str_idx)$/;"	f	file:
match_ctx_clean	regex/regexec.c	/^match_ctx_clean (mctx)$/;"	f	file:
match_ctx_clear_flag	regex/regexec.c	/^match_ctx_clear_flag (mctx)$/;"	f	file:
match_ctx_free	regex/regexec.c	/^match_ctx_free (mctx)$/;"	f	file:
match_ctx_free_subtops	regex/regexec.c	/^match_ctx_free_subtops (mctx)$/;"	f	file:
match_ctx_init	regex/regexec.c	/^match_ctx_init (mctx, eflags, input, n)$/;"	f	file:
match_last	regex/regex_internal.h	/^  int match_last;$/;"	m	struct:__anon125
matchcpy	atacmds.cpp	/^static bool matchcpy(char * dest, size_t size, const char * src, const regmatch_t & srcmatch)$/;"	f	namespace:__anon51
matchtoi	atacmds.cpp	/^static inline int matchtoi(const char * src, const regmatch_t & srcmatch, int defval)$/;"	f	namespace:__anon51
max_mb_elem_len	regex/regex_internal.h	/^  int max_mb_elem_len;$/;"	m	struct:__anon125
max_num_commands	atacmds.cpp	/^  enum { max_num_commands = 32 };$/;"	e	enum:__anon51::parsed_ata_device::__anon52	file:
max_op_limit	atacmds.h	/^  signed char max_op_limit;         \/\/ 6: Maximum recommended continuous operating temperature$/;"	m	struct:ata_sct_temperature_history_table
max_power	nvmecmds.h	/^  unsigned short  max_power; \/\/ centiwatts$/;"	m	struct:smartmontools::nvme_id_power_state
max_sense_len	scsicmds.h	/^    size_t max_sense_len; \/* [in]: max number of bytes to write to sensep *\/$/;"	m	struct:scsi_cmnd_io
max_temp	atacmds.h	/^  signed char max_temp;             \/\/ 202: Maximum temperature this power cycle$/;"	m	struct:ata_sct_status_response
maxnames	os_solaris.cpp	/^        int  maxnames;$/;"	m	struct:pathlist	file:
mb_partial	regex/regex_internal.h	/^  unsigned int mb_partial : 1;$/;"	m	struct:__anon119
mbchars	regex/regex_internal.h	/^  wchar_t *mbchars;$/;"	m	struct:__anon118
mbcset	regex/regex_internal.h	/^    re_charset_t *mbcset;	\/* for COMPLEX_BRACKET *\/$/;"	m	union:__anon119::__anon120
mbox	megaraid.h	/^  megacmd_t     mbox;$/;"	m	struct:uioctl_t
mbox	megaraid.h	/^  } mbox;$/;"	m	struct:megasas_dcmd_frame	typeref:union:megasas_dcmd_frame::__anon46
mbs	regex/regex_internal.h	/^  unsigned char *mbs;$/;"	m	struct:re_string_t
mbs_case	regex/regex_internal.h	/^  unsigned char *mbs_case;$/;"	m	struct:re_string_t
mc	nvmecmds.h	/^  unsigned char   mc;$/;"	m	struct:smartmontools::nvme_id_ns
mdts	nvmecmds.h	/^  unsigned char   mdts;$/;"	m	struct:smartmontools::nvme_id_ctrl
mechanism_status	os_qnxnto.h	/^	} mechanism_status;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon73
media_errors	nvmecmds.h	/^  unsigned char  media_errors[16];$/;"	m	struct:smartmontools::nvme_smart_log
medium_type_code	os_qnxnto.h	/^        uchar_t         medium_type_code;$/;"	m	struct:_cdb::_format_unit_old
mega_passthru	megaraid.h	/^} __attribute__((packed)) mega_passthru;$/;"	t	typeref:struct:__anon41
megacmd_t	megaraid.h	/^} __attribute__((packed)) megacmd_t;$/;"	t	typeref:struct:__anon42
megadev_cmd	os_linux.cpp	/^bool linux_megaraid_device::megadev_cmd(int cdbLen, void *cdb, $/;"	f	class:os_linux::linux_megaraid_device
megasas_cmd	os_linux.cpp	/^bool linux_megaraid_device::megasas_cmd(int cdbLen, void *cdb, $/;"	f	class:os_linux::linux_megaraid_device
megasas_dcmd_cmd	os_linux.cpp	/^linux_smart_interface::megasas_dcmd_cmd(int bus_no, uint32_t opcode, void *buf,$/;"	f	class:os_linux::linux_smart_interface
megasas_dcmd_frame	megaraid.h	/^struct megasas_dcmd_frame {$/;"	s
megasas_header	megaraid.h	/^struct megasas_header {$/;"	s
megasas_iocpacket	megaraid.h	/^struct megasas_iocpacket {$/;"	s
megasas_pd_add_list	os_linux.cpp	/^linux_smart_interface::megasas_pd_add_list(int bus_no, smart_device_list & devlist)$/;"	f	class:os_linux::linux_smart_interface
megasas_pd_address	megaraid.h	/^struct megasas_pd_address {$/;"	s
megasas_pd_list	megaraid.h	/^struct megasas_pd_list {$/;"	s
megasas_pthru_frame	megaraid.h	/^struct megasas_pthru_frame {$/;"	s
megasas_sge32	megaraid.h	/^struct megasas_sge32 {$/;"	s
megasas_sge64	megaraid.h	/^struct megasas_sge64 {$/;"	s
megasas_sgl	megaraid.h	/^union megasas_sgl {$/;"	u
merge_state_array	regex/regexec.c	/^merge_state_array (dfa, dst, src, num)$/;"	f	file:
message_credits	os_freebsd.h	/^	TW_UINT16	message_credits;$/;"	m	struct:tw_cl_command_init_connect
message_credits	os_freebsd.h	/^    u_int16_t	message_credits;$/;"	m	struct:__anon2
message_credits	os_linux.h	/^    unsigned short message_credits;$/;"	m	union:TW_Command::__anon34
message_credits	os_linux.h	/^    unsigned short message_credits;$/;"	m	union:TW_Command_9000::__anon22
metadata	linux_nvme_ioctl.h	/^	__u64	metadata;$/;"	m	struct:nvme_passthru_cmd
metadata	linux_nvme_ioctl.h	/^	__u64	metadata;$/;"	m	struct:nvme_user_io
metadata_len	linux_nvme_ioctl.h	/^	__u32	metadata_len;$/;"	m	struct:nvme_passthru_cmd
min_op_limit	atacmds.h	/^  signed char min_op_limit;         \/\/ 8: Minimum recommended continuous operating limit$/;"	m	struct:ata_sct_temperature_history_table
min_temp	atacmds.h	/^  signed char min_temp;             \/\/ 201: Minimum temperature this power cycle$/;"	m	struct:ata_sct_status_response
minor_rev_num	atacmds.h	/^  unsigned short minor_rev_num;$/;"	m	struct:ata_identify_device
missing_option	os_linux.cpp	/^smart_device * linux_smart_interface::missing_option(const char * opt)$/;"	f	class:os_linux::linux_smart_interface
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mn	nvmecmds.h	/^  char            mn[40];$/;"	m	struct:smartmontools::nvme_id_ctrl
mode	atacmds.h	/^    int mode;         \/\/ SEL_*, see above$/;"	m	struct:ata_selective_selftest_args::span_args
mode_select	os_qnxnto.h	/^	} mode_select;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon59
mode_select10	os_qnxnto.h	/^	} mode_select10;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon60
mode_sense	os_qnxnto.h	/^	} mode_sense;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon62
mode_sense10	os_qnxnto.h	/^	} mode_sense10;$/;"	m	union:_cdb	typeref:struct:_cdb::_mode_sense10
mode_t	smartd.cpp	/^typedef unsigned short mode_t;$/;"	t	file:
model	atacmds.h	/^  unsigned char  model[40];$/;"	m	struct:ata_identify_device
modelfamily	knowndrives.h	/^  const char * modelfamily;$/;"	m	struct:drive_settings
modelregexp	knowndrives.h	/^  const char * modelregexp;$/;"	m	struct:drive_settings
modese_len	scsicmds.h	/^    UINT8 modese_len;   \/* 0 (don't know), 6 or 10 *\/$/;"	m	struct:scsi_iec_mode_page
modese_len	scsiprint.cpp	/^static int modese_len = 0;$/;"	v	file:
modese_len	smartd.cpp	/^  unsigned char modese_len;               \/\/ mode sense\/select cmd len: 0 (don't$/;"	m	struct:temp_dev_state	file:
monitor_attr_flags	smartd.cpp	/^  attribute_flags monitor_attr_flags;     \/\/ MONITOR_* flags for each attribute$/;"	m	struct:dev_config	file:
mostrecenttest	atacmds.h	/^  unsigned char mostrecenttest;$/;"	m	struct:ata_smart_selftestlog
mptr	freebsd_nvme_ioctl.h	/^	uint64_t mptr;		\/* metadata pointer *\/$/;"	m	struct:nvme_command
ms	nvmecmds.h	/^  unsigned short  ms;$/;"	m	struct:smartmontools::nvme_lbaf
msg	dev_interface.h	/^    std::string msg; \/\/\/< Error message$/;"	m	struct:smart_device::error_info
mtfa	nvmecmds.h	/^  unsigned short  mtfa;$/;"	m	struct:smartmontools::nvme_id_ctrl
must_write	smartd.cpp	/^  bool must_write;                        \/\/ true if persistent part should be written$/;"	m	struct:temp_dev_state	file:
my_index	getopt/getopt.c	/^my_index (str, chr)$/;"	f	file:
my_index	getopt/getopt.c	206;"	d	file:
nabo	nvmecmds.h	/^  unsigned short  nabo;$/;"	m	struct:smartmontools::nvme_id_ns
nabsn	nvmecmds.h	/^  unsigned short  nabsn;$/;"	m	struct:smartmontools::nvme_id_ns
nabspf	nvmecmds.h	/^  unsigned short  nabspf;$/;"	m	struct:smartmontools::nvme_id_ns
nacwu	nvmecmds.h	/^  unsigned short  nacwu;$/;"	m	struct:smartmontools::nvme_id_ns
name	atacmds.cpp	/^  const char * name;$/;"	m	struct:format_name_entry	file:
name	atacmds.h	/^    std::string name; \/\/ Attribute name, empty for default$/;"	m	struct:ata_vendor_attr_defs::entry
name	ataprint.cpp	/^  const char * name;$/;"	m	struct:devstat_entry_info	file:
name	getopt/getopt.h	/^  const char *name;$/;"	m	struct:option
name	os_qnxnto.h	/^  char *name;$/;"	m	struct:_drive_attribute
name	regex/regex_internal.h	/^    unsigned char *name;$/;"	m	union:__anon128::__anon129
name	scsicmds.cpp	/^    const char * name;$/;"	m	struct:scsi_opcode_name	file:
name	smartd.cpp	/^  std::string name;                       \/\/ Device name (with optional extra info)$/;"	m	struct:dev_config	file:
name2command	atacmds.cpp	/^static int name2command(const char * s)$/;"	f	namespace:__anon51
names	os_solaris.cpp	/^        char **names;$/;"	m	struct:pathlist	file:
nawun	nvmecmds.h	/^  unsigned short  nawun;$/;"	m	struct:smartmontools::nvme_id_ns
nawupf	nvmecmds.h	/^  unsigned short  nawupf;$/;"	m	struct:smartmontools::nvme_id_ns
nbackref	regex/regex_internal.h	/^  int nbackref; \/* The number of backreference in this dfa.  *\/$/;"	m	struct:re_dfa_t
nbkref_ents	regex/regex_internal.h	/^  int nbkref_ents;$/;"	m	struct:__anon125
nblocks	linux_nvme_ioctl.h	/^	__u16	nblocks;$/;"	m	struct:nvme_user_io
ncap	nvmecmds.h	/^  uint64_t        ncap;$/;"	m	struct:smartmontools::nvme_id_ns
nchar_classes	regex/regex_internal.h	/^  int nchar_classes;$/;"	m	struct:__anon118
ncoll_syms	regex/regex_internal.h	/^  int ncoll_syms;$/;"	m	struct:__anon118
ncr	os_qnxnto.h	/^		uchar_t		ncr;         \/\/ notification class request$/;"	m	struct:_cdb::__anon76
nelem	regex/regex_internal.h	/^  int nelem;$/;"	m	struct:__anon116
nequiv_classes	regex/regex_internal.h	/^  int nequiv_classes;$/;"	m	struct:__anon118
net_dev_ata_disk	os_netbsd.cpp	/^static const char *net_dev_ata_disk = "wd";$/;"	v	file:
net_dev_ata_disk	os_openbsd.cpp	/^static const char *net_dev_ata_disk = "wd";$/;"	v	file:
net_dev_ata_disk	os_qnxnto.cpp	/^static const char *net_dev_ata_disk = "hd";$/;"	v	file:
net_dev_prefix	os_netbsd.cpp	/^static const char *net_dev_prefix = "\/dev\/";$/;"	v	file:
net_dev_prefix	os_openbsd.cpp	/^static const char *net_dev_prefix = "\/dev\/";$/;"	v	file:
net_dev_prefix	os_qnxnto.cpp	/^static const char *net_dev_prefix = "\/dev\/";$/;"	v	file:
net_dev_scsi_disk	os_netbsd.cpp	/^static const char *net_dev_scsi_disk = "sd";$/;"	v	file:
net_dev_scsi_disk	os_openbsd.cpp	/^static const char *net_dev_scsi_disk = "sd";$/;"	v	file:
net_dev_scsi_tape	os_netbsd.cpp	/^static const char *net_dev_scsi_tape = "enrst";$/;"	v	file:
net_dev_scsi_tape	os_openbsd.cpp	/^static const char *net_dev_scsi_tape = "st";$/;"	v	file:
never_called	dev_interface.h	/^  enum do_not_use_in_implementation_classes { never_called };$/;"	e	enum:smart_device::do_not_use_in_implementation_classes
newcommand	os_linux.h	/^    TW_Command_Apache newcommand;$/;"	m	union:TAG_TW_Command_Full_9000::__anon31
newline_anchor	regex/regex.h	/^  unsigned newline_anchor : 1;$/;"	m	struct:re_pattern_buffer
next	os_win32/wmiquery.cpp	/^bool wbem_enumerator::next(wbem_object & obj)$/;"	f	class:wbem_enumerator
next	regex/regex_internal.h	/^  int next;$/;"	m	struct:bin_tree_t
next_idx	regex/regex_internal.h	/^  int next_idx;$/;"	m	struct:__anon122
next_last_offset	regex/regex_internal.h	/^  int next_last_offset;$/;"	m	struct:__anon124
next_scheduled_test	smartd.cpp	/^static char next_scheduled_test(const dev_config & cfg, dev_state & state, bool scsi, time_t usetime = 0)$/;"	f	file:
nextchar	getopt/getopt.c	/^static char *nextchar;$/;"	v	file:
nextline	atacmds.cpp	/^static const char * nextline(const char * s, int & lineno)$/;"	f	namespace:__anon51
nexts	regex/regex_internal.h	/^  int *nexts;$/;"	m	struct:re_dfa_t
nguid	nvmecmds.h	/^  unsigned char   nguid[16];$/;"	m	struct:smartmontools::nvme_id_ns
nlasts	regex/regex_internal.h	/^  int nlasts; \/* The number of LASTS.  *\/$/;"	m	struct:__anon124
nlbaf	nvmecmds.h	/^  unsigned char   nlbaf;$/;"	m	struct:smartmontools::nvme_id_ns
nmbchars	regex/regex_internal.h	/^  int nmbchars;$/;"	m	struct:__anon118
nme	smartd.cpp	/^    struct scsiNonMediumError nme;$/;"	m	struct:persistent_dev_state::scsi_nonmedium_error_t	typeref:struct:persistent_dev_state::scsi_nonmedium_error_t::scsiNonMediumError	file:
nmic	nvmecmds.h	/^  unsigned char   nmic;$/;"	m	struct:smartmontools::nvme_id_ns
nn	nvmecmds.h	/^  unsigned int    nn;$/;"	m	struct:smartmontools::nvme_id_ctrl
nnames	os_solaris.cpp	/^        int  nnames;$/;"	m	struct:pathlist	file:
no	dev_interface.h	/^    int no;          \/\/\/< Error number$/;"	m	struct:smart_device::error_info
no_argument	getopt/getopt.h	110;"	d
no_data	dev_interface.h	/^    no_data = 0x0, data_out = 0x1, data_in = 0x2, data_io = 0x3$/;"	e	enum:nvme_cmd_in::__anon134
no_data	dev_interface.h	/^  enum { no_data = 0, data_in, data_out } direction; \/\/\/< I\/O direction$/;"	e	enum:ata_cmd_in::__anon132
no_sub	regex/regex.h	/^  unsigned no_sub : 1;$/;"	m	struct:re_pattern_buffer
node	regex/regex_internal.h	/^  int node;$/;"	m	struct:__anon123
node	regex/regex_internal.h	/^  int node;$/;"	m	struct:__anon124
node	regex/regex_internal.h	/^  int node;$/;"	m	struct:re_backref_cache_entry
node	regex/regex_internal.h	/^  int node;$/;"	m	struct:re_fail_stack_ent_t
node_idx	regex/regex_internal.h	/^  int node_idx;$/;"	m	struct:bin_tree_t
nodes	regex/regex_internal.h	/^  re_node_set nodes;$/;"	m	struct:re_dfastate_t
nodes	regex/regex_internal.h	/^  re_token_t *nodes;$/;"	m	struct:re_dfa_t
nodes_alloc	regex/regex_internal.h	/^  int nodes_alloc;$/;"	m	struct:re_dfa_t
nodes_len	regex/regex_internal.h	/^  int nodes_len;$/;"	m	struct:re_dfa_t
nodist_EXTRA_smartctl_SOURCES	Makefile	/^nodist_EXTRA_smartctl_SOURCES = os_solaris_ata.s$/;"	m
nodist_EXTRA_smartd_SOURCES	Makefile	/^nodist_EXTRA_smartd_SOURCES = os_solaris_ata.s$/;"	m
non_match	regex/regex_internal.h	/^  unsigned int non_match : 1;$/;"	m	struct:__anon118
nonempty	utility.cpp	/^bool nonempty(const void * data, int size)$/;"	f
nonoption_flags_len	getopt/getopt.c	/^static int nonoption_flags_len;$/;"	v	file:
nonoption_flags_max_len	getopt/getopt.c	/^static int nonoption_flags_max_len;$/;"	v	file:
not_allowed_in_filename	smartd.cpp	/^static bool not_allowed_in_filename(char c)$/;"	f	file:
not_bol	regex/regex.h	/^  unsigned not_bol : 1;$/;"	m	struct:re_pattern_buffer
not_cap_conveyance	smartd.cpp	/^  bool not_cap_conveyance;$/;"	m	struct:temp_dev_state	file:
not_cap_long	smartd.cpp	/^  bool not_cap_long;$/;"	m	struct:temp_dev_state	file:
not_cap_offline	smartd.cpp	/^  bool not_cap_offline;                   \/\/ true == not capable of offline testing$/;"	m	struct:temp_dev_state	file:
not_cap_selective	smartd.cpp	/^  bool not_cap_selective;$/;"	m	struct:temp_dev_state	file:
not_cap_short	smartd.cpp	/^  bool not_cap_short;$/;"	m	struct:temp_dev_state	file:
not_eol	regex/regex.h	/^  unsigned not_eol : 1;$/;"	m	struct:re_pattern_buffer
npss	nvmecmds.h	/^  unsigned char   npss;$/;"	m	struct:smartmontools::nvme_id_ctrl
nranges	regex/regex_internal.h	/^  int nranges;$/;"	m	struct:__anon118
nsector	os_linux.h	/^    unsigned nsector		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
nsector_hob	os_linux.h	/^    unsigned nsector_hob	: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
nsectors	ataprint.h	/^  unsigned nsectors; \/\/ # Sectors$/;"	m	struct:ata_log_request
nsfeat	nvmecmds.h	/^  unsigned char   nsfeat;$/;"	m	struct:smartmontools::nvme_id_ns
nsid	dev_interface.h	/^  unsigned nsid; \/\/\/< Namespace ID$/;"	m	struct:nvme_cmd_in
nsid	freebsd_nvme_ioctl.h	/^	uint32_t nsid;		\/* namespace identifier *\/$/;"	m	struct:nvme_command
nsid	linux_nvme_ioctl.h	/^	__u32	nsid;$/;"	m	struct:nvme_passthru_cmd
nsid	nvmecmds.h	/^  unsigned int    nsid;$/;"	m	struct:smartmontools::nvme_error_log_page
nsub_tops	regex/regex_internal.h	/^  int nsub_tops;$/;"	m	struct:__anon125
nsze	nvmecmds.h	/^  uint64_t        nsze;$/;"	m	struct:smartmontools::nvme_id_ns
num	regex/regex_internal.h	/^  int num;$/;"	m	struct:re_fail_stack_t
num	regex/regex_internal.h	/^  int num;$/;"	m	struct:re_state_table_entry
num_blocks	os_qnxnto.h	/^		uchar_t		num_blocks[2];$/;"	m	struct:_cdb::__anon66
num_devstat_infos	ataprint.cpp	/^const int num_devstat_infos = sizeof(devstat_infos)\/sizeof(devstat_infos[0]);$/;"	v
num_err_log_entries	nvmecmds.h	/^  unsigned char  num_err_log_entries[16];$/;"	m	struct:smartmontools::nvme_smart_log
num_format_names	atacmds.cpp	/^const unsigned num_format_names = sizeof(format_names)\/sizeof(format_names[0]);$/;"	v
num_identify_descriptions	ataidentify.cpp	/^const int num_identify_descriptions = sizeof(identify_descriptions)\/sizeof(identify_descriptions[0]);$/;"	v
num_old_vendor_opts	atacmds.cpp	/^const unsigned num_old_vendor_opts = sizeof(map_old_vendor_opts)\/sizeof(map_old_vendor_opts[0]);$/;"	v
num_pages	scsicmds.h	/^    int num_pages() const { return num_valid; }$/;"	f	class:supported_vpd_pages
num_regs	regex/regex.h	/^  unsigned num_regs;$/;"	m	struct:re_registers
num_sectors	smartd.cpp	/^  uint64_t num_sectors;                   \/\/ Number of sectors$/;"	m	struct:temp_dev_state	file:
num_sig_handlers	os_win32/daemon_win32.cpp	/^static int num_sig_handlers = 0;$/;"	v	file:
num_spans	atacmds.h	/^  int num_spans;      \/\/ Number of spans$/;"	m	struct:ata_selective_selftest_args
num_test_types	smartd.cpp	/^static const unsigned num_test_types = sizeof(test_type_chars)-1;$/;"	v	file:
num_valid	scsicmds.h	/^    int num_valid;      \/* 0 or less for invalid *\/$/;"	m	class:supported_vpd_pages
numsectors	atacmds.h	/^  unsigned char numsectors;$/;"	m	struct:ata_smart_log_entry
numsgelements	megaraid.h	/^  uint8_t  numsgelements;$/;"	m	struct:__anon41
numstatus	megaraid.h	/^  uint8_t   numstatus;$/;"	m	struct:__anon42
nuse	nvmecmds.h	/^  uint64_t        nuse;$/;"	m	struct:smartmontools::nvme_id_ns
nvmcap	nvmecmds.h	/^  unsigned char   nvmcap[16];$/;"	m	struct:smartmontools::nvme_id_ns
nvmePrintMain	nvmeprint.cpp	/^int nvmePrintMain(nvme_device * device, const nvme_print_options & options)$/;"	f
nvme_admin_cmd	linux_nvme_ioctl.h	56;"	d
nvme_admin_get_log_page	nvmecmds.h	/^  nvme_admin_get_log_page  = 0x02,$/;"	e	enum:smartmontools::nvme_admin_opcode
nvme_admin_identify	nvmecmds.h	/^  nvme_admin_identify      = 0x06,$/;"	e	enum:smartmontools::nvme_admin_opcode
nvme_admin_opcode	nvmecmds.h	/^enum nvme_admin_opcode {$/;"	g	namespace:smartmontools
nvme_cmd_in	dev_interface.h	/^  nvme_cmd_in()$/;"	f	struct:nvme_cmd_in
nvme_cmd_in	dev_interface.h	/^struct nvme_cmd_in$/;"	s
nvme_cmd_out	dev_interface.h	/^   nvme_cmd_out()$/;"	f	struct:nvme_cmd_out
nvme_cmd_out	dev_interface.h	/^struct nvme_cmd_out$/;"	s
nvme_command	freebsd_nvme_ioctl.h	/^struct nvme_command$/;"	s
nvme_completion	freebsd_nvme_ioctl.h	/^struct nvme_completion {$/;"	s
nvme_completion_is_error	freebsd_nvme_ioctl.h	147;"	d
nvme_debugmode	nvmecmds.cpp	/^unsigned char nvme_debugmode = 0;$/;"	v
nvme_device	dev_interface.h	/^  explicit nvme_device(unsigned nsid)$/;"	f	class:nvme_device
nvme_device	dev_interface.h	/^class nvme_device$/;"	c
nvme_device_auto_ptr	dev_interface.h	/^typedef any_device_auto_ptr<nvme_device>  nvme_device_auto_ptr;$/;"	t
nvme_err_log_entries	smartd.cpp	/^  uint64_t nvme_err_log_entries;$/;"	m	struct:persistent_dev_state	file:
nvme_error_log_page	nvmecmds.h	/^struct nvme_error_log_page {$/;"	s	namespace:smartmontools
nvme_get_max_temp_kelvin	smartd.cpp	/^static int nvme_get_max_temp_kelvin(const nvme_smart_log & smart_log)$/;"	f	file:
nvme_id_ctrl	nvmecmds.h	/^struct nvme_id_ctrl {$/;"	s	namespace:smartmontools
nvme_id_ns	nvmecmds.h	/^struct nvme_id_ns {$/;"	s	namespace:smartmontools
nvme_id_power_state	nvmecmds.h	/^struct nvme_id_power_state {$/;"	s	namespace:smartmontools
nvme_lbaf	nvmecmds.h	/^struct nvme_lbaf {$/;"	s	namespace:smartmontools
nvme_pass_through	nvmecmds.cpp	/^static bool nvme_pass_through(nvme_device * device, const nvme_cmd_in & in)$/;"	f	file:
nvme_pass_through	nvmecmds.cpp	/^static bool nvme_pass_through(nvme_device * device, const nvme_cmd_in & in,$/;"	f	file:
nvme_pass_through	os_freebsd.cpp	/^bool freebsd_nvme_device::nvme_pass_through(const nvme_cmd_in & in, nvme_cmd_out & out)$/;"	f	class:os_freebsd::freebsd_nvme_device
nvme_pass_through	os_linux.cpp	/^bool linux_nvme_device::nvme_pass_through(const nvme_cmd_in & in, nvme_cmd_out & out)$/;"	f	class:os_linux::linux_nvme_device
nvme_pass_through	os_win32.cpp	/^bool win_nvme_device::nvme_pass_through(const nvme_cmd_in & in, nvme_cmd_out & out)$/;"	f	class:os_win32::win_nvme_device
nvme_passthru_cmd	linux_nvme_ioctl.h	/^struct nvme_passthru_cmd {$/;"	s
nvme_print_options	nvmeprint.h	/^  nvme_print_options()$/;"	f	struct:nvme_print_options
nvme_print_options	nvmeprint.h	/^struct nvme_print_options$/;"	s
nvme_pt_command	freebsd_nvme_ioctl.h	/^struct nvme_pt_command {$/;"	s
nvme_read_error_log	nvmecmds.cpp	/^bool nvme_read_error_log(nvme_device * device, nvme_error_log_page * error_log, unsigned num_entries)$/;"	f
nvme_read_id_ctrl	nvmecmds.cpp	/^bool nvme_read_id_ctrl(nvme_device * device, nvme_id_ctrl & id_ctrl)$/;"	f
nvme_read_id_ns	nvmecmds.cpp	/^bool nvme_read_id_ns(nvme_device * device, unsigned nsid, nvme_id_ns & id_ns)$/;"	f
nvme_read_identify	nvmecmds.cpp	/^static bool nvme_read_identify(nvme_device * device, unsigned nsid,$/;"	f	file:
nvme_read_log_page	nvmecmds.cpp	/^bool nvme_read_log_page(nvme_device * device, unsigned char lid, void * data, unsigned size)$/;"	f
nvme_read_smart_log	nvmecmds.cpp	/^bool nvme_read_smart_log(nvme_device * device, nvme_smart_log & smart_log)$/;"	f
nvme_smart_log	nvmecmds.h	/^struct nvme_smart_log {$/;"	s	namespace:smartmontools
nvme_status	freebsd_nvme_ioctl.h	/^struct nvme_status {$/;"	s
nvme_user_io	linux_nvme_ioctl.h	/^struct nvme_user_io {$/;"	s
nvmecmds_cvsid	nvmecmds.cpp	/^const char * nvmecmds_cvsid = "$Id: nvmecmds.cpp 4313 2016-05-01 16:17:53Z chrfranke $"$/;"	v
nvmeprint_cvsid	nvmeprint.cpp	/^const char * nvmeprint_cvsid = "$Id: nvmeprint.cpp 4311 2016-04-27 21:03:01Z chrfranke $"$/;"	v
nvscc	nvmecmds.h	/^  unsigned char   nvscc;$/;"	m	struct:smartmontools::nvme_id_ctrl
oacs	nvmecmds.h	/^  unsigned short  oacs;$/;"	m	struct:smartmontools::nvme_id_ctrl
oaes	nvmecmds.h	/^  unsigned int    oaes;$/;"	m	struct:smartmontools::nvme_id_ctrl
offense_num	cissio_freebsd.h	/^	u_int8_t	offense_num;$/;"	m	struct:__anon107::__anon109
offense_size	cissio_freebsd.h	/^	u_int8_t	offense_size;$/;"	m	struct:__anon107::__anon109
offense_value	cissio_freebsd.h	/^	u_int32_t	offense_value;$/;"	m	struct:__anon107::__anon109
offl_pending_id	smartd.cpp	/^  unsigned char offl_pending_id;          \/\/ ID of offline uncorrectable sector count, 0 if none$/;"	m	struct:dev_config	file:
offl_pending_incr	smartd.cpp	/^  bool curr_pending_incr, offl_pending_incr; \/\/ True if current\/offline pending values increase$/;"	m	struct:dev_config	file:
offl_pending_set	smartd.cpp	/^  bool curr_pending_set,  offl_pending_set;  \/\/ True if '-C', '-U' set in smartd.conf$/;"	m	struct:dev_config	file:
offline_data_collection_capability	atacmds.h	/^  unsigned char offline_data_collection_capability;$/;"	m	struct:ata_smart_values
offline_data_collection_status	atacmds.h	/^  unsigned char offline_data_collection_status;$/;"	m	struct:ata_smart_values
offline_started	smartd.cpp	/^  bool offline_started;                   \/\/ true if offline data collection was started$/;"	m	struct:temp_dev_state	file:
offlinests	smartd.cpp	/^  bool offlinests;                        \/\/ Monitor changes in offline data collection status$/;"	m	struct:dev_config	file:
offlinests_ns	smartd.cpp	/^  bool offlinests_ns;                     \/\/ Disable auto standby if in progress$/;"	m	struct:dev_config	file:
oldcommand	os_linux.h	/^    TW_Command_9000   oldcommand;$/;"	m	union:TAG_TW_Command_Full_9000::__anon31
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
on_exit_event_logger	os_win32/syslog_win32.cpp	/^static void on_exit_event_logger(void)$/;"	f	file:
oncs	nvmecmds.h	/^  unsigned short  oncs;$/;"	m	struct:smartmontools::nvme_id_ctrl
op_code	os_qnxnto.h	/^        uchar_t         op_code;$/;"	m	struct:_cdb::_format_unit
op_code	os_qnxnto.h	/^        uchar_t         op_code;$/;"	m	struct:_cdb::_format_unit_old
opc	freebsd_nvme_ioctl.h	/^	uint16_t opc	:  8;	\/* opcode *\/$/;"	m	struct:nvme_command
opcode	dev_interface.h	/^  unsigned char opcode; \/\/\/< Opcode (CDW0 07:00)$/;"	m	struct:nvme_cmd_in
opcode	linux_nvme_ioctl.h	/^	__u8	opcode;$/;"	m	struct:nvme_passthru_cmd
opcode	linux_nvme_ioctl.h	/^	__u8	opcode;$/;"	m	struct:nvme_user_io
opcode	megaraid.h	/^      uint8_t  opcode;$/;"	m	struct:uioctl_t::__anon44::__anon45
opcode	megaraid.h	/^  u32 opcode;  \/*18h *\/$/;"	m	struct:megasas_dcmd_frame
opcode	megaraid.h	/^  uint8_t   opcode;$/;"	m	struct:__anon42
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;		\/* TWE_OP_CHECKSTATUS *\/$/;"	m	struct:__anon6
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;		\/* TWE_OP_GETPARAM, TWE_OP_SETPARAM *\/$/;"	m	struct:__anon7
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;		\/* TWE_OP_HOTSWAP *\/$/;"	m	struct:__anon4
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;		\/* TWE_OP_INITCONNECTION *\/$/;"	m	struct:__anon2
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;		\/* TWE_OP_READ\/TWE_OP_WRITE *\/$/;"	m	struct:__anon3
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;		\/* TWE_OP_REBUILDUNIT *\/$/;"	m	struct:__anon8
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;		\/* TWE_OP_SETATAFEATURE *\/$/;"	m	struct:__anon5
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;$/;"	m	struct:__anon10
opcode	os_freebsd.h	/^    u_int8_t	opcode:5;$/;"	m	struct:__anon9
opcode	os_linux.h	/^    unsigned char opcode:5;$/;"	m	struct:TAG_TW_Command_Apache::__anon28
opcode	os_linux.h	/^    unsigned char opcode:5;$/;"	m	struct:TAG_TW_Passthru::__anon19
opcode	os_linux.h	/^    unsigned char opcode:5;$/;"	m	struct:TW_Command::__anon32
opcode	os_linux.h	/^    unsigned char opcode:5;$/;"	m	struct:TW_Command_9000::__anon20
opcode	os_linux.h	/^  unsigned char opcode;$/;"	m	struct:TAG_TW_Ioctl
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_ata_pass_thru
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon53
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon54
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon55
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon56
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon57
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon58
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon59
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon60
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon61
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon62
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon63
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon64
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon65
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon66
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon67
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon68
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon69
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon70
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon71
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon72
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon73
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon74
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon75
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon76
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon77
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon78
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon79
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon80
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon81
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon82
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon83
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon84
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon85
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon86
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon87
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon88
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon89
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon90
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::__anon91
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::_ata_pass_thru
opcode	os_qnxnto.h	/^		uchar_t		opcode;$/;"	m	struct:_cdb::_mode_sense10
opcode	scsicmds.cpp	/^    UINT8 opcode;$/;"	m	struct:scsi_opcode_name	file:
opcode_name_arr	scsicmds.cpp	/^static struct scsi_opcode_name opcode_name_arr[] = {$/;"	v	typeref:struct:scsi_opcode_name	file:
open	atacmds.cpp	/^bool parsed_ata_device::open()$/;"	f	class:__anon51::parsed_ata_device
open	dev_interface.cpp	/^bool tunnelled_device_base::open()$/;"	f	class:tunnelled_device_base
open	dev_legacy.cpp	/^bool legacy_smart_device::open()$/;"	f	class:os::legacy_smart_device
open	os_darwin.cpp	/^bool darwin_smart_device::open()$/;"	f	class:os::darwin_smart_device
open	os_freebsd.cpp	/^bool freebsd_atacam_device::open(){$/;"	f	class:os_freebsd::freebsd_atacam_device
open	os_freebsd.cpp	/^bool freebsd_cciss_device::open()$/;"	f	class:os_freebsd::freebsd_cciss_device
open	os_freebsd.cpp	/^bool freebsd_escalade_device::open()$/;"	f	class:os_freebsd::freebsd_escalade_device
open	os_freebsd.cpp	/^bool freebsd_highpoint_device::open()$/;"	f	class:os_freebsd::freebsd_highpoint_device
open	os_freebsd.cpp	/^bool freebsd_nvme_device::open()$/;"	f	class:os_freebsd::freebsd_nvme_device
open	os_freebsd.cpp	/^bool freebsd_scsi_device::open(){$/;"	f	class:os_freebsd::freebsd_scsi_device
open	os_freebsd.cpp	/^bool freebsd_smart_device::open()$/;"	f	class:os_freebsd::freebsd_smart_device
open	os_linux.cpp	/^bool linux_aacraid_device::open()$/;"	f	class:os_linux::linux_aacraid_device
open	os_linux.cpp	/^bool linux_escalade_device::open()$/;"	f	class:os_linux::linux_escalade_device
open	os_linux.cpp	/^bool linux_megaraid_device::open()$/;"	f	class:os_linux::linux_megaraid_device
open	os_linux.cpp	/^bool linux_nvme_device::open()$/;"	f	class:os_linux::linux_nvme_device
open	os_linux.cpp	/^bool linux_smart_device::open()$/;"	f	class:os_linux::linux_smart_device
open	os_win32.cpp	/^bool win_aacraid_device::open()$/;"	f	class:os_win32::win_aacraid_device
open	os_win32.cpp	/^bool win_areca_ata_device::open()$/;"	f	class:os_win32::win_areca_ata_device
open	os_win32.cpp	/^bool win_areca_scsi_device::open()$/;"	f	class:os_win32::win_areca_scsi_device
open	os_win32.cpp	/^bool win_ata_device::open()$/;"	f	class:os_win32::win_ata_device
open	os_win32.cpp	/^bool win_ata_device::open(bool query_device)$/;"	f	class:os_win32::win_ata_device
open	os_win32.cpp	/^bool win_ata_device::open(int phydrive, int logdrive, const char * options, int port, bool query_device)$/;"	f	class:os_win32::win_ata_device
open	os_win32.cpp	/^bool win_csmi_device::open()$/;"	f	class:os_win32::win_csmi_device
open	os_win32.cpp	/^bool win_nvme_device::open()$/;"	f	class:os_win32::win_nvme_device
open	os_win32.cpp	/^bool win_scsi_device::open()$/;"	f	class:os_win32::win_scsi_device
open	os_win32.cpp	/^bool win_scsi_device::open(int pd_num, int ld_num, int tape_num, int \/*sub_addr*\/)$/;"	f	class:os_win32::win_scsi_device
open	os_win32.cpp	/^bool win_tw_cli_device::open()$/;"	f	class:os_win32::win_tw_cli_device
open	scsiata.cpp	/^bool usbjmicron_device::open()$/;"	f	class:sat::usbjmicron_device
open	utility.h	/^  bool open(const char * name, const char * mode)$/;"	f	class:stdio_file
open	utility.h	/^  void open(FILE * f, bool owner = false)$/;"	f	class:stdio_file
open_event	os_win32/daemon_win32.cpp	/^static HANDLE open_event(int sig)$/;"	f	file:
open_scsi	os_win32.cpp	/^bool win_csmi_device::open_scsi()$/;"	f	class:os_win32::win_csmi_device
open_scsi	os_win32.cpp	/^bool win_nvme_device::open_scsi(int n)$/;"	f	class:os_win32::win_nvme_device
openlog	os_win32/syslog_win32.cpp	/^void openlog(const char *ident, int logopt, int facility)$/;"	f
operator !	dev_interface.h	/^  bool operator !() const$/;"	f	class:any_device_auto_ptr
operator !	os_win32/wmiquery.h	/^  bool operator!() const$/;"	f	class:com_intf_ptr
operator !	utility.h	/^  bool operator!() const$/;"	f	class:stdio_file
operator *	dev_interface.h	/^  device_type & operator*() const$/;"	f	class:any_device_auto_ptr
operator *	knowndrives.cpp	/^  char operator*() const$/;"	f	class:stdin_iterator
operator ++	knowndrives.cpp	/^  stdin_iterator & operator++()$/;"	f	class:stdin_iterator
operator ->	dev_interface.h	/^  device_type * operator->() const$/;"	f	class:any_device_auto_ptr
operator ->	os_win32/wmiquery.h	/^  T * operator->()$/;"	f	class:com_intf_ptr
operator =	dev_interface.h	/^  ata_reg_alias_16 & operator=(unsigned short x)$/;"	f	class:ata_reg_alias_16
operator =	dev_interface.h	/^  ata_reg_alias_48 & operator=(uint64_t x)$/;"	f	class:ata_reg_alias_48
operator =	dev_interface.h	/^  ata_register & operator=(unsigned char x)$/;"	f	class:ata_register
operator =	dev_interface.h	/^  void operator=(device_type * dev)$/;"	f	class:any_device_auto_ptr
operator =	utility.cpp	/^regular_expression & regular_expression::operator=(const regular_expression & x)$/;"	f	class:regular_expression
operator BSTR	os_win32/wmiquery.h	/^  operator BSTR()$/;"	f	class:com_bstr
operator FILE *	utility.h	/^  operator FILE * ()$/;"	f	class:stdio_file
operator []	atacmds.h	/^  const entry & operator[](unsigned char id) const$/;"	f	class:ata_vendor_attr_defs
operator []	atacmds.h	/^  entry & operator[](unsigned char id)$/;"	f	class:ata_vendor_attr_defs
operator []	knowndrives.cpp	/^  char operator[](int i) const$/;"	f	class:stdin_iterator
operator []	knowndrives.cpp	/^const drive_settings & drive_database::operator[](unsigned i)$/;"	f	class:drive_database
operator bool	dev_interface.h	/^  operator bool() const$/;"	f	class:any_device_auto_ptr
operator bool	os_win32/wmiquery.h	/^  operator bool() const$/;"	f	class:com_intf_ptr
operator uint64_t	dev_interface.h	/^  operator uint64_t() const$/;"	f	class:ata_reg_alias_48
operator unsigned char	dev_interface.h	/^  operator unsigned char() const$/;"	f	class:ata_register
operator unsigned short	dev_interface.h	/^  operator unsigned short() const$/;"	f	class:ata_reg_alias_16
opr	regex/regex_internal.h	/^  } opr;$/;"	m	struct:__anon119	typeref:union:__anon119::__anon120
opr	regex/regex_internal.h	/^  } opr;$/;"	m	struct:__anon128	typeref:union:__anon128::__anon129
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon71
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon76
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon82
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon83
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon84
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon86
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon87
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon89
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon90
opt	os_qnxnto.h	/^		uchar_t		opt;$/;"	m	struct:_cdb::__anon91
opt_identify	smartctl.cpp	/^enum { opt_identify = 1000, opt_scan, opt_scan_open, opt_set, opt_smart };$/;"	e	enum:__anon18	file:
opt_scan	smartctl.cpp	/^enum { opt_identify = 1000, opt_scan, opt_scan_open, opt_set, opt_smart };$/;"	e	enum:__anon18	file:
opt_scan_open	smartctl.cpp	/^enum { opt_identify = 1000, opt_scan, opt_scan_open, opt_set, opt_smart };$/;"	e	enum:__anon18	file:
opt_set	smartctl.cpp	/^enum { opt_identify = 1000, opt_scan, opt_scan_open, opt_set, opt_smart };$/;"	e	enum:__anon18	file:
opt_smart	smartctl.cpp	/^enum { opt_identify = 1000, opt_scan, opt_scan_open, opt_set, opt_smart };$/;"	e	enum:__anon18	file:
optarg	getopt/getopt.c	/^char *optarg;$/;"	v
opterr	getopt/getopt.c	/^int opterr = 1;$/;"	v
optind	getopt/getopt.c	/^int optind = 1;$/;"	v
option	getopt/getopt.h	/^struct option$/;"	s
option_flags	atacmds.h	/^  unsigned short option_flags;      \/\/ Bit 0: persistent, Bits 1-15: reserved$/;"	m	struct:ata_sct_feature_control_command
optional_argument	getopt/getopt.h	112;"	d
optopt	getopt/getopt.c	/^int optopt = '?';$/;"	v
ordering	getopt/getopt.c	/^} ordering;$/;"	v	typeref:enum:__anon92	file:
org_indices	regex/regex_internal.h	/^  int *org_indices;$/;"	m	struct:re_dfa_t
os	dev_legacy.cpp	/^namespace os { \/\/ No need to publish anything, name provided for Doxygen$/;"	n	file:
os	os_darwin.cpp	/^namespace os { \/\/ No need to publish anything, name provided for Doxygen$/;"	n	file:
os_XXXX_c_cvsid	os_freebsd.cpp	/^const char *os_XXXX_c_cvsid="$Id: os_freebsd.cpp 4257 2016-03-27 23:32:54Z samm2 $" \\$/;"	v
os_XXXX_c_cvsid	os_qnxnto.cpp	/^const char *os_XXXX_c_cvsid="$Id: os_qnxnto.cpp 3806 2013-03-29 20:17:03Z chrfranke $" \\$/;"	v
os_XXXX_c_cvsid	os_solaris.cpp	/^const char *os_XXXX_c_cvsid="$Id: os_solaris.cpp 4253 2016-03-26 19:47:47Z chrfranke $" \\$/;"	v
os_XXXX_cpp_cvsid	os_generic.cpp	/^const char * os_XXXX_cpp_cvsid="$Id: os_generic.cpp 4120 2015-08-27 16:12:21Z samm2 $"$/;"	v
os_darwin_cpp_cvsid	os_darwin.cpp	/^const char *os_darwin_cpp_cvsid="$Id: os_darwin.cpp 4214 2016-01-24 22:53:37Z samm2 $" \\$/;"	v
os_deps	Makefile	/^os_deps = os_linux.o cciss.o dev_areca.o$/;"	m
os_dltools	Makefile	/^os_dltools = curl wget lynx svn$/;"	m
os_dnsdomainname	Makefile	/^os_dnsdomainname = 'dnsdomainname' 'hostname -d'$/;"	m
os_freebsd	os_freebsd.cpp	/^namespace os_freebsd { \/\/ No need to publish anything, name provided for Doxygen$/;"	n	file:
os_hostname	Makefile	/^os_hostname = 'hostname'$/;"	m
os_libs	Makefile	/^os_libs = $/;"	m
os_linux	os_linux.cpp	/^namespace os_linux { \/\/ No need to publish anything, name provided for Doxygen$/;"	n	file:
os_linux_cpp_cvsid	os_linux.cpp	/^const char * os_linux_cpp_cvsid = "$Id: os_linux.cpp 4295 2016-04-15 20:01:32Z chrfranke $"$/;"	v
os_mailer	Makefile	/^os_mailer = mail$/;"	m
os_man_filter	Makefile	/^os_man_filter = Linux$/;"	m
os_netbsd_cpp_cvsid	os_netbsd.cpp	/^const char * os_netbsd_cpp_cvsid = "$Id: os_netbsd.cpp 4253 2016-03-26 19:47:47Z chrfranke $"$/;"	v
os_nisdomainname	Makefile	/^os_nisdomainname = 'nisdomainname' 'hostname -y' 'domainname'$/;"	m
os_openbsd_cpp_cvsid	os_openbsd.cpp	/^const char * os_openbsd_cpp_cvsid = "$Id: os_openbsd.cpp 4253 2016-03-26 19:47:47Z chrfranke $"$/;"	v
os_specific	os_linux.h	/^  unsigned int os_specific;$/;"	m	struct:TAG_TW_Ioctl_Driver_Command_9000
os_status	os_freebsd.h	/^	TW_UINT32	os_status;$/;"	m	struct:tw_cl_driver_packet
os_win32	os_win32.cpp	/^namespace os_win32 { \/\/ no need to publish anything, name provided for Doxygen$/;"	n	file:
os_win32_cpp_cvsid	os_win32.cpp	/^const char * os_win32_cpp_cvsid = "$Id: os_win32.cpp 4293 2016-04-14 19:33:05Z chrfranke $";$/;"	v
os_win32_manifest	Makefile	/^os_win32_manifest = $/;"	m
out	os_freebsd.h	/^  void* out;              \/* output data buffer *\/$/;"	m	struct:_HPT_IOCTL_PARAM
out_flags	os_linux.h	/^  ide_reg_valid_t  out_flags;$/;"	m	struct:ide_task_request_s
out_needed	dev_interface.h	/^  ata_out_regs_flags out_needed; \/\/\/< True if output register value needed$/;"	m	struct:ata_cmd_in
out_regs	dev_interface.h	/^  ata_out_regs_48bit out_regs; \/\/\/< Output registers$/;"	m	struct:ata_cmd_out
out_size	os_freebsd.h	/^  unsigned int out_size;  \/* size of output data buffer *\/$/;"	m	struct:_HPT_IOCTL_PARAM
out_size	os_linux.h	/^  unsigned long	   out_size;$/;"	m	struct:ide_task_request_s
outbufsize	os_linux.cpp	/^    int outbufsize;$/;"	m	struct:os_linux::linux_ioctl_send_command	file:
outlen	megaraid.h	/^  uint32_t       outlen;$/;"	m	struct:uioctl_t
output_data	os_linux.h	/^  char output_data[512];$/;"	m	struct:TAG_TW_Output
output_data	os_linux.h	/^  unsigned char output_data[512]; \/\/ starts 530 bytes in!$/;"	m	struct:TAG_TW_Ioctl
output_format	ataprint.h	/^  unsigned char output_format; \/\/ FMT_* flags$/;"	m	struct:ata_print_options
output_length	os_linux.h	/^  int output_length;$/;"	m	struct:TAG_TW_Ioctl
over_limit	atacmds.h	/^  signed char over_limit;           \/\/ 7: Maximum temperature limit$/;"	m	struct:ata_sct_temperature_history_table
over_limit_count	atacmds.h	/^  unsigned int over_limit_count;    \/\/ 206-209: # intervals since last reset with temperature > Max Op Limit$/;"	m	struct:ata_sct_status_response
owns	dev_interface.cpp	/^bool smart_device::owns(const smart_device * \/*dev*\/) const$/;"	f	class:smart_device
owns	dev_interface.cpp	/^bool tunnelled_device_base::owns(const smart_device * dev) const$/;"	f	class:tunnelled_device_base
p	freebsd_nvme_ioctl.h	/^	uint16_t p	:  1;	\/* phase tag *\/$/;"	m	struct:nvme_status
packet_types	utility.cpp	/^const char * packet_types[] = {$/;"	v
packetdevicetype	utility.cpp	/^const char *packetdevicetype(int type){$/;"	f
packing	os_linux.h	/^  unsigned char packing;$/;"	m	struct:TAG_TW_Ioctl
pad	megaraid.h	/^  uint8_t    pad[8];$/;"	m	union:__anon43
pad	os_freebsd.h	/^    u_int8_t			pad[512];$/;"	m	union:__anon11
pad_0	megaraid.h	/^  u32 pad_0;         \/*0Ch *\/$/;"	m	struct:megasas_dcmd_frame
pad_0	megaraid.h	/^  u32 pad_0;         \/*0Ch *\/$/;"	m	struct:megasas_pthru_frame
pad_0	megaraid.h	/^  u32 pad_0;        \/*0Ch *\/$/;"	m	struct:megasas_header
padding	os_freebsd.h	/^		TW_UINT8	padding;$/;"	m	struct:tw_cl_command_header::__anon14
padding	os_freebsd.h	/^	TW_INT8				padding[488 - sizeof(TW_VOID *)];$/;"	m	struct:tw_osli_ioctl_no_data_buf
padding	os_freebsd.h	/^	TW_INT8				padding[488];$/;"	m	struct:tw_osli_ioctl_with_payload
padding	os_freebsd.h	/^	TW_UINT8	padding[1024 - sizeof(struct tw_cl_command_header)];$/;"	m	union:tw_cl_command_7k
padding	os_linux.h	/^      u32 padding;	\/* pad to 512 bytes *\/$/;"	m	struct:TW_Command::__anon35::__anon36
padding	os_linux.h	/^      u32 padding;$/;"	m	struct:TW_Command_9000::__anon23::__anon24
padding	os_linux.h	/^      u32 padding[125]; \/* pad entire structure to 512 bytes *\/$/;"	m	struct:TW_Command_9000::__anon23::__anon26
padding	os_linux.h	/^      u32 padding[125];$/;"	m	struct:TW_Command::__anon35::__anon38
padding	os_linux.h	/^      u32 padding[2];$/;"	m	struct:TW_Command::__anon35::__anon37
padding	os_linux.h	/^      u32 padding[2];$/;"	m	struct:TW_Command_9000::__anon23::__anon25
padding	os_linux.h	/^  char                         padding[488];$/;"	m	struct:TAG_TW_Ioctl_Apache
padding	os_linux.h	/^  int padding[2];$/;"	m	struct:TAG_TW_Output
padding	os_linux.h	/^  unsigned char padding [508];$/;"	m	struct:TAG_TW_New_Ioctl
padding	os_linux.h	/^  unsigned char padding[12];$/;"	m	struct:TAG_TW_Passthru
padding	os_linux.h	/^  unsigned char padding[384]; \/* Pad to 1024 bytes *\/$/;"	m	struct:TAG_TW_Command_Full_9000
page	ataprint.h	/^  unsigned page; \/\/ First page (sector)$/;"	m	struct:ata_log_request
pages	scsicmds.h	/^    unsigned char pages[256];$/;"	m	class:supported_vpd_pages
param	os_freebsd.h	/^	TW_UINT16	param;$/;"	m	struct:tw_cl_command_download_firmware
param	os_freebsd.h	/^	TW_UINT8	param;$/;"	m	struct:tw_cl_command_reset_firmware
param	os_freebsd.h	/^	struct tw_cl_command_param		param;$/;"	m	union:tw_cl_command_7k	typeref:struct:tw_cl_command_7k::tw_cl_command_param
param	os_freebsd.h	/^    TWE_Command_PARAM		param;$/;"	m	union:__anon11
param	os_freebsd.h	/^    u_int16_t	param;$/;"	m	struct:__anon9
param	os_linux.h	/^    } param;$/;"	m	union:TW_Command::__anon35	typeref:struct:TW_Command::__anon35::__anon37
param	os_linux.h	/^    } param;$/;"	m	union:TW_Command_9000::__anon23	typeref:struct:TW_Command_9000::__anon23::__anon25
param	os_linux.h	/^  unsigned short param;$/;"	m	struct:TAG_TW_Passthru
param_count	os_freebsd.h	/^	TW_UINT16	param_count;$/;"	m	struct:tw_cl_command_param
param_count	os_freebsd.h	/^    u_int16_t	param_count;$/;"	m	struct:__anon7
param_length	os_qnxnto.h	/^		uchar_t		param_length;$/;"	m	struct:_cdb::__anon59
param_length	os_qnxnto.h	/^		uchar_t		param_length[2];$/;"	m	struct:_cdb::__anon60
param_length	os_qnxnto.h	/^		uchar_t		param_length[2];$/;"	m	struct:_cdb::__anon61
parameter_count	os_linux.h	/^    unsigned short parameter_count;$/;"	m	union:TW_Command::__anon34
parameter_count	os_linux.h	/^    unsigned short parameter_count;$/;"	m	union:TW_Command_9000::__anon22
parameter_data	os_freebsd.h	/^	TW_UINT8	parameter_data[98];$/;"	m	struct:tw_cl_event_packet
parameter_id	os_linux.h	/^  unsigned char parameter_id;$/;"	m	struct:TAG_TW_Ioctl
parameter_len	os_freebsd.h	/^	TW_UINT8	parameter_len;$/;"	m	struct:tw_cl_event_packet
parameter_pointer	os_qnxnto.h	/^		uchar_t		parameter_pointer[2];$/;"	m	struct:_cdb::__anon63
parameter_size_bytes	os_linux.h	/^  unsigned char parameter_size_bytes;$/;"	m	struct:TAG_TW_Ioctl
parent	regex/regex_internal.h	/^  struct bin_tree_t *parent;$/;"	m	struct:bin_tree_t	typeref:struct:bin_tree_t::bin_tree_t
parent_console_handler	os_win32/daemon_win32.cpp	/^static BOOL WINAPI parent_console_handler(DWORD event)$/;"	f	file:
parent_main	os_win32/daemon_win32.cpp	/^static int parent_main(HANDLE rev)$/;"	f	file:
parm_error_location	nvmecmds.h	/^  unsigned short  parm_error_location;$/;"	m	struct:smartmontools::nvme_error_log_page
parse	regex/regcomp.c	/^parse (regexp, preg, syntax, err)$/;"	f	file:
parse_attribute_def	atacmds.cpp	/^bool parse_attribute_def(const char * opt, ata_vendor_attr_defs & defs,$/;"	f
parse_bracket_element	regex/regcomp.c	/^parse_bracket_element (elem, regexp, token, token_len, dfa, syntax)$/;"	f	file:
parse_bracket_exp	regex/regcomp.c	/^parse_bracket_exp (regexp, dfa, token, syntax, err)$/;"	f	file:
parse_bracket_symbol	regex/regcomp.c	/^parse_bracket_symbol (elem, regexp, token)$/;"	f	file:
parse_branch	regex/regcomp.c	/^parse_branch (regexp, preg, token, syntax, nest, err)$/;"	f	file:
parse_db_presets	knowndrives.cpp	/^static bool parse_db_presets(const char * presets, ata_vendor_attr_defs * defs,$/;"	f	file:
parse_default_presets	knowndrives.cpp	/^static inline bool parse_default_presets(const char * presets,$/;"	f	file:
parse_dev_state_line	smartd.cpp	/^static bool parse_dev_state_line(const char * line, persistent_dev_state & state)$/;"	f	file:
parse_drive_database	knowndrives.cpp	/^static bool parse_drive_database(parse_ptr src, drive_database & db, const char * path)$/;"	f	file:
parse_dup_op	regex/regcomp.c	/^parse_dup_op (dup_elem, regexp, dfa, token, syntax, err)$/;"	f	file:
parse_expression	regex/regcomp.c	/^parse_expression (regexp, preg, token, syntax, nest, err)$/;"	f	file:
parse_firmwarebug_def	atacmds.cpp	/^bool parse_firmwarebug_def(const char * opt, firmwarebug_defs & firmwarebugs)$/;"	f
parse_options	smartctl.cpp	/^static const char * parse_options(int argc, char** argv,$/;"	f	file:
parse_presets	knowndrives.cpp	/^static inline bool parse_presets(const char * presets,$/;"	f	file:
parse_ptr	knowndrives.cpp	/^typedef stdin_iterator parse_ptr;$/;"	t	file:
parse_reg_exp	regex/regcomp.c	/^parse_reg_exp (regexp, preg, token, syntax, nest, err)$/;"	f	file:
parse_sub_exp	regex/regcomp.c	/^parse_sub_exp (regexp, preg, token, syntax, nest, err)$/;"	f	file:
parse_usb_names	knowndrives.cpp	/^static void parse_usb_names(const char * names, usb_dev_info & info)$/;"	f	file:
parse_usb_type	knowndrives.cpp	/^static inline bool parse_usb_type(const char * presets, std::string & type)$/;"	f	file:
parsed_ata_command	atacmds.cpp	/^  struct parsed_ata_command$/;"	s	class:__anon51::parsed_ata_device	file:
parsed_ata_device	atacmds.cpp	/^class parsed_ata_device$/;"	c	namespace:__anon51	file:
parsed_ata_device	atacmds.cpp	/^parsed_ata_device::parsed_ata_device(smart_interface * intf, const char * dev_name)$/;"	f	class:__anon51::parsed_ata_device
partition	os_qnxnto.h	/^		uchar_t		partition;$/;"	m	struct:_cdb::__anon83
path	regex/regex_internal.h	/^  state_array_t *path;$/;"	m	struct:__anon124
path	regex/regex_internal.h	/^  state_array_t path;$/;"	m	struct:__anon123
pathlist	os_solaris.cpp	/^struct pathlist {$/;"	s	file:
pause_resume	os_qnxnto.h	/^	} pause_resume;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon68
payload	os_freebsd.h	/^	} payload;$/;"	m	struct:tw_osli_ioctl_with_payload	typeref:union:tw_osli_ioctl_with_payload::__anon17
pc	os_qnxnto.h	/^		uchar_t		pc;					\/\/ Page Control$/;"	m	struct:_cdb::__anon61
pc_page	os_qnxnto.h	/^		uchar_t		pc_page;$/;"	m	struct:_cdb::__anon62
pc_page	os_qnxnto.h	/^		uchar_t		pc_page;$/;"	m	struct:_cdb::__anon63
pc_page	os_qnxnto.h	/^		uchar_t		pc_page;$/;"	m	struct:_cdb::_mode_sense10
pdata	os_freebsd.h	/^	TW_VOID				*pdata; \/* points to data_buf *\/$/;"	m	struct:tw_osli_ioctl_no_data_buf
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
peek_token	regex/regcomp.c	/^peek_token (token, input, syntax)$/;"	f	file:
peek_token_bracket	regex/regcomp.c	/^peek_token_bracket (token, input, syntax)$/;"	f	file:
pending_time	atacmds.h	/^  int pending_time;   \/\/ One plus time in minutes to wait after powerup before restarting$/;"	m	struct:ata_selective_selftest_args
pendingtime	atacmds.h	/^  unsigned short     pendingtime;$/;"	m	struct:ata_selective_self_test_log
percent_used	nvmecmds.h	/^  unsigned char  percent_used;$/;"	m	struct:smartmontools::nvme_smart_log
peripheral_dt_arr	scsiprint.cpp	/^static const char * peripheral_dt_arr[32] = {$/;"	v	file:
permissive	smartd.cpp	/^  bool permissive;                        \/\/ Ignore failed SMART commands$/;"	m	struct:dev_config	file:
persistence	os_freebsd.h	/^    u_int16_t	persistence;$/;"	m	struct:__anon5
persistent_dev_state	smartd.cpp	/^persistent_dev_state::persistent_dev_state()$/;"	f	class:persistent_dev_state
persistent_dev_state	smartd.cpp	/^struct persistent_dev_state$/;"	s	file:
phy_sector_size	atacmds.h	/^  unsigned phy_sector_size;$/;"	m	struct:ata_size_info
phys_addr	megaraid.h	/^  u32 phys_addr;$/;"	m	struct:megasas_sge32
phys_addr	megaraid.h	/^  u64 phys_addr;$/;"	m	struct:megasas_sge64
pid_file	smartd.cpp	/^static std::string pid_file;$/;"	v	file:
pid_t	smartd.cpp	/^typedef int pid_t;$/;"	t	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/smartmontools$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/smartmontools$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/smartmontools$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/smartmontools$/;"	m
play_audio_msf	os_qnxnto.h	/^	} play_audio_msf;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon69
play_audio_ti	os_qnxnto.h	/^	} play_audio_ti;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon70
plugin	os_darwin.cpp	/^  IOCFPlugInInterface **plugin;$/;"	m	struct:__anon95	file:
pointer	megaraid.h	/^  uint8_t   *pointer;$/;"	m	union:__anon43
pop_fail_stack	regex/regexec.c	/^pop_fail_stack (fs, pidx, nregs, regs, eps_via_nodes)$/;"	f	file:
posixly_correct	getopt/getopt.c	/^static char *posixly_correct;$/;"	v	file:
pout	smartctl.cpp	/^void pout(const char *fmt, ...){$/;"	f
pout	smartd.cpp	/^void pout(const char *fmt, ...){$/;"	f
power_cycles	nvmecmds.h	/^  unsigned char  power_cycles[16];$/;"	m	struct:smartmontools::nvme_smart_log
power_on_hours	nvmecmds.h	/^  unsigned char  power_on_hours[16];$/;"	m	struct:smartmontools::nvme_smart_log
powermode	ataprint.h	/^  unsigned char powermode; \/\/ Skip check, if disk in idle or standby mode$/;"	m	struct:ata_print_options
powermode	smartd.cpp	/^  char powermode;                         \/\/ skip check, if disk in idle or standby mode$/;"	m	struct:dev_config	file:
powermodefail	smartd.cpp	/^  bool powermodefail;                     \/\/ true if power mode check failed$/;"	m	struct:temp_dev_state	file:
powerquiet	smartd.cpp	/^  bool powerquiet;                        \/\/ skip powermode 'skipping checks' message$/;"	m	struct:dev_config	file:
powerskipcnt	smartd.cpp	/^  int powerskipcnt;                       \/\/ Number of checks skipped due to idle or standby mode$/;"	m	struct:temp_dev_state	file:
powerskipmax	smartd.cpp	/^  int powerskipmax;                       \/\/ how many times can be check skipped$/;"	m	struct:dev_config	file:
prefail	smartd.cpp	/^  bool prefail;                           \/\/ Track changes in Prefail Attributes$/;"	m	struct:dev_config	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
preg	atacmds.cpp	/^static const char * preg(const ata_register & r, char (& buf)[8])$/;"	f	file:
presets	knowndrives.h	/^  const char * presets;$/;"	m	struct:drive_settings
prettyprint	atacmds.cpp	/^static void prettyprint(const unsigned char *p, const char *name){$/;"	f	file:
prev	dev_interface.h	/^  ata_in_regs prev;  \/\/\/< "previous content"$/;"	m	struct:ata_in_regs_48bit
prev	dev_interface.h	/^  ata_out_regs prev;  \/\/\/< read with HOB=1$/;"	m	struct:ata_out_regs_48bit
prevent	os_qnxnto.h	/^		uchar_t		prevent;$/;"	m	struct:_cdb::__anon64
pri2evtype	os_win32/syslog_win32.cpp	/^static WORD pri2evtype(int priority)$/;"	f	file:
pri2text	os_win32/syslog_win32.cpp	/^static const char * pri2text(int priority)$/;"	f	file:
print_aam_level	ataprint.cpp	/^static void print_aam_level(const char * msg, int level, int recommended = -1)$/;"	f	file:
print_apm_level	ataprint.cpp	/^static void print_apm_level(const char * msg, int level)$/;"	f	file:
print_ata_security_status	ataprint.cpp	/^static void print_ata_security_status(const char * msg, unsigned short state)$/;"	f	file:
print_critical_warning	nvmeprint.cpp	/^static void print_critical_warning(unsigned char w)$/;"	f	file:
print_device_statistics	ataprint.cpp	/^static bool print_device_statistics(ata_device * device, unsigned nsectors,$/;"	f	file:
print_device_statistics_page	ataprint.cpp	/^static void print_device_statistics_page(const unsigned char * data, int page)$/;"	f	file:
print_drive_capabilities	nvmeprint.cpp	/^static void print_drive_capabilities(const nvme_id_ctrl & id_ctrl, const nvme_id_ns & id_ns,$/;"	f	file:
print_drive_info	ataprint.cpp	/^static void print_drive_info(const ata_identify_device * drive,$/;"	f	file:
print_drive_info	nvmeprint.cpp	/^static void print_drive_info(const nvme_id_ctrl & id_ctrl, const nvme_id_ns & id_ns,$/;"	f	file:
print_error_log	nvmeprint.cpp	/^static void print_error_log(const nvme_error_log_page * error_log,$/;"	f	file:
print_ide_regs	os_win32.cpp	/^static void print_ide_regs(const IDEREGS * r, int out)$/;"	f	namespace:os_win32
print_ide_regs_io	os_win32.cpp	/^static void print_ide_regs_io(const IDEREGS * ri, const IDEREGS * ro)$/;"	f	namespace:os_win32
print_off	smartctl.h	/^inline void print_off()$/;"	f
print_on	smartctl.h	/^inline void print_on()$/;"	f
print_regs	atacmds.cpp	/^static void print_regs(const char * prefix, const ata_in_regs & r, const char * suffix = "\\n")$/;"	f	file:
print_regs	atacmds.cpp	/^static void print_regs(const char * prefix, const ata_out_regs & r, const char * suffix = "\\n")$/;"	f	file:
print_smart_log	nvmeprint.cpp	/^static void print_smart_log(const nvme_smart_log & smart_log, unsigned nsid,$/;"	f	file:
print_smartctl_examples	os_generic.cpp	/^static void print_smartctl_examples(){$/;"	f	file:
print_smartctl_examples	os_netbsd.cpp	/^print_smartctl_examples()$/;"	f
print_smartctl_examples	os_openbsd.cpp	/^print_smartctl_examples()$/;"	f
print_smartctl_examples	os_qnxnto.cpp	/^void print_smartctl_examples(){$/;"	f
print_smartctl_examples	os_solaris.cpp	/^void print_smartctl_examples(){$/;"	f
print_standby_timer	ataprint.cpp	/^static void print_standby_timer(const char * msg, int timer, const ata_identify_device & drive)$/;"	f	file:
printedout	os_solaris.cpp	/^int printedout[2];$/;"	v
printing_is_off	smartctl.cpp	/^bool printing_is_off = false;$/;"	v
printing_is_switchable	smartctl.cpp	/^bool printing_is_switchable = false;$/;"	v
printoutvaliddirectiveargs	smartd.cpp	/^static void printoutvaliddirectiveargs(int priority, char d)$/;"	f	file:
printslogan	smartctl.cpp	/^static void printslogan()$/;"	f	file:
printvalidarglistmessage	smartctl.cpp	/^static void printvalidarglistmessage(int opt)$/;"	f	file:
printwarning	os_freebsd.cpp	/^void printwarning(int msgNo, const char* extra) {$/;"	f
printwarning	os_netbsd.cpp	/^printwarning(int msgNo, const char *extra)$/;"	f
printwarning	os_openbsd.cpp	/^printwarning(int msgNo, const char *extra)$/;"	f
printwarning	os_solaris.cpp	/^int printwarning(int which){$/;"	f
priority	atacmds.h	/^    ata_vendor_def_prior priority; \/\/ Setting priority$/;"	m	struct:ata_vendor_attr_defs::entry
probe	os_win32.cpp	/^bool win_nvme_device::probe()$/;"	f	class:os_win32::win_nvme_device
proceed_next_node	regex/regexec.c	/^proceed_next_node (preg, nregs, regs, mctx, pidx, node, eps_via_nodes, fs)$/;"	f	file:
program_details	missing	/^program_details ()$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
progress	scsicmds.h	/^    int progress; \/* -1 -> N\/A, 0-65535 -> available *\/$/;"	m	struct:scsi_sense_disect
protocol	os_freebsd.h	/^  unsigned char protocol;   \/* HPT_(READ,WRITE) or zero for non-DATA *\/$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
protocol	os_qnxnto.h	/^		uchar_t		protocol;      \/\/ multiple count, protocol$/;"	m	struct:_ata_pass_thru
protocol	os_qnxnto.h	/^		uchar_t		protocol;      \/\/ multiple count, protocol$/;"	m	struct:_cdb::_ata_pass_thru
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prp1	freebsd_nvme_ioctl.h	/^	uint64_t prp1;		\/* prp entry 1 *\/$/;"	m	struct:nvme_command
prp2	freebsd_nvme_ioctl.h	/^	uint64_t prp2;		\/* prp entry 2 *\/$/;"	m	struct:nvme_command
prune_impossible_nodes	regex/regexec.c	/^prune_impossible_nodes (preg, mctx)$/;"	f	file:
psd	nvmecmds.h	/^  struct nvme_id_power_state  psd[32];$/;"	m	struct:smartmontools::nvme_id_ctrl	typeref:struct:smartmontools::nvme_id_ctrl::nvme_id_power_state
psdir	Makefile	/^psdir = ${docdir}$/;"	m
pstr	regex/regex_internal.h	/^     const re_string_t *pstr;$/;"	v
pt_cmd	os_linux.cpp	/^  bool (linux_megaraid_device::*pt_cmd)(int cdblen, void *cdb, int dataLen, void *data,$/;"	m	class:os_linux::linux_megaraid_device	file:
pthru	megaraid.h	/^    struct megasas_pthru_frame pthru;$/;"	m	union:megasas_iocpacket::__anon47	typeref:struct:megasas_iocpacket::__anon47::megasas_pthru_frame
pthru	megaraid.h	/^  mega_passthru pthru;$/;"	m	struct:uioctl_t
ptr_t	megaraid.h	/^} ptr_t;$/;"	t	typeref:union:__anon43
push_back	dev_interface.h	/^  void push_back(smart_device * dev)$/;"	f	class:smart_device_list
push_back	dev_interface.h	/^  void push_back(smart_device_auto_ptr & dev)$/;"	f	class:smart_device_list
push_back	knowndrives.cpp	/^void drive_database::push_back(const drive_settings & src)$/;"	f	class:drive_database
push_fail_stack	regex/regexec.c	/^push_fail_stack (fs, str_idx, dests, nregs, regs, eps_via_nodes)$/;"	f	file:
q_length	cissio_freebsd.h	/^    uint32_t		q_length;$/;"	m	struct:ciss_qstat
q_max	cissio_freebsd.h	/^    uint32_t		q_max;$/;"	m	struct:ciss_qstat
query	os_win32/wmiquery.cpp	/^bool wbem_services::query(wbem_enumerator & result, const char * qstr, ...) \/*const*\/$/;"	f	class:wbem_services
query1	os_win32/wmiquery.cpp	/^bool wbem_services::query1(wbem_object & obj, const char * qstr, ...) \/*const*\/$/;"	f	class:wbem_services
queueaction	megaraid.h	/^  uint8_t  queueaction;$/;"	m	struct:__anon41
queuetag	megaraid.h	/^  uint8_t  queuetag;$/;"	m	struct:__anon41
quit	smartd.cpp	/^static int quit=0;$/;"	v	file:
rab	nvmecmds.h	/^  unsigned char   rab;$/;"	m	struct:smartmontools::nvme_id_ctrl
range	regex/regexec.c	/^    int length, start, range;$/;"	v
range	regex/regexec.c	/^    int length1, length2, start, range, stop;$/;"	v
range_ends	regex/regex_internal.h	/^  uint32_t *range_ends;$/;"	m	struct:__anon118
range_ends	regex/regex_internal.h	/^  wchar_t *range_ends;$/;"	m	struct:__anon118
range_starts	regex/regex_internal.h	/^  uint32_t *range_starts;$/;"	m	struct:__anon118
range_starts	regex/regex_internal.h	/^  wchar_t *range_starts;$/;"	m	struct:__anon118
raw	atacmds.h	/^  unsigned char raw[6];$/;"	m	struct:ata_smart_attribute
raw	megaraid.h	/^    u8 raw[128];$/;"	m	union:megasas_iocpacket::__anon47
raw	os_win32.cpp	/^  char raw[256];$/;"	m	union:os_win32::STORAGE_DEVICE_DESCRIPTOR_DATA	file:
raw	smartd.cpp	/^    uint64_t raw;$/;"	m	struct:persistent_dev_state::ata_attribute	file:
raw_buffer	utility.h	/^  explicit raw_buffer(unsigned sz, unsigned char val = 0)$/;"	f	class:raw_buffer
raw_buffer	utility.h	/^class raw_buffer$/;"	c
raw_chg	scsicmds.h	/^    UINT8 raw_chg[SCSI_IECMP_RAW_LEN];$/;"	m	struct:scsi_iec_mode_page
raw_curr	scsicmds.h	/^    UINT8 raw_curr[SCSI_IECMP_RAW_LEN];$/;"	m	struct:scsi_iec_mode_page
raw_format	atacmds.h	/^    ata_attr_raw_format raw_format; \/\/ Raw value print format$/;"	m	struct:ata_vendor_attr_defs::entry
raw_mbs	regex/regex_internal.h	/^  const unsigned char *raw_mbs;$/;"	m	struct:re_string_t
raw_mbs_idx	regex/regex_internal.h	/^  int raw_mbs_idx;$/;"	m	struct:re_string_t
re_acquire_state	regex/regex_internal.c	/^re_acquire_state (err, dfa, nodes)$/;"	f	file:
re_acquire_state_context	regex/regex_internal.c	/^re_acquire_state_context (err, dfa, nodes, context)$/;"	f	file:
re_backref_cache_entry	regex/regex_internal.h	/^struct re_backref_cache_entry$/;"	s
re_bitset_ptr_t	regex/regex_internal.h	/^typedef unsigned int *re_bitset_ptr_t;$/;"	t
re_charset_t	regex/regex_internal.h	/^} re_charset_t;$/;"	t	typeref:struct:__anon118
re_comp	regex/regcomp.c	/^re_comp (s)$/;"	f
re_comp_buf	regex/regcomp.c	/^static struct re_pattern_buffer re_comp_buf;$/;"	v	typeref:struct:re_pattern_buffer	file:
re_compile_fastmap	regex/regex.c	41;"	d	file:
re_compile_fastmap_iter	regex/regcomp.c	/^re_compile_fastmap_iter (bufp, init_state, fastmap)$/;"	f	file:
re_compile_internal	regex/regcomp.c	/^re_compile_internal (preg, pattern, length, syntax)$/;"	f	file:
re_compile_pattern	regex/regcomp.c	/^re_compile_pattern (pattern, length, bufp)$/;"	f
re_compile_pattern	regex/regex.c	36;"	d	file:
re_context_type	regex/regex_internal.h	/^} re_context_type;$/;"	t	typeref:enum:__anon115
re_copy_regs	regex/regexec.c	/^re_copy_regs (regs, pmatch, nregs, regs_allocated)$/;"	f	file:
re_dfa_add_node	regex/regex_internal.c	/^re_dfa_add_node (dfa, token, mode)$/;"	f	file:
re_dfa_t	regex/regex_internal.h	/^struct re_dfa_t$/;"	s
re_dfa_t	regex/regex_internal.h	/^typedef struct re_dfa_t re_dfa_t;$/;"	t	typeref:struct:re_dfa_t
re_dfastate_t	regex/regex_internal.h	/^struct re_dfastate_t$/;"	s
re_dfastate_t	regex/regex_internal.h	/^typedef struct re_dfastate_t re_dfastate_t;$/;"	t	typeref:struct:re_dfastate_t
re_fail_stack_ent_t	regex/regex_internal.h	/^struct re_fail_stack_ent_t$/;"	s
re_fail_stack_t	regex/regex_internal.h	/^struct re_fail_stack_t$/;"	s
re_free	regex/regex_internal.h	385;"	d
re_malloc	regex/regex_internal.h	383;"	d
re_match	regex/regex.c	32;"	d	file:
re_match_2	regex/regex.c	30;"	d	file:
re_match_context_t	regex/regex_internal.h	/^} re_match_context_t;$/;"	t	typeref:struct:__anon125
re_max_failures	regex/regex.c	/^int re_max_failures = 2000;$/;"	v
re_node_set	regex/regex_internal.h	/^} re_node_set;$/;"	t	typeref:struct:__anon116
re_node_set_add_intersect	regex/regex_internal.c	/^re_node_set_add_intersect (dest, src1, src2)$/;"	f	file:
re_node_set_alloc	regex/regex_internal.c	/^re_node_set_alloc (set, size)$/;"	f	file:
re_node_set_compare	regex/regex_internal.c	/^re_node_set_compare (set1, set2)$/;"	f	file:
re_node_set_contains	regex/regex_internal.c	/^re_node_set_contains (set, elem)$/;"	f	file:
re_node_set_empty	regex/regex_internal.h	624;"	d
re_node_set_free	regex/regex_internal.h	625;"	d
re_node_set_init_1	regex/regex_internal.c	/^re_node_set_init_1 (set, elem)$/;"	f	file:
re_node_set_init_2	regex/regex_internal.c	/^re_node_set_init_2 (set, elem1, elem2)$/;"	f	file:
re_node_set_init_copy	regex/regex_internal.c	/^re_node_set_init_copy (dest, src)$/;"	f	file:
re_node_set_init_empty	regex/regex_internal.h	606;"	d
re_node_set_init_union	regex/regex_internal.c	/^re_node_set_init_union (dest, src1, src2)$/;"	f	file:
re_node_set_insert	regex/regex_internal.c	/^re_node_set_insert (set, elem)$/;"	f	file:
re_node_set_merge	regex/regex_internal.c	/^re_node_set_merge (dest, src)$/;"	f	file:
re_node_set_remove	regex/regex_internal.h	622;"	d
re_node_set_remove_at	regex/regex_internal.c	/^re_node_set_remove_at (set, idx)$/;"	f	file:
re_nsub	regex/regex.h	/^  size_t re_nsub;$/;"	m	struct:re_pattern_buffer
re_pattern_buffer	regex/regex.h	/^struct re_pattern_buffer$/;"	s
re_realloc	regex/regex_internal.h	384;"	d
re_registers	regex/regex.h	/^struct re_registers$/;"	s
re_search	regex/regex.c	34;"	d	file:
re_search_2	regex/regex.c	39;"	d	file:
re_search_2_stub	regex/regexec.c	/^re_search_2_stub (bufp, string1, length1, string2, length2, start, range, regs,$/;"	f	file:
re_search_internal	regex/regexec.c	/^re_search_internal (preg, string, length, start, range, stop, nmatch, pmatch,$/;"	f	file:
re_search_stub	regex/regexec.c	/^re_search_stub (bufp, string, length, start, range, stop, regs, ret_len)$/;"	f	file:
re_set_fastmap	regex/regcomp.c	/^re_set_fastmap (char *fastmap, int icase, int ch)$/;"	f	file:
re_set_registers	regex/regex.c	28;"	d	file:
re_set_registers	regex/regexec.c	/^re_set_registers (bufp, regs, num_regs, starts, ends)$/;"	f
re_set_syntax	regex/regex.c	38;"	d	file:
re_sift_context_t	regex/regex_internal.h	/^} re_sift_context_t;$/;"	t	typeref:struct:__anon126
re_state_table_entry	regex/regex_internal.h	/^struct re_state_table_entry$/;"	s
re_str	regex/regex_internal.h	/^  char* re_str;$/;"	m	struct:re_dfa_t
re_string_allocate	regex/regex_internal.c	/^re_string_allocate (pstr, str, len, init_len, trans, icase)$/;"	f	file:
re_string_byte_at	regex/regex_internal.h	379;"	d
re_string_construct	regex/regex_internal.c	/^re_string_construct (pstr, str, len, trans, icase)$/;"	f	file:
re_string_construct_common	regex/regex_internal.c	/^re_string_construct_common (str, len, pstr, trans, icase)$/;"	f	file:
re_string_context_at	regex/regex_internal.c	/^re_string_context_at (input, idx, eflags, newline_anchor)$/;"	f	file:
re_string_cur_idx	regex/regex_internal.h	376;"	d
re_string_destruct	regex/regex_internal.c	/^re_string_destruct (pstr)$/;"	f	file:
re_string_eoi	regex/regex_internal.h	375;"	d
re_string_fetch_byte	regex/regex_internal.h	366;"	d
re_string_fetch_byte_case	regex/regex_internal.h	368;"	d
re_string_first_byte	regex/regex_internal.h	370;"	d
re_string_get_buffer	regex/regex_internal.h	377;"	d
re_string_is_single_byte_char	regex/regex_internal.h	372;"	d
re_string_length	regex/regex_internal.h	378;"	d
re_string_peek_byte	regex/regex_internal.h	362;"	d
re_string_peek_byte_case	regex/regex_internal.h	364;"	d
re_string_realloc_buffers	regex/regex_internal.c	/^re_string_realloc_buffers (pstr, new_buf_len)$/;"	f	file:
re_string_reconstruct	regex/regex_internal.c	/^re_string_reconstruct (pstr, idx, eflags, newline)$/;"	f	file:
re_string_set_index	regex/regex_internal.h	381;"	d
re_string_skip_bytes	regex/regex_internal.h	380;"	d
re_string_skip_chars	regex/regex_internal.c	/^re_string_skip_chars (pstr, new_raw_idx, last_wc)$/;"	f	file:
re_string_t	regex/regex_internal.h	/^struct re_string_t$/;"	s
re_string_t	regex/regex_internal.h	/^typedef struct re_string_t re_string_t;$/;"	t	typeref:struct:re_string_t
re_string_translate_buffer	regex/regex_internal.c	/^re_string_translate_buffer (pstr)$/;"	f	file:
re_sub_match_last_t	regex/regex_internal.h	/^} re_sub_match_last_t;$/;"	t	typeref:struct:__anon123
re_sub_match_top_t	regex/regex_internal.h	/^} re_sub_match_top_t;$/;"	t	typeref:struct:__anon124
re_subexp_t	regex/regex_internal.h	/^} re_subexp_t;$/;"	t	typeref:struct:__anon121
re_token_t	regex/regex_internal.h	/^} re_token_t;$/;"	t	typeref:struct:__anon119
re_token_type_t	regex/regex_internal.h	/^} re_token_type_t;$/;"	t	typeref:enum:__anon117
read_ata_error_count	smartd.cpp	/^static int read_ata_error_count(ata_device * device, const char * name,$/;"	f	file:
read_block_limits	os_qnxnto.h	/^	} read_block_limits;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon84
read_cd	os_qnxnto.h	/^	} read_cd;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon80
read_cd_msf	os_qnxnto.h	/^	} read_cd_msf;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon81
read_default_drive_databases	knowndrives.cpp	/^static bool read_default_drive_databases()$/;"	f	file:
read_dev_state	smartd.cpp	/^static bool read_dev_state(const char * path, persistent_dev_state & state)$/;"	f	file:
read_disc_information	os_qnxnto.h	/^	} read_disc_information;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon67
read_drive_database	knowndrives.cpp	/^bool read_drive_database(const char * path)$/;"	f
read_formated_capacities	os_qnxnto.h	/^	} read_formated_capacities;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon77
read_id	os_linux.cpp	/^static bool read_id(const std::string & path, unsigned short & id)$/;"	f	namespace:os_linux
read_lat	nvmecmds.h	/^  unsigned char   read_lat;$/;"	m	struct:smartmontools::nvme_id_power_state
read_position	os_qnxnto.h	/^	} read_position;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon85
read_speed	os_qnxnto.h	/^		uchar_t		read_speed[2];$/;"	m	struct:_cdb::__anon78
read_subchannel	os_qnxnto.h	/^	} read_subchannel;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon79
read_toc	os_qnxnto.h	/^	} read_toc;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon72
read_tput	nvmecmds.h	/^  unsigned char   read_tput;$/;"	m	struct:smartmontools::nvme_id_power_state
read_write10	os_qnxnto.h	/^	} read_write10;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon57
read_write12	os_qnxnto.h	/^	} read_write12;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon58
read_write6	os_qnxnto.h	/^	} read_write6;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon56
reallocf	os_freebsd.cpp	/^static inline void * reallocf(void *ptr, size_t size) {$/;"	f	namespace:os_freebsd
reassign_status	scsiprint.cpp	/^static const char * reassign_status[] = {$/;"	v	file:
rebuildunit	os_freebsd.h	/^    TWE_Command_REBUILDUNIT	rebuildunit;$/;"	m	union:__anon11
reftag	linux_nvme_ioctl.h	/^	__u32	reftag;$/;"	m	struct:nvme_user_io
reg_errcode_t	regex/regex.h	/^} reg_errcode_t;$/;"	t	typeref:enum:__anon130
reg_syntax_t	regex/regex.h	/^typedef unsigned long int reg_syntax_t;$/;"	t
regcomp	regex/regcomp.c	/^regcomp (preg, pattern, cflags)$/;"	f
regcomp	regex/regex.c	25;"	d	file:
regerror	regex/regex.c	26;"	d	file:
regex_t	regex/regex.h	/^typedef struct re_pattern_buffer regex_t;$/;"	t	typeref:struct:re_pattern_buffer
regexec	regex/regex.c	24;"	d	file:
regexec	regex/regexec.c	/^regexec (preg, string, nmatch, pmatch, eflags)$/;"	f
regfree	regex/regcomp.c	/^regfree (preg)$/;"	f
regfree	regex/regex.c	23;"	d	file:
register_state	regex/regex_internal.c	/^register_state (dfa, newstate, hash)$/;"	f	file:
regmatch_t	regex/regex.h	/^} regmatch_t;$/;"	t	typeref:struct:__anon131
regoff_t	regex/regex.h	/^typedef int regoff_t;$/;"	t
regs	regex/regex_internal.h	/^  regmatch_t *regs;$/;"	m	struct:re_fail_stack_ent_t
regs	regex/regexec.c	/^    struct re_registers *regs;$/;"	v	typeref:struct:re_registers
regs_allocated	regex/regex.h	/^  unsigned regs_allocated : 2;$/;"	m	struct:re_pattern_buffer
regular_expression	utility.cpp	/^regular_expression::regular_expression()$/;"	f	class:regular_expression
regular_expression	utility.cpp	/^regular_expression::regular_expression(const char * pattern, int flags,$/;"	f	class:regular_expression
regular_expression	utility.cpp	/^regular_expression::regular_expression(const regular_expression & x)$/;"	f	class:regular_expression
regular_expression	utility.h	/^class regular_expression$/;"	c
release	dev_interface.cpp	/^void smart_device::release(const smart_device * \/*dev*\/)$/;"	f	class:smart_device
release	dev_interface.cpp	/^void tunnelled_device_base::release(const smart_device * dev)$/;"	f	class:tunnelled_device_base
release	dev_interface.h	/^  device_type * release()$/;"	f	class:any_device_auto_ptr
release	dev_interface.h	/^  smart_device * release(unsigned i)$/;"	f	class:smart_device_list
release	dev_tunnelled.h	/^  virtual void release(const smart_device * dev)$/;"	f	class:tunnelled_device
releaseversion	Makefile	/^releaseversion = ${PACKAGE}-${VERSION}$/;"	m
reload	smartd.initd	/^    reload()$/;"	f
reload	smartd.initd.in	/^    reload()$/;"	f
removable	smartd.cpp	/^  bool removable;                         \/\/ Device may disappear (not be present)$/;"	m	struct:dev_config	file:
removal	os_qnxnto.h	/^	} removal;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon64
reopen_stderr	os_win32/daemon_win32.cpp	/^static int reopen_stdin, reopen_stdout, reopen_stderr;$/;"	v	file:
reopen_stdin	os_win32/daemon_win32.cpp	/^static int reopen_stdin, reopen_stdout, reopen_stderr;$/;"	v	file:
reopen_stdout	os_win32/daemon_win32.cpp	/^static int reopen_stdin, reopen_stdout, reopen_stderr;$/;"	v	file:
repeat_count	os_freebsd.h	/^	TW_UINT8	repeat_count;$/;"	m	struct:tw_cl_event_packet
replace	dev_interface.h	/^  void replace(device_type * dev)$/;"	f	class:any_device_auto_ptr
replace	os_win32/wmiquery.h	/^  T * * replace()$/;"	f	class:com_intf_ptr
report	smartd.initd	/^    report()$/;"	f
report	smartd.initd.in	/^    report()$/;"	f
report_density	os_qnxnto.h	/^	} report_density;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon90
report_events	os_win32/syslog_win32.cpp	/^static void report_events(int cnt)$/;"	f	file:
report_unsupported	smartd.initd	/^report_unsupported () {$/;"	f
report_unsupported	smartd.initd.in	/^report_unsupported () {$/;"	f
req_cmd	os_linux.h	/^  int		   req_cmd;$/;"	m	struct:ide_task_request_s
req_type	dev_interface.h	/^    std::string req_type;  \/\/\/< Device type requested by user, empty if none$/;"	m	struct:smart_device::device_info
reqsensearea	megaraid.h	/^  uint8_t  reqsensearea[MAX_REQ_SENSE_LEN];$/;"	m	struct:__anon41
reqsenselen	megaraid.h	/^  uint8_t  reqsenselen;$/;"	m	struct:__anon41
request_id	os_freebsd.h	/^	TW_UINT8	request_id;$/;"	m	struct:tw_cl_command_download_firmware
request_id	os_freebsd.h	/^	TW_UINT8	request_id;$/;"	m	struct:tw_cl_command_generic
request_id	os_freebsd.h	/^	TW_UINT8	request_id;$/;"	m	struct:tw_cl_command_init_connect
request_id	os_freebsd.h	/^	TW_UINT8	request_id;$/;"	m	struct:tw_cl_command_param
request_id	os_freebsd.h	/^	TW_UINT8	request_id;$/;"	m	struct:tw_cl_command_reset_firmware
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon10
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon2
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon3
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon4
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon5
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon6
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon7
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon8
request_id	os_freebsd.h	/^    u_int8_t	request_id;$/;"	m	struct:__anon9
request_id	os_linux.h	/^  unsigned char request_id;$/;"	m	struct:TAG_TW_Passthru
request_id	os_linux.h	/^  unsigned char request_id;$/;"	m	struct:TW_Command
request_id	os_linux.h	/^  unsigned char request_id;$/;"	m	struct:TW_Command_9000
request_id	os_linux.h	/^  unsigned short  request_id;$/;"	m	struct:TAG_TW_Command_Apache
requestedChangeable	scsicmds.h	/^    UINT8 requestedChangeable;$/;"	m	struct:scsi_iec_mode_page
requestedCurrent	scsicmds.h	/^    UINT8 requestedCurrent;$/;"	m	struct:scsi_iec_mode_page
required_argument	getopt/getopt.h	111;"	d
res1	os_freebsd.h	/^    u_int8_t	res1:3;		$/;"	m	struct:__anon2
res1	os_freebsd.h	/^    u_int8_t	res1:3;$/;"	m	struct:__anon3
res1	os_freebsd.h	/^    u_int8_t	res1:3;$/;"	m	struct:__anon4
res1	os_freebsd.h	/^    u_int8_t	res1:3;$/;"	m	struct:__anon5
res1	os_freebsd.h	/^    u_int8_t	res1:3;$/;"	m	struct:__anon6
res1	os_freebsd.h	/^    u_int8_t	res1:3;$/;"	m	struct:__anon7
res1	os_freebsd.h	/^    u_int8_t	res1:3;$/;"	m	struct:__anon8
res1__opcode	os_freebsd.h	/^	TW_UINT8	res1__opcode;	\/* 3:5 *\/$/;"	m	struct:tw_cl_command_init_connect
res1__opcode	os_freebsd.h	/^	TW_UINT8	res1__opcode;	\/* 3:5 *\/$/;"	m	struct:tw_cl_command_reset_firmware
res2	os_freebsd.h	/^	TW_UINT8	res2;$/;"	m	struct:tw_cl_command_init_connect
res2	os_freebsd.h	/^	TW_UINT8	res2;$/;"	m	struct:tw_cl_command_reset_firmware
res2	os_freebsd.h	/^    u_int8_t	res2:4;$/;"	m	struct:__anon2
res2	os_freebsd.h	/^    u_int8_t	res2:4;$/;"	m	struct:__anon6
res__opcode	os_freebsd.h	/^	TW_UINT8	res__opcode;	\/* 3:5 *\/$/;"	m	struct:tw_cl_command_9k
res__severity	os_freebsd.h	/^		TW_UINT8	res__severity;	\/* 5:3 *\/$/;"	m	struct:tw_cl_command_header::__anon14
rescap	nvmecmds.h	/^  unsigned char   rescap;$/;"	m	struct:smartmontools::nvme_id_ns
reserv	atacmds.h	/^  unsigned char reserv;$/;"	m	struct:ata_smart_attribute
reserve	os_freebsd.h	/^  unsigned char reserve[3];$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
reserve1	os_freebsd.h	/^  unsigned int reserve1;$/;"	m	struct:_HPT_CHANNEL_INFO
reserve1	os_freebsd.h	/^  unsigned int reserve1;$/;"	m	struct:_HPT_CHANNEL_INFO_V2
reserve2	os_freebsd.h	/^  unsigned int reserve2;$/;"	m	struct:_HPT_CHANNEL_INFO
reserve2	os_freebsd.h	/^  unsigned int reserve2;$/;"	m	struct:_HPT_CHANNEL_INFO_V2
reserved	atacmds.h	/^  unsigned char reserved;$/;"	m	struct:ata_smart_errorlog_error_struct
reserved	atacmds.h	/^  unsigned char reserved;$/;"	m	struct:ata_smart_exterrlog_command
reserved	atacmds.h	/^  unsigned char reserved;$/;"	m	struct:ata_smart_log_entry
reserved	atacmds.h	/^  unsigned char reserved[10];$/;"	m	struct:ata_smart_threshold_entry
reserved	atacmds.h	/^  unsigned char reserved[149];$/;"	m	struct:ata_smart_thresholds_pvt
reserved	atacmds.h	/^  unsigned char reserved[2];$/;"	m	struct:ata_smart_selftestlog
reserved	atacmds.h	/^  unsigned char reserved[57];$/;"	m	struct:ata_smart_errorlog
reserved	cciss.cpp	/^  uint32_t reserved;$/;"	m	struct:_ReportLUNdata_struct	file:
reserved	cissio_freebsd.h	/^    u_int8_t		reserved[4];$/;"	m	struct:__anon103
reserved	megaraid.h	/^  uint8_t  reserved : 3;$/;"	m	struct:__anon41
reserved	os_freebsd.h	/^		TW_INT8		reserved[4];$/;"	m	struct:tw_cl_command_header::__anon14
reserved	os_freebsd.h	/^		TW_UINT16	reserved;$/;"	m	struct:tw_cl_command_header::__anon15
reserved	os_linux.h	/^      unsigned char reserved:5;$/;"	m	struct:TAG_TW_Command_Apache_Header::__anon29::__anon30
reserved	os_linux.h	/^    char reserved[4];$/;"	m	struct:TAG_TW_Command_Apache_Header::__anon29
reserved	os_linux.h	/^    unsigned char reserved:3;$/;"	m	struct:TAG_TW_Command_Apache::__anon28
reserved1	atacmds.h	/^  unsigned char      reserved1[337-82+1];$/;"	m	struct:ata_selective_self_test_log
reserved1	atacmds.h	/^  unsigned char reserved1;$/;"	m	struct:ata_smart_exterrlog
reserved1	atacmds.h	/^  unsigned char reserved1;$/;"	m	struct:ata_smart_extselftestlog
reserved2	atacmds.h	/^  unsigned char      reserved2;$/;"	m	struct:ata_selective_self_test_log
reserved2	atacmds.h	/^  unsigned char reserved2[11];$/;"	m	struct:ata_smart_extselftestlog
reserved2	atacmds.h	/^  unsigned char reserved2[9];$/;"	m	struct:ata_smart_exterrlog
reserved_0	megaraid.h	/^  u8 reserved_0;     \/*01h *\/$/;"	m	struct:megasas_dcmd_frame
reserved_1	megaraid.h	/^  u8 reserved_1[4];  \/*03h *\/$/;"	m	struct:megasas_dcmd_frame
reserved_377_385	atacmds.h	/^  unsigned char reserved_377_385[9];$/;"	m	struct:ata_smart_values
reset	dev_interface.h	/^  void reset()$/;"	f	class:any_device_auto_ptr
reset	os_win32/wmiquery.h	/^  void reset()$/;"	f	class:com_intf_ptr
reset_fw	os_freebsd.h	/^	struct tw_cl_command_reset_firmware	reset_fw;$/;"	m	union:tw_cl_command_7k	typeref:struct:tw_cl_command_7k::tw_cl_command_reset_firmware
reset_warning_mail	smartd.cpp	/^static void reset_warning_mail(const dev_config & cfg, dev_state & state, int which, const char *fmt, ...)$/;"	f	file:
resid	scsicmds.h	/^    int resid;          \/* [out]: Number of bytes requested to be transferred$/;"	m	struct:scsi_cmnd_io
resp_code	scsicmds.h	/^    UINT8 resp_code;$/;"	m	struct:scsi_sense_disect
resp_sense_len	scsicmds.h	/^    size_t resp_sense_len;  \/* [out]: sense buffer length written *\/$/;"	m	struct:scsi_cmnd_io
response_code	scsiata.cpp	/^    unsigned char response_code; \/* permit: 0x0, 0x70, 0x71, 0x72, 0x73 *\/$/;"	m	struct:sg_scsi_sense_hdr	file:
response_id	os_freebsd.h	/^	u_int32_t	response_id:8;$/;"	m	struct:__anon12::__anon13
response_queue_pointer	os_freebsd.h	/^    u_int32_t	response_queue_pointer;$/;"	m	struct:__anon2
response_queue_pointer	os_linux.h	/^      u32 response_queue_pointer;$/;"	m	struct:TW_Command::__anon35::__anon38
response_queue_pointer	os_linux.h	/^      u32 response_queue_pointer;$/;"	m	struct:TW_Command_9000::__anon23::__anon26
result	dev_interface.h	/^   unsigned result; \/\/\/< Command specific result (DW0)$/;"	m	struct:nvme_cmd_out
result	linux_nvme_ioctl.h	/^	__u32	result;$/;"	m	struct:nvme_passthru_cmd
result	os_freebsd.h	/^	TW_UINT32	result;$/;"	m	struct:tw_cl_command_init_connect
resume	os_qnxnto.h	/^		uchar_t		resume;$/;"	m	struct:_cdb::__anon68
resv	nvmecmds.h	/^  unsigned char   resv[35];$/;"	m	struct:smartmontools::nvme_error_log_page
resvd	megaraid.h	/^  uint8_t   resvd[3];$/;"	m	struct:__anon42
resvd	smartd.cpp	/^    unsigned char resvd;$/;"	m	struct:persistent_dev_state::ata_attribute	file:
retrieved	os_freebsd.h	/^	TW_UINT8	retrieved;$/;"	m	struct:tw_cl_event_packet
retry_error_log	ataprint.h	/^  bool retry_error_log, retry_selftest_log;$/;"	m	struct:ata_print_options
retry_limit	aacraid.h	/^  uint32_t retry_limit;        \/\/ We shall see$/;"	m	struct:__anon141
retry_limit	aacraid.h	/^  uint32_t retry_limit;        \/\/ We shall see$/;"	m	struct:__anon142
retry_selftest_log	ataprint.h	/^  bool retry_error_log, retry_selftest_log;$/;"	m	struct:ata_print_options
returned_size	os_freebsd.h	/^  void* returned_size;    \/* count of chars returned *\/$/;"	m	struct:_HPT_IOCTL_PARAM
retval	atacmds.cpp	/^    int retval, errval;$/;"	m	struct:__anon51::parsed_ata_device::parsed_ata_command	file:
revnumber	atacmds.h	/^  unsigned char revnumber;$/;"	m	struct:ata_smart_errorlog
revnumber	atacmds.h	/^  unsigned short int revnumber;$/;"	m	struct:ata_smart_selftestlog
revnumber	atacmds.h	/^  unsigned short int revnumber;$/;"	m	struct:ata_smart_thresholds_pvt
revnumber	atacmds.h	/^  unsigned short int revnumber;$/;"	m	struct:ata_smart_values
rewind	os_qnxnto.h	/^	} rewind;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon87
right	regex/regex_internal.h	/^  struct bin_tree_t *right;$/;"	m	struct:bin_tree_t	typeref:struct:bin_tree_t::bin_tree_t
rm_eo	regex/regex.h	/^  regoff_t rm_eo;  \/* Byte offset from string's start to substring's end.  *\/$/;"	m	struct:__anon131
rm_so	regex/regex.h	/^  regoff_t rm_so;  \/* Byte offset from string's start to substring's start.  *\/$/;"	m	struct:__anon131
rp	nvmecmds.h	/^  unsigned char   rp;$/;"	m	struct:smartmontools::nvme_lbaf
rpmbs	nvmecmds.h	/^  unsigned int    rpmbs;$/;"	m	struct:smartmontools::nvme_id_ctrl
rsvd	linux_nvme_ioctl.h	/^	__u16	rsvd;$/;"	m	struct:nvme_user_io
rsvd	os_qnxnto.h	/^		uchar_t		rsvd;$/;"	m	struct:_cdb::__anon54
rsvd	os_qnxnto.h	/^		uchar_t		rsvd[3];$/;"	m	struct:_cdb::__anon82
rsvd	os_qnxnto.h	/^		uchar_t		rsvd[3];$/;"	m	struct:_cdb::__anon87
rsvd	os_qnxnto.h	/^		uchar_t		rsvd[5];$/;"	m	struct:_cdb::__anon90
rsvd	os_qnxnto.h	/^	uchar_t		rsvd[3];$/;"	m	struct:_scsi_sense_descriptor
rsvd0	os_qnxnto.h	/^        uchar_t         rsvd0;$/;"	m	struct:_cdb::_format_unit_old
rsvd1	freebsd_nvme_ioctl.h	/^	uint16_t rsvd1	:  6;$/;"	m	struct:nvme_command
rsvd1	freebsd_nvme_ioctl.h	/^	uint32_t		rsvd1;$/;"	m	struct:nvme_completion
rsvd1	linux_nvme_ioctl.h	/^	__u16	rsvd1;$/;"	m	struct:nvme_passthru_cmd
rsvd1	os_qnxnto.h	/^		uchar_t		rsvd1;$/;"	m	struct:_cdb::__anon67
rsvd1	os_qnxnto.h	/^        uchar_t         rsvd1;$/;"	m	struct:_cdb::_format_unit_old
rsvd1	os_qnxnto.h	/^        uchar_t         rsvd1[7];$/;"	m	struct:_cdb::_format_unit
rsvd10	os_qnxnto.h	/^		uchar_t		rsvd10;$/;"	m	struct:_cdb::__anon55
rsvd10	os_qnxnto.h	/^		uchar_t		rsvd10;$/;"	m	struct:_cdb::__anon71
rsvd10	os_qnxnto.h	/^		uchar_t		rsvd10;$/;"	m	struct:_cdb::__anon74
rsvd11	os_qnxnto.h	/^		uchar_t		rsvd11;$/;"	m	struct:_cdb::__anon71
rsvd11	os_qnxnto.h	/^		uchar_t		rsvd11;$/;"	m	struct:_cdb::__anon74
rsvd11	os_qnxnto.h	/^		uchar_t		rsvd11;$/;"	m	struct:_cdb::__anon81
rsvd19	nvmecmds.h	/^  unsigned char   rsvd19;$/;"	m	struct:smartmontools::nvme_id_power_state
rsvd192	nvmecmds.h	/^  unsigned char   rsvd192[192];$/;"	m	struct:smartmontools::nvme_id_ns
rsvd2	freebsd_nvme_ioctl.h	/^	uint16_t rsvd2	:  2;$/;"	m	struct:nvme_status
rsvd2	freebsd_nvme_ioctl.h	/^	uint32_t rsvd2;$/;"	m	struct:nvme_command
rsvd2	nvmecmds.h	/^  unsigned char   rsvd2;$/;"	m	struct:smartmontools::nvme_id_power_state
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon57
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon58
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon59
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon60
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon64
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon65
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon67
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon68
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon69
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon70
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon74
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon76
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon77
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon81
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2;$/;"	m	struct:_cdb::__anon83
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2[3];$/;"	m	struct:_cdb::__anon84
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2[6];$/;"	m	struct:_cdb::__anon73
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2[6];$/;"	m	struct:_cdb::__anon78
rsvd2	os_qnxnto.h	/^		uchar_t		rsvd2[7];$/;"	m	struct:_cdb::__anon85
rsvd2	os_qnxnto.h	/^        uchar_t         rsvd2;$/;"	m	struct:_cdb::_format_unit_old
rsvd216	nvmecmds.h	/^  unsigned char  rsvd216[296];$/;"	m	struct:smartmontools::nvme_smart_log
rsvd23	nvmecmds.h	/^  unsigned char   rsvd23[9];$/;"	m	struct:smartmontools::nvme_id_power_state
rsvd3	freebsd_nvme_ioctl.h	/^	uint32_t rsvd3;$/;"	m	struct:nvme_command
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon59
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon60
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon61
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon63
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon64
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon65
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon67
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon68
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon70
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon72
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon74
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon76
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon77
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3;$/;"	m	struct:_cdb::__anon80
rsvd3	os_qnxnto.h	/^		uchar_t		rsvd3[2];$/;"	m	struct:_cdb::__anon73
rsvd316	nvmecmds.h	/^  unsigned char   rsvd316[196];$/;"	m	struct:smartmontools::nvme_id_ctrl
rsvd33	nvmecmds.h	/^  unsigned char   rsvd33;$/;"	m	struct:smartmontools::nvme_id_ns
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon60
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon61
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon63
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon67
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon68
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon72
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon75
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon77
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::__anon79
rsvd4	os_qnxnto.h	/^		uchar_t		rsvd4;$/;"	m	struct:_cdb::_mode_sense10
rsvd4	os_qnxnto.h	/^        uchar_t         rsvd4[4];$/;"	m	struct:_cdb::_format_unit_old
rsvd46	nvmecmds.h	/^  unsigned char   rsvd46[2];$/;"	m	struct:smartmontools::nvme_id_ns
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon60
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon61
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon67
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon68
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon72
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon74
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon75
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon76
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon77
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::__anon79
rsvd5	os_qnxnto.h	/^		uchar_t		rsvd5;$/;"	m	struct:_cdb::_mode_sense10
rsvd514	nvmecmds.h	/^  unsigned char   rsvd514[2];$/;"	m	struct:smartmontools::nvme_id_ctrl
rsvd531	nvmecmds.h	/^  unsigned char   rsvd531;$/;"	m	struct:smartmontools::nvme_id_ctrl
rsvd534	nvmecmds.h	/^  unsigned char   rsvd534[2];$/;"	m	struct:smartmontools::nvme_id_ctrl
rsvd540	nvmecmds.h	/^  unsigned char   rsvd540[1508];$/;"	m	struct:smartmontools::nvme_id_ctrl
rsvd6	nvmecmds.h	/^  unsigned char  rsvd6[26];$/;"	m	struct:smartmontools::nvme_smart_log
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon60
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon61
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon67
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon68
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon70
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon71
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon74
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon75
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon76
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::__anon77
rsvd6	os_qnxnto.h	/^		uchar_t		rsvd6;$/;"	m	struct:_cdb::_mode_sense10
rsvd64	nvmecmds.h	/^  unsigned char   rsvd64[40];$/;"	m	struct:smartmontools::nvme_id_ns
rsvd7	os_qnxnto.h	/^		uchar_t		rsvd7;$/;"	m	struct:_cdb::__anon68
rsvd7	os_qnxnto.h	/^		uchar_t		rsvd7;$/;"	m	struct:_cdb::__anon71
rsvd7	os_qnxnto.h	/^		uchar_t		rsvd7;$/;"	m	struct:_cdb::__anon74
rsvd7	os_qnxnto.h	/^		uchar_t		rsvd7;$/;"	m	struct:_cdb::__anon83
rsvd8	os_qnxnto.h	/^		uchar_t		rsvd8;$/;"	m	struct:_cdb::__anon71
rsvd9	os_qnxnto.h	/^		uchar_t		rsvd9;$/;"	m	struct:_cdb::__anon74
rsvd96	nvmecmds.h	/^  unsigned char   rsvd96[160];$/;"	m	struct:smartmontools::nvme_id_ctrl
rt	os_qnxnto.h	/^		uchar_t		rt;$/;"	m	struct:_cdb::__anon75
rtd3e	nvmecmds.h	/^  unsigned int    rtd3e;$/;"	m	struct:smartmontools::nvme_id_ctrl
rtd3r	nvmecmds.h	/^  unsigned int    rtd3r;$/;"	m	struct:smartmontools::nvme_id_ctrl
run_cmd	os_win32.cpp	/^static int run_cmd(const char * cmd, char * dataout, int outsize)$/;"	f	namespace:os_win32
running_event	os_win32/daemon_win32.cpp	/^static HANDLE running_event;$/;"	v	file:
s	megaraid.h	/^    u16 s[6];$/;"	m	union:megasas_dcmd_frame::__anon46
sARCMSR_IO_HDR	dev_areca.h	/^} sARCMSR_IO_HDR;$/;"	t	typeref:struct:_ARCMSR_IO_HDR
sSRB_BUFFER	dev_areca.h	/^} sSRB_BUFFER;$/;"	t	typeref:struct:_SRB_BUFFER
s_instance	dev_interface.cpp	/^smart_interface * smart_interface::s_instance;$/;"	m	class:smart_interface	file:
s_instance	dev_interface.h	/^  static smart_interface * s_instance; \/\/\/< Pointer to the interface object.$/;"	m	class:smart_interface
s_num_objects	dev_interface.cpp	/^int smart_device::s_num_objects = 0;$/;"	m	class:smart_device	file:
s_num_objects	dev_interface.h	/^  static int s_num_objects;$/;"	m	class:smart_device
s_reg_t	regex/regex.h	/^typedef long int s_reg_t;$/;"	t
sa_read_write	os_qnxnto.h	/^	} sa_read_write;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon86
safe_snprintf	utility.cpp	/^int safe_snprintf(char *buf, int size, const char *fmt, ...)$/;"	f
safe_vsnprintf	utility.cpp	/^int safe_vsnprintf(char *buf, int size, const char *fmt, va_list ap)$/;"	f
sampling_period	atacmds.h	/^  unsigned short sampling_period;   \/\/ 2-3: Temperature sampling period in minutes$/;"	m	struct:ata_sct_temperature_history_table
sas_addr	megaraid.h	/^  u64 sas_addr[2];$/;"	m	struct:megasas_pd_address
sasphy	scsiprint.h	/^  bool sasphy, sasphy_reset;$/;"	m	struct:scsi_print_options
sasphy_reset	scsiprint.h	/^  bool sasphy, sasphy_reset;$/;"	m	struct:scsi_print_options
sat	scsiata.cpp	/^namespace sat { \/\/ no need to publish anything, name provided for Doxygen$/;"	n	file:
sat	scsiata.cpp	/^namespace sat {$/;"	n	file:
sat_device	scsiata.cpp	/^class sat_device$/;"	c	namespace:sat	file:
sat_device	scsiata.cpp	/^sat_device::sat_device(smart_interface * intf, scsi_device * scsidev,$/;"	f	class:sat::sat_device
sataphy	ataprint.h	/^  bool sataphy, sataphy_reset;$/;"	m	struct:ata_print_options
sataphy_reset	ataprint.h	/^  bool sataphy, sataphy_reset;$/;"	m	struct:ata_print_options
savestates	Makefile	/^savestates = $/;"	m
savestatesdir	Makefile	/^savestatesdir = $/;"	m
sbcset	regex/regex_internal.h	/^    re_bitset_ptr_t sbcset;	\/* for SIMPLE_BRACKET *\/$/;"	m	union:__anon119::__anon120
sbin_PROGRAMS	Makefile	/^sbin_PROGRAMS = smartctl$(EXEEXT) smartd$(EXEEXT)$/;"	m
sbin_SCRIPTS	Makefile	/^sbin_SCRIPTS = update-smart-drivedb$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sc	freebsd_nvme_ioctl.h	/^	uint16_t sc	:  8;	\/* status code *\/$/;"	m	struct:nvme_status
scan_after_select	atacmds.h	/^  int scan_after_select; \/\/ Run offline scan after selective self-test:$/;"	m	struct:ata_selective_selftest_args
scan_devices	smartctl.cpp	/^void scan_devices(const smart_devtype_list & types, bool with_open, char ** argv)$/;"	f
scan_smart_devices	dev_interface.cpp	/^bool smart_interface::scan_smart_devices(smart_device_list & devlist,$/;"	f	class:smart_interface
scan_smart_devices	dev_legacy.cpp	/^bool legacy_smart_interface::scan_smart_devices(smart_device_list & devlist,$/;"	f	class:os::legacy_smart_interface
scan_smart_devices	os_darwin.cpp	/^bool darwin_smart_interface::scan_smart_devices(smart_device_list & devlist,$/;"	f	class:os::darwin_smart_interface
scan_smart_devices	os_freebsd.cpp	/^bool freebsd_smart_interface::scan_smart_devices(smart_device_list & devlist,$/;"	f	class:os_freebsd::freebsd_smart_interface
scan_smart_devices	os_generic.cpp	/^bool generic_smart_interface::scan_smart_devices(smart_device_list & devlist,$/;"	f	class:generic::generic_smart_interface
scan_smart_devices	os_linux.cpp	/^bool linux_smart_interface::scan_smart_devices(smart_device_list & devlist,$/;"	f	class:os_linux::linux_smart_interface
scan_smart_devices	os_win32.cpp	/^bool win_smart_interface::scan_smart_devices(smart_device_list & devlist,$/;"	f	class:os_win32::win_smart_interface
scheduled_test_next_check	smartd.cpp	/^  time_t scheduled_test_next_check;       \/\/ Time of next check for scheduled self-tests$/;"	m	struct:persistent_dev_state	file:
scsiCheckIE	scsicmds.cpp	/^scsiCheckIE(scsi_device * device, int hasIELogPage, int hasTempLogPage,$/;"	f
scsiCountFailedSelfTests	scsicmds.cpp	/^scsiCountFailedSelfTests(scsi_device * fd, int noisy)$/;"	f
scsiDecodeErrCounterPage	scsicmds.cpp	/^scsiDecodeErrCounterPage(unsigned char * resp, struct scsiErrorCounter *ecp)$/;"	f
scsiDecodeNonMediumErrPage	scsicmds.cpp	/^scsiDecodeNonMediumErrPage(unsigned char *resp,$/;"	f
scsiErrString	scsicmds.cpp	/^scsiErrString(int scsiErr)$/;"	f
scsiErrorCounter	scsicmds.h	/^struct scsiErrorCounter {$/;"	s
scsiFetchControlGLTSD	scsicmds.cpp	/^scsiFetchControlGLTSD(scsi_device * device, int modese_len, int current)$/;"	f
scsiFetchExtendedSelfTestTime	scsicmds.cpp	/^scsiFetchExtendedSelfTestTime(scsi_device * device, int * durationSec,$/;"	f
scsiFetchIECmpage	scsicmds.cpp	/^scsiFetchIECmpage(scsi_device * device, struct scsi_iec_mode_page *iecp,$/;"	f
scsiFetchTransportProtocol	scsicmds.cpp	/^scsiFetchTransportProtocol(scsi_device * device, int modese_len)$/;"	f
scsiGetDriveInfo	scsiprint.cpp	/^scsiGetDriveInfo(scsi_device * device, UINT8 * peripheral_type, bool all)$/;"	f	file:
scsiGetIEString	scsicmds.cpp	/^scsiGetIEString(UINT8 asc, UINT8 ascq)$/;"	f
scsiGetProtPBInfo	scsicmds.cpp	/^scsiGetProtPBInfo(scsi_device * device, unsigned char * rc16_12_31p)$/;"	f
scsiGetRPM	scsicmds.cpp	/^scsiGetRPM(scsi_device * device, int modese_len, int * form_factorp,$/;"	f
scsiGetSetCache	scsicmds.cpp	/^scsiGetSetCache(scsi_device * device,  int modese_len, short int * wcep,$/;"	f
scsiGetSize	scsicmds.cpp	/^scsiGetSize(scsi_device * device, unsigned int * lb_sizep,$/;"	f
scsiGetSmartData	scsiprint.cpp	/^scsiGetSmartData(scsi_device * device, bool attribs)$/;"	f	file:
scsiGetStartStopData	scsiprint.cpp	/^scsiGetStartStopData(scsi_device * device)$/;"	f	file:
scsiGetSupportedLogPages	scsiprint.cpp	/^scsiGetSupportedLogPages(scsi_device * device)$/;"	f	file:
scsiGetTapeAlertsData	scsiprint.cpp	/^scsiGetTapeAlertsData(scsi_device * device, int peripheral_type)$/;"	f	file:
scsiGetTemp	scsicmds.cpp	/^scsiGetTemp(scsi_device * device, UINT8 *currenttemp, UINT8 *triptemp)$/;"	f
scsiInquiryVpd	scsicmds.cpp	/^scsiInquiryVpd(scsi_device * device, int vpd_page, UINT8 *pBuf, int bufLen)$/;"	f
scsiLogSelect	scsicmds.cpp	/^scsiLogSelect(scsi_device * device, int pcr, int sp, int pc, int pagenum,$/;"	f
scsiLogSense	scsicmds.cpp	/^scsiLogSense(scsi_device * device, int pagenum, int subpagenum, UINT8 *pBuf,$/;"	f
scsiModePageOffset	scsicmds.cpp	/^scsiModePageOffset(const UINT8 * resp, int len, int modese_len)$/;"	f
scsiModeSelect	scsicmds.cpp	/^scsiModeSelect(scsi_device * device, int sp, UINT8 *pBuf, int bufLen)$/;"	f
scsiModeSelect10	scsicmds.cpp	/^scsiModeSelect10(scsi_device * device, int sp, UINT8 *pBuf, int bufLen)$/;"	f
scsiModeSense	scsicmds.cpp	/^scsiModeSense(scsi_device * device, int pagenum, int subpagenum, int pc,$/;"	f
scsiModeSense10	scsicmds.cpp	/^scsiModeSense10(scsi_device * device, int pagenum, int subpagenum, int pc,$/;"	f
scsiNonMediumError	scsicmds.h	/^struct scsiNonMediumError {$/;"	s
scsiPrintBackgroundResults	scsiprint.cpp	/^scsiPrintBackgroundResults(scsi_device * device)$/;"	f	file:
scsiPrintErrorCounterLog	scsiprint.cpp	/^scsiPrintErrorCounterLog(scsi_device * device)$/;"	f	file:
scsiPrintGrownDefectListLen	scsiprint.cpp	/^scsiPrintGrownDefectListLen(scsi_device * device)$/;"	f	file:
scsiPrintMain	scsiprint.cpp	/^scsiPrintMain(scsi_device * device, const scsi_print_options & options)$/;"	f
scsiPrintSSMedia	scsiprint.cpp	/^scsiPrintSSMedia(scsi_device * device)$/;"	f	file:
scsiPrintSasPhy	scsiprint.cpp	/^scsiPrintSasPhy(scsi_device * device, int reset)$/;"	f	file:
scsiPrintSeagateCacheLPage	scsiprint.cpp	/^scsiPrintSeagateCacheLPage(scsi_device * device)$/;"	f	file:
scsiPrintSeagateFactoryLPage	scsiprint.cpp	/^scsiPrintSeagateFactoryLPage(scsi_device * device)$/;"	f	file:
scsiPrintSelfTest	scsiprint.cpp	/^scsiPrintSelfTest(scsi_device * device)$/;"	f	file:
scsiPrintTemp	scsiprint.cpp	/^scsiPrintTemp(scsi_device * device)$/;"	f	file:
scsiReadCapacity10	scsicmds.cpp	/^scsiReadCapacity10(scsi_device * device, unsigned int * last_lbap,$/;"	f
scsiReadCapacity16	scsicmds.cpp	/^scsiReadCapacity16(scsi_device * device, UINT8 *pBuf, int bufLen)$/;"	f
scsiReadDefect10	scsicmds.cpp	/^scsiReadDefect10(scsi_device * device, int req_plist, int req_glist,$/;"	f
scsiReadDefect12	scsicmds.cpp	/^scsiReadDefect12(scsi_device * device, int req_plist, int req_glist,$/;"	f
scsiRequestSense	scsicmds.cpp	/^scsiRequestSense(scsi_device * device, struct scsi_sense_disect * sense_info)$/;"	f
scsiSelfTestInProgress	scsicmds.cpp	/^scsiSelfTestInProgress(scsi_device * fd, int * inProgress)$/;"	f
scsiSendDiagnostic	scsicmds.cpp	/^scsiSendDiagnostic(scsi_device * device, int functioncode, UINT8 *pBuf,$/;"	f
scsiSetControlGLTSD	scsicmds.cpp	/^scsiSetControlGLTSD(scsi_device * device, int enabled, int modese_len)$/;"	f
scsiSetExceptionControlAndWarning	scsicmds.cpp	/^scsiSetExceptionControlAndWarning(scsi_device * device, int enabled,$/;"	f
scsiSimpleSenseFilter	scsicmds.cpp	/^scsiSimpleSenseFilter(const struct scsi_sense_disect * sinfo)$/;"	f
scsiSmartDefaultSelfTest	scsicmds.cpp	/^scsiSmartDefaultSelfTest(scsi_device * device)$/;"	f
scsiSmartDisable	scsiprint.cpp	/^scsiSmartDisable(scsi_device * device)$/;"	f	file:
scsiSmartEnable	scsiprint.cpp	/^scsiSmartEnable(scsi_device * device)$/;"	f	file:
scsiSmartExtendCapSelfTest	scsicmds.cpp	/^scsiSmartExtendCapSelfTest(scsi_device * device)$/;"	f
scsiSmartExtendSelfTest	scsicmds.cpp	/^scsiSmartExtendSelfTest(scsi_device * device)$/;"	f
scsiSmartSelfTestAbort	scsicmds.cpp	/^scsiSmartSelfTestAbort(scsi_device * device)$/;"	f
scsiSmartShortCapSelfTest	scsicmds.cpp	/^scsiSmartShortCapSelfTest(scsi_device * device)$/;"	f
scsiSmartShortSelfTest	scsicmds.cpp	/^scsiSmartShortSelfTest(scsi_device * device)$/;"	f
scsiStdInquiry	scsicmds.cpp	/^scsiStdInquiry(scsi_device * device, UINT8 *pBuf, int bufLen)$/;"	f
scsiTapeAlertsChangerDevice	scsicmds.cpp	/^scsiTapeAlertsChangerDevice(unsigned short code)$/;"	f
scsiTapeAlertsTapeDevice	scsicmds.cpp	/^scsiTapeAlertsTapeDevice(unsigned short code)$/;"	f
scsiTestUnitReady	scsicmds.cpp	/^scsiTestUnitReady(scsi_device * device)$/;"	f
scsi_IsExceptionControlEnabled	scsicmds.cpp	/^scsi_IsExceptionControlEnabled(const struct scsi_iec_mode_page *iecp)$/;"	f
scsi_IsWarningEnabled	scsicmds.cpp	/^scsi_IsWarningEnabled(const struct scsi_iec_mode_page *iecp)$/;"	f
scsi_cmnd_io	scsicmds.h	/^struct scsi_cmnd_io$/;"	s
scsi_debugmode	scsicmds.cpp	/^unsigned char scsi_debugmode = 0;$/;"	v
scsi_decode_lu_dev_id	scsicmds.cpp	/^scsi_decode_lu_dev_id(const unsigned char * b, int blen, char * s, int slen,$/;"	f
scsi_dev_type	megaraid.h	/^  u8 scsi_dev_type; \/* 0 = disk *\/$/;"	m	struct:megasas_pd_address
scsi_device	dev_interface.h	/^  scsi_device()$/;"	f	class:scsi_device
scsi_device	dev_interface.h	/^class scsi_device$/;"	c
scsi_device_auto_ptr	dev_interface.h	/^typedef any_device_auto_ptr<scsi_device>  scsi_device_auto_ptr;$/;"	t
scsi_do_sense_disect	scsicmds.cpp	/^scsi_do_sense_disect(const struct scsi_cmnd_io * io_buf,$/;"	f
scsi_error_counter_t	smartd.cpp	/^    scsi_error_counter_t() : found(0)$/;"	f	struct:persistent_dev_state::scsi_error_counter_t
scsi_error_counter_t	smartd.cpp	/^  struct scsi_error_counter_t {$/;"	s	struct:persistent_dev_state	file:
scsi_error_counters	smartd.cpp	/^  scsi_error_counter_t scsi_error_counters[3];$/;"	m	struct:persistent_dev_state	file:
scsi_format_id_string	scsicmds.cpp	/^scsi_format_id_string(char * out, const unsigned char * in, int n)$/;"	f
scsi_get_opcode_name	scsicmds.cpp	/^scsi_get_opcode_name(UINT8 opcode)$/;"	f
scsi_iec_mode_page	scsicmds.h	/^struct scsi_iec_mode_page {$/;"	s
scsi_nonmedium_error	smartd.cpp	/^  scsi_nonmedium_error_t scsi_nonmedium_error;$/;"	m	struct:persistent_dev_state	file:
scsi_nonmedium_error_t	smartd.cpp	/^    scsi_nonmedium_error_t() : found(0)$/;"	f	struct:persistent_dev_state::scsi_nonmedium_error_t
scsi_nonmedium_error_t	smartd.cpp	/^  struct scsi_nonmedium_error_t {$/;"	s	struct:persistent_dev_state	file:
scsi_opcode_name	scsicmds.cpp	/^struct scsi_opcode_name {$/;"	s	file:
scsi_pass_through	dev_areca.cpp	/^bool areca_scsi_device::scsi_pass_through(struct scsi_cmnd_io * iop)$/;"	f	class:areca_scsi_device
scsi_pass_through	dev_legacy.cpp	/^bool legacy_scsi_device::scsi_pass_through(scsi_cmnd_io * iop)$/;"	f	class:os::legacy_scsi_device
scsi_pass_through	os_freebsd.cpp	/^bool freebsd_cciss_device::scsi_pass_through(scsi_cmnd_io * iop)$/;"	f	class:os_freebsd::freebsd_cciss_device
scsi_pass_through	os_freebsd.cpp	/^bool freebsd_scsi_device::scsi_pass_through(scsi_cmnd_io * iop)$/;"	f	class:os_freebsd::freebsd_scsi_device
scsi_pass_through	os_linux.cpp	/^bool linux_aacraid_device::scsi_pass_through(scsi_cmnd_io *iop)$/;"	f	class:os_linux::linux_aacraid_device
scsi_pass_through	os_linux.cpp	/^bool linux_cciss_device::scsi_pass_through(scsi_cmnd_io * iop)$/;"	f	class:os_linux::linux_cciss_device
scsi_pass_through	os_linux.cpp	/^bool linux_megaraid_device::scsi_pass_through(scsi_cmnd_io *iop)$/;"	f	class:os_linux::linux_megaraid_device
scsi_pass_through	os_linux.cpp	/^bool linux_scsi_device::scsi_pass_through(scsi_cmnd_io * iop)$/;"	f	class:os_linux::linux_scsi_device
scsi_pass_through	os_win32.cpp	/^bool win_aacraid_device::scsi_pass_through(struct scsi_cmnd_io *iop)$/;"	f	class:os_win32::win_aacraid_device
scsi_pass_through	os_win32.cpp	/^bool win_scsi_device::scsi_pass_through(struct scsi_cmnd_io * iop)$/;"	f	class:os_win32::win_scsi_device
scsi_pass_through	scsiata.cpp	/^bool sat_device::scsi_pass_through(scsi_cmnd_io * iop)$/;"	f	class:sat::sat_device
scsi_pass_through_and_check	scsiata.cpp	/^static bool scsi_pass_through_and_check(scsi_device * scsidev,  scsi_cmnd_io * iop,$/;"	f	file:
scsi_pass_through_direct	os_win32.cpp	/^static long scsi_pass_through_direct(HANDLE fd, UCHAR targetid, struct scsi_cmnd_io * iop)$/;"	f	namespace:os_win32
scsi_pass_through_indirect	os_win32.cpp	/^static long scsi_pass_through_indirect(HANDLE h,$/;"	f	namespace:os_win32
scsi_print_options	scsiprint.h	/^  scsi_print_options()$/;"	f	struct:scsi_print_options
scsi_print_options	scsiprint.h	/^struct scsi_print_options$/;"	s
scsi_sense_disect	scsicmds.h	/^struct scsi_sense_disect {$/;"	s
scsi_status	aacraid.h	/^  uint32_t scsi_status;$/;"	m	struct:__anon143
scsi_status	megaraid.h	/^  u8 scsi_status;    \/*03h *\/$/;"	m	struct:megasas_pthru_frame
scsi_status	megaraid.h	/^  u8 scsi_status;   \/*03h *\/$/;"	m	struct:megasas_header
scsi_status	scsicmds.h	/^    UINT8 scsi_status;  \/* [out]: 0->ok, 2->CHECK CONDITION, etc ... *\/$/;"	m	struct:scsi_cmnd_io
scsi_vpd_dev_id_iter	scsicmds.cpp	/^scsi_vpd_dev_id_iter(const unsigned char * initial_desig_desc, int page_len,$/;"	f
scsiata_cpp_cvsid	scsiata.cpp	/^const char * scsiata_cpp_cvsid = "$Id: scsiata.cpp 4276 2016-04-02 19:13:39Z chrfranke $";$/;"	v
scsicmds_c_cvsid	scsicmds.cpp	/^const char *scsicmds_c_cvsid="$Id: scsicmds.cpp 4243 2016-03-20 18:29:36Z chrfranke $"$/;"	v
scsiprint_c_cvsid	scsiprint.cpp	/^const char * scsiprint_c_cvsid = "$Id: scsiprint.cpp 4292 2016-04-12 23:06:59Z dpgilbert $"$/;"	v
scsistatus	megaraid.h	/^  uint8_t  scsistatus;$/;"	m	struct:__anon41
sct	freebsd_nvme_ioctl.h	/^	uint16_t sct	:  3;	\/* status code type *\/$/;"	m	struct:nvme_status
sct_device_state_msg	ataprint.cpp	/^static const char * sct_device_state_msg(unsigned char state)$/;"	f	file:
sct_erc_get	ataprint.h	/^  bool sct_erc_get;$/;"	m	struct:ata_print_options
sct_erc_readtime	ataprint.h	/^  unsigned sct_erc_readtime, sct_erc_writetime;$/;"	m	struct:ata_print_options
sct_erc_readtime	smartd.cpp	/^  unsigned short sct_erc_readtime;        \/\/ ERC read time (deciseconds)$/;"	m	struct:dev_config	file:
sct_erc_set	ataprint.h	/^  bool sct_erc_set;$/;"	m	struct:ata_print_options
sct_erc_set	smartd.cpp	/^  bool sct_erc_set;                       \/\/ set SCT ERC to:$/;"	m	struct:dev_config	file:
sct_erc_writetime	ataprint.h	/^  unsigned sct_erc_readtime, sct_erc_writetime;$/;"	m	struct:ata_print_options
sct_erc_writetime	smartd.cpp	/^  unsigned short sct_erc_writetime;       \/\/ ERC write time (deciseconds)$/;"	m	struct:dev_config	file:
sct_pbar	ataprint.cpp	/^static const char * sct_pbar(int x, char (& buf)[64])$/;"	f	file:
sct_ptemp	ataprint.cpp	/^static const char * sct_ptemp(signed char x, char (& buf)[20])$/;"	f	file:
sct_spec	atacmds.h	/^  unsigned short sct_spec;          \/\/ 4-5: SCT level supported (1)$/;"	m	struct:ata_sct_status_response
sct_temp_hist	ataprint.h	/^  bool sct_temp_sts, sct_temp_hist;$/;"	m	struct:ata_print_options
sct_temp_int	ataprint.h	/^  unsigned sct_temp_int;$/;"	m	struct:ata_print_options
sct_temp_int_pers	ataprint.h	/^  bool sct_temp_int_pers;$/;"	m	struct:ata_print_options
sct_temp_sts	ataprint.h	/^  bool sct_temp_sts, sct_temp_hist;$/;"	m	struct:ata_print_options
sct_version	atacmds.h	/^  unsigned short sct_version;       \/\/ 2-3: Vendor specific version number$/;"	m	struct:ata_sct_status_response
sct_wcache_reorder_get	ataprint.h	/^  bool sct_wcache_reorder_get; \/\/ print write cache reordering status$/;"	m	struct:ata_print_options
sct_wcache_reorder_set	ataprint.h	/^  int sct_wcache_reorder_set; \/\/ disable(-1), enable(1) write cache reordering$/;"	m	struct:ata_print_options
sdxy_to_phydrive	os_win32.cpp	/^static int sdxy_to_phydrive(const char (& xy)[2+1])$/;"	f	namespace:os_win32
search_cur_bkref_entry	regex/regexec.c	/^search_cur_bkref_entry (mctx, str_idx)$/;"	f	file:
search_duplicated_node	regex/regcomp.c	/^search_duplicated_node (dfa, org_node, constraint)$/;"	f	file:
sector	os_linux.h	/^    unsigned sector		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
sector_count	atacmds.h	/^  unsigned char sector_count;$/;"	m	struct:ata_smart_errorlog_command_struct
sector_count	atacmds.h	/^  unsigned char sector_count;$/;"	m	struct:ata_smart_errorlog_error_struct
sector_count	dev_interface.h	/^  ata_register sector_count; \/\/ sector count     \/\/ count$/;"	m	struct:ata_in_regs
sector_count	dev_interface.h	/^  ata_register sector_count;$/;"	m	struct:ata_out_regs
sector_count	dev_interface.h	/^  bool error, sector_count, lba_low, lba_mid, lba_high, device, status;$/;"	m	struct:ata_out_regs_flags
sector_count	os_freebsd.h	/^    u_int16_t	sector_count;$/;"	m	struct:__anon9
sector_count	os_linux.h	/^  task_ioreg_t sector_count;$/;"	m	struct:hd_drive_task_hdr
sector_count	os_linux.h	/^  unsigned short sector_count;$/;"	m	struct:TAG_TW_Passthru
sector_count	os_qnxnto.h	/^		uchar_t		sector_count;$/;"	m	struct:_ata_pass_thru
sector_count	os_qnxnto.h	/^		uchar_t		sector_count;$/;"	m	struct:_cdb::_ata_pass_thru
sector_count	os_qnxnto.h	/^	uchar_t			sector_count;			\/* (7:0) *\/$/;"	m	struct:_ata_status_descriptor
sector_count_16	dev_interface.h	/^  ata_reg_alias_16 sector_count_16;$/;"	m	struct:ata_in_regs_48bit
sector_count_16	dev_interface.h	/^  ata_reg_alias_16 sector_count_16;$/;"	m	struct:ata_out_regs_48bit
sector_hob	os_linux.h	/^    unsigned sector_hob		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
sector_num	os_freebsd.h	/^    u_int16_t	sector_num;$/;"	m	struct:__anon9
sector_num	os_linux.h	/^  unsigned short sector_num;$/;"	m	struct:TAG_TW_Passthru
sector_number	atacmds.h	/^  unsigned char sector_number;$/;"	m	struct:ata_smart_errorlog_command_struct
sector_number	atacmds.h	/^  unsigned char sector_number;$/;"	m	struct:ata_smart_errorlog_error_struct
sector_number	os_linux.h	/^  task_ioreg_t sector_number;$/;"	m	struct:hd_drive_task_hdr
sectorcount	os_freebsd.h	/^  unsigned char sectorcount;$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
sectors	atacmds.h	/^  uint64_t sectors;$/;"	m	struct:ata_size_info
sectors	os_freebsd.h	/^  unsigned char sectors;    \/* data size in sectors, if the command has data transfer *\/$/;"	m	struct:_HPT_PASS_THROUGH_HEADER
segment	os_qnxnto.h	/^	uchar_t		segment;			\/\/ Segment number$/;"	m	struct:_scsi_sense
select	atacmds.cpp	/^    int select;$/;"	m	struct:__anon51::parsed_ata_device::parsed_ata_command	file:
select	os_linux.h	/^    unsigned select		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
select_hob	os_linux.h	/^    unsigned select_hob		: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
select_port	os_win32.cpp	/^bool csmi_device::select_port(int port)$/;"	f	class:os_win32::csmi_device
selection_code	atacmds.h	/^  unsigned short selection_code;    \/\/ 1 = Read Timer, 2 = Write Timer$/;"	m	struct:ata_sct_error_recovery_control_command
selective_test_last_end	smartd.cpp	/^  uint64_t selective_test_last_end;       \/\/ End LBA of last scheduled selective self-test$/;"	m	struct:persistent_dev_state	file:
selective_test_last_start	smartd.cpp	/^  uint64_t selective_test_last_start;     \/\/ Start LBA of last scheduled selective self-test$/;"	m	struct:persistent_dev_state	file:
selecturl	update-smart-drivedb	/^selecturl()$/;"	f
selecturl	update-smart-drivedb.in	/^selecturl()$/;"	f
self_test_code	scsiprint.cpp	/^static const char * self_test_code[] = {$/;"	v	file:
self_test_exec_status	atacmds.h	/^  unsigned char self_test_exec_status;  \/\/IBM # segments for offline collection$/;"	m	struct:ata_smart_values
self_test_result	scsiprint.cpp	/^static const char * self_test_result[] = {$/;"	v	file:
self_test_status	atacmds.h	/^  unsigned char self_test_status;$/;"	m	struct:ata_smart_extselftestlog_desc
self_test_type	atacmds.h	/^  unsigned char self_test_type;$/;"	m	struct:ata_smart_extselftestlog_desc
selflogcount	smartd.cpp	/^  unsigned char selflogcount;             \/\/ total number of self-test errors$/;"	m	struct:persistent_dev_state	file:
selfloghour	smartd.cpp	/^  unsigned short selfloghour;             \/\/ lifetime hours of last self-test error$/;"	m	struct:persistent_dev_state	file:
selftest	smartd.cpp	/^  bool selftest;                          \/\/ Monitor number of selftest errors$/;"	m	struct:dev_config	file:
selftest_started	smartd.cpp	/^  bool selftest_started;                  \/\/ true if self-test was started$/;"	m	struct:temp_dev_state	file:
selftest_struct	atacmds.h	/^  struct ata_smart_selftestlog_struct selftest_struct[21];$/;"	m	struct:ata_smart_selftestlog	typeref:struct:ata_smart_selftestlog::ata_smart_selftestlog_struct
selftestfailurecheckpoint	atacmds.h	/^  unsigned char selftestfailurecheckpoint;$/;"	m	struct:ata_smart_selftestlog_struct
selftestnumber	atacmds.h	/^  unsigned char selftestnumber; \/\/ Sector number register$/;"	m	struct:ata_smart_selftestlog_struct
selfteststatus	atacmds.h	/^  unsigned char selfteststatus;$/;"	m	struct:ata_smart_selftestlog_struct
selfteststs	smartd.cpp	/^  bool selfteststs;                       \/\/ Monitor changes in self-test execution status$/;"	m	struct:dev_config	file:
selfteststs_ns	smartd.cpp	/^  bool selfteststs_ns;                    \/\/ Disable auto standby if in progress$/;"	m	struct:dev_config	file:
sense	os_qnxnto.h	/^	uchar_t		sense;				\/\/ Sense key\/flags$/;"	m	struct:_scsi_sense
sense	os_qnxnto.h	/^	uchar_t		sense;				\/\/ Sense key\/flags$/;"	m	struct:_scsi_sense_descriptor
sense	os_qnxnto.h	/^  SCSI_SENSE_DESCRIPTOR	       sense;$/;"	m	struct:_ata_sense
sense_buf_phys_addr_hi	megaraid.h	/^  u32 sense_buf_phys_addr_hi; \/*1Ch *\/$/;"	m	struct:megasas_pthru_frame
sense_buf_phys_addr_lo	megaraid.h	/^  u32 sense_buf_phys_addr_lo; \/*18h *\/$/;"	m	struct:megasas_pthru_frame
sense_data	aacraid.h	/^  uint8_t  sense_data[30];$/;"	m	struct:__anon143
sense_data	os_freebsd.h	/^	TW_UINT8	sense_data[TWA_SENSE_DATA_LENGTH];$/;"	m	struct:tw_cl_command_header
sense_data	os_linux.h	/^  unsigned char sense_data[18];$/;"	m	struct:TAG_TW_Command_Apache_Header
sense_data_size	aacraid.h	/^  uint32_t sense_data_size;$/;"	m	struct:__anon143
sense_key	scsiata.cpp	/^    unsigned char sense_key;$/;"	m	struct:sg_scsi_sense_hdr	file:
sense_key	scsicmds.h	/^    UINT8 sense_key;$/;"	m	struct:scsi_sense_disect
sense_len	megaraid.h	/^  u32 sense_len;$/;"	m	struct:megasas_iocpacket
sense_len	megaraid.h	/^  u8 sense_len;      \/*01h *\/$/;"	m	struct:megasas_pthru_frame
sense_len	megaraid.h	/^  u8 sense_len;     \/*01h *\/$/;"	m	struct:megasas_header
sense_length	os_linux.h	/^  unsigned char   sense_length;$/;"	m	struct:TAG_TW_Command_Apache
sense_off	megaraid.h	/^  u32 sense_off;$/;"	m	struct:megasas_iocpacket
sensep	scsicmds.h	/^    UINT8 * sensep;     \/* [in]: ptr to sense buffer, filled when$/;"	m	struct:scsi_cmnd_io
sequence_id	os_freebsd.h	/^	TW_UINT32	sequence_id;$/;"	m	struct:tw_cl_driver_packet
sequence_id	os_freebsd.h	/^	TW_UINT32	sequence_id;$/;"	m	struct:tw_cl_event_packet
sequence_id	os_linux.h	/^  unsigned int sequence_id;$/;"	m	struct:TAG_TW_Ioctl_Driver_Command_9000
serial_no	atacmds.h	/^  unsigned char  serial_no[20];$/;"	m	struct:ata_identify_device
service_control	os_win32/daemon_win32.cpp	/^static void WINAPI service_control(DWORD ctrlcode)$/;"	f	file:
service_exit	os_win32/daemon_win32.cpp	/^static void service_exit(void)$/;"	f	file:
service_main	os_win32/daemon_win32.cpp	/^static void WINAPI service_main(DWORD \/*argc*\/, LPSTR * argv)$/;"	f	file:
service_report_status	os_win32/daemon_win32.cpp	/^static void service_report_status(int state, int seconds)$/;"	f	file:
set	atacmds.h	/^  void set(firmwarebug_defs bugs)$/;"	f	class:firmwarebug_defs
set	atacmds.h	/^  void set(firmwarebug_t bug)$/;"	f	class:firmwarebug_defs
set	dev_interface.h	/^  static void set(smart_interface * intf)$/;"	f	class:smart_interface
set	regex/regex_internal.h	/^     bitset set;$/;"	v
set	smartd.cpp	/^  void set(int id, unsigned char flags)$/;"	f	class:attribute_flags
set	smartd.cpp	/^void env_buffer::set(const char * name, const char * value)$/;"	f	class:env_buffer
set_aam	ataprint.h	/^  int set_aam; \/\/ disable(-1), enable(1..255->0..254) Automatic Acoustic Management$/;"	m	struct:ata_print_options
set_aam	smartd.cpp	/^  int set_aam; \/\/ disable(-1), enable(1..255->0..254) Automatic Acoustic Management$/;"	m	struct:dev_config	file:
set_apm	ataprint.h	/^  int set_apm; \/\/ disable(-1), enable(2..255->1..254) Advanced Power Management$/;"	m	struct:ata_print_options
set_apm	smartd.cpp	/^  int set_apm; \/\/ disable(-1), enable(2..255->1..254) Advanced Power Management$/;"	m	struct:dev_config	file:
set_base_from	depcomp	/^set_base_from ()$/;"	f
set_data_in	dev_interface.h	/^  void set_data_in(unsigned char op, void * buf, unsigned sz)$/;"	f	struct:nvme_cmd_in
set_data_in	dev_interface.h	/^  void set_data_in(void * buf, unsigned nsectors)$/;"	f	struct:ata_cmd_in
set_data_in_48bit	dev_interface.h	/^  void set_data_in_48bit(void * buf, unsigned nsectors)$/;"	f	struct:ata_cmd_in
set_data_out	dev_interface.h	/^  void set_data_out(const void * buf, unsigned nsectors)$/;"	f	struct:ata_cmd_in
set_dir_from	depcomp	/^set_dir_from ()$/;"	f
set_disknum	dev_areca.h	/^  void set_disknum(int disknum)$/;"	f	class:generic_areca_device
set_encnum	dev_areca.h	/^  void set_encnum(int encnum)$/;"	f	class:generic_areca_device
set_err	dev_interface.cpp	/^bool smart_device::set_err(int no)$/;"	f	class:smart_device
set_err	dev_interface.cpp	/^bool smart_device::set_err(int no, const char * msg, ...)$/;"	f	class:smart_device
set_err	dev_interface.cpp	/^bool smart_interface::set_err(int no)$/;"	f	class:smart_interface
set_err	dev_interface.cpp	/^bool smart_interface::set_err(int no, const char * msg, ...)$/;"	f	class:smart_interface
set_err	dev_interface.h	/^  bool set_err(const error_info & err)$/;"	f	class:smart_device
set_err	dev_interface.h	/^  bool set_err(const smart_device::error_info & err)$/;"	f	class:smart_interface
set_err_var	dev_interface.cpp	/^bool smart_interface::set_err_var(smart_device::error_info * err, int no)$/;"	f	class:smart_interface
set_fd	os_freebsd.cpp	/^  void set_fd(int fd)$/;"	f	class:os_freebsd::freebsd_smart_device
set_fd	os_linux.cpp	/^  void set_fd(int fd)$/;"	f	class:os_linux::linux_smart_device
set_fh	os_win32.cpp	/^  void set_fh(HANDLE fh)$/;"	f	class:os_win32::win_smart_device
set_info	dev_interface.h	/^  device_info & set_info()$/;"	f	class:smart_device
set_lookahead	ataprint.h	/^  int set_lookahead; \/\/ disable(-1), enable(1) read look-ahead$/;"	m	struct:ata_print_options
set_lookahead	smartd.cpp	/^  int set_lookahead; \/\/ disable(-1), enable(1) read look-ahead$/;"	m	struct:dev_config	file:
set_nsid	dev_interface.h	/^  void set_nsid(unsigned nsid)$/;"	f	class:nvme_device
set_nvme_err	dev_interface.cpp	/^bool nvme_device::set_nvme_err(nvme_cmd_out & out, unsigned status, const char * msg \/* = 0 *\/)$/;"	f	class:nvme_device
set_rcd	scsiprint.h	/^  short int set_wce, set_rcd;  \/\/ disable(-1), enable(1) cache$/;"	m	struct:scsi_print_options
set_regs	regex/regexec.c	/^set_regs (preg, mctx, nmatch, pmatch, fl_backtrack)$/;"	f	file:
set_security_freeze	ataprint.h	/^  bool set_security_freeze; \/\/ Freeze ATA security$/;"	m	struct:ata_print_options
set_security_freeze	smartd.cpp	/^  bool set_security_freeze; \/\/ Freeze ATA security$/;"	m	struct:dev_config	file:
set_standby	ataprint.h	/^  int set_standby; \/\/ set(1..255->0..254) standby timer$/;"	m	struct:ata_print_options
set_standby	smartd.cpp	/^  int set_standby; \/\/ set(1..255->0..254) standby timer$/;"	m	struct:dev_config	file:
set_standby_now	ataprint.h	/^  bool set_standby_now; \/\/ set drive to standby$/;"	m	struct:ata_print_options
set_wcache	ataprint.h	/^  int set_wcache; \/\/ disable(-1), enable(1) write cache$/;"	m	struct:ata_print_options
set_wcache	smartd.cpp	/^  int set_wcache; \/\/ disable(-1), enable(1) write cache$/;"	m	struct:dev_config	file:
set_wce	scsiprint.h	/^  short int set_wce, set_rcd;  \/\/ disable(-1), enable(1) cache$/;"	m	struct:scsi_print_options
setatafeature	os_freebsd.h	/^    TWE_Command_SETATAFEATURE	setatafeature;$/;"	m	union:__anon11
setup_3ware_nodes	os_linux.cpp	/^static int setup_3ware_nodes(const char *nodename, const char *driver_name)$/;"	f	namespace:os_linux
severities	scsiprint.cpp	/^static const char * const severities = "CWI";$/;"	v	file:
severity	os_freebsd.h	/^	TW_UINT8	severity;$/;"	m	struct:tw_cl_event_packet
severity	os_linux.h	/^      unsigned char severity:3;$/;"	m	struct:TAG_TW_Command_Apache_Header::__anon29::__anon30
severity_str	os_freebsd.h	/^	TW_UINT8	severity_str[20];$/;"	m	struct:tw_cl_event_packet
sg32	aacraid.h	/^  user_sgentry32   sg32[1];$/;"	m	struct:__anon139
sg32	aacraid.h	/^  user_sgmap32 sg32;           \/\/ pDatabuffer and address of Databuffer$/;"	m	struct:__anon142
sg64	aacraid.h	/^  user_sgentry64   sg64[1];$/;"	m	struct:__anon138
sg64	aacraid.h	/^  user_sgmap64 sg64;           \/\/ pDatabuffer and address of Databuffer$/;"	m	struct:__anon141
sg_io_cmnd_io	os_linux.cpp	/^static int sg_io_cmnd_io(int dev_fd, struct scsi_cmnd_io * iop, int report,$/;"	f	namespace:os_linux
sg_io_state	os_linux.cpp	/^static int sg_io_state = SG_IO_PRESENT_UNKNOWN;$/;"	m	namespace:os_linux	file:
sg_list	os_freebsd.h	/^	TW_UINT8	sg_list[872];\/* total struct size =$/;"	m	struct:tw_cl_command_9k
sg_list	os_linux.h	/^  TW_SG_Entry     sg_list[TW_MAX_SGL_LENGTH_9000];$/;"	m	struct:TAG_TW_Command_Apache
sg_list	os_linux.h	/^  TW_SG_Entry sg_list[TW_ATA_PASS_SGL_MAX];$/;"	m	struct:TAG_TW_Passthru
sg_scsi_normalize_sense	scsiata.cpp	/^static int sg_scsi_normalize_sense(const unsigned char * sensep, int sb_len,$/;"	f	file:
sg_scsi_sense_desc_find	scsicmds.cpp	/^sg_scsi_sense_desc_find(const unsigned char * sensep, int sense_len,$/;"	f
sg_scsi_sense_hdr	scsiata.cpp	/^struct sg_scsi_sense_hdr {$/;"	s	file:
sge32	megaraid.h	/^  struct megasas_sge32 sge32[1];$/;"	m	union:megasas_sgl	typeref:struct:megasas_sgl::megasas_sge32
sge64	megaraid.h	/^  struct megasas_sge64 sge64[1];$/;"	m	union:megasas_sgl	typeref:struct:megasas_sgl::megasas_sge64
sge_count	megaraid.h	/^  u32 sge_count;$/;"	m	struct:megasas_iocpacket
sge_count	megaraid.h	/^  u8 sge_count;      \/*07h *\/$/;"	m	struct:megasas_dcmd_frame
sge_count	megaraid.h	/^  u8 sge_count;      \/*07h *\/$/;"	m	struct:megasas_pthru_frame
sge_count	megaraid.h	/^  u8 sge_count;     \/*07h *\/$/;"	m	struct:megasas_header
sgl	megaraid.h	/^  struct iovec sgl[MAX_IOCTL_SGE];$/;"	m	struct:megasas_iocpacket	typeref:struct:megasas_iocpacket::iovec
sgl	megaraid.h	/^  union megasas_sgl sgl; \/*28h *\/$/;"	m	struct:megasas_dcmd_frame	typeref:union:megasas_dcmd_frame::megasas_sgl
sgl	megaraid.h	/^  union megasas_sgl sgl; \/*30h *\/$/;"	m	struct:megasas_pthru_frame	typeref:union:megasas_pthru_frame::megasas_sgl
sgl	os_freebsd.h	/^	TW_UINT8	sgl[1];$/;"	m	struct:tw_cl_command_download_firmware
sgl	os_freebsd.h	/^	TW_UINT8	sgl[1];$/;"	m	struct:tw_cl_command_param
sgl	os_freebsd.h	/^    TWE_SG_Entry sgl[TWE_MAX_ATA_SGL_LENGTH];$/;"	m	struct:__anon9
sgl	os_freebsd.h	/^    TWE_SG_Entry sgl[TWE_MAX_SGL_LENGTH];$/;"	m	struct:__anon3
sgl	os_freebsd.h	/^    TWE_SG_Entry sgl[TWE_MAX_SGL_LENGTH];$/;"	m	struct:__anon7
sgl	os_linux.h	/^      TW_SG_Entry sgl[TW_MAX_SGL_LENGTH];$/;"	m	struct:TW_Command::__anon35::__anon36
sgl	os_linux.h	/^      TW_SG_Entry sgl[TW_MAX_SGL_LENGTH];$/;"	m	struct:TW_Command::__anon35::__anon37
sgl	os_linux.h	/^      TW_SG_Entry sgl[TW_MAX_SGL_LENGTH_9000];$/;"	m	struct:TW_Command_9000::__anon23::__anon24
sgl	os_linux.h	/^      TW_SG_Entry sgl[TW_MAX_SGL_LENGTH_9000];$/;"	m	struct:TW_Command_9000::__anon23::__anon25
sgl_entries	os_linux.h	/^  unsigned short  sgl_entries;$/;"	m	struct:TAG_TW_Command_Apache
sgl_off	megaraid.h	/^  u32 sgl_off;$/;"	m	struct:megasas_iocpacket
sgl_off__opcode	os_freebsd.h	/^	TW_UINT8	sgl_off__opcode;\/* 3:5 *\/$/;"	m	struct:tw_cl_command_download_firmware
sgl_off__opcode	os_freebsd.h	/^	TW_UINT8	sgl_off__opcode;\/* 3:5 *\/$/;"	m	struct:tw_cl_command_generic
sgl_off__opcode	os_freebsd.h	/^	TW_UINT8	sgl_off__opcode;\/* 3:5 *\/$/;"	m	struct:tw_cl_command_param
sgl_offset	os_freebsd.h	/^	TW_UINT8	sgl_offset; \/* offset (in bytes) to sg_list, from the$/;"	m	struct:tw_cl_command_9k
sgl_offset	os_freebsd.h	/^    u_int8_t	sgl_offset:3;$/;"	m	struct:__anon10
sgl_offset	os_freebsd.h	/^    u_int8_t	sgl_offset:3;$/;"	m	struct:__anon9
sgl_offset	os_linux.h	/^    unsigned char sgl_offset:3;$/;"	m	struct:TW_Command::__anon32
sgl_offset	os_linux.h	/^    unsigned char sgl_offset:3;$/;"	m	struct:TW_Command_9000::__anon20
sgl_offset	os_linux.h	/^  unsigned char   sgl_offset;$/;"	m	struct:TAG_TW_Command_Apache
sgloff	os_linux.h	/^    unsigned char sgloff:3;$/;"	m	struct:TAG_TW_Passthru::__anon19
sgls	nvmecmds.h	/^  unsigned int    sgls;$/;"	m	struct:smartmontools::nvme_id_ctrl
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
short_test_completion_time	atacmds.h	/^  unsigned char short_test_completion_time;$/;"	m	struct:ata_smart_values
show_presets	ataprint.h	/^  bool show_presets; \/\/ Show presets and exit$/;"	m	struct:ata_print_options
show_presets	knowndrives.cpp	/^void show_presets(const ata_identify_device * drive)$/;"	f
show_protocol_specific_page	scsiprint.cpp	/^show_protocol_specific_page(unsigned char * resp, int len)$/;"	f	file:
show_sas_phy_event_info	scsiprint.cpp	/^show_sas_phy_event_info(int peis, unsigned int val, unsigned thresh_val)$/;"	f	file:
show_sas_port_param	scsiprint.cpp	/^show_sas_port_param(unsigned char * ucp, int param_len)$/;"	f	file:
showallpresets	knowndrives.cpp	/^int showallpresets()$/;"	f
showmatchingpresets	knowndrives.cpp	/^int showmatchingpresets(const char *model, const char *firmware)$/;"	f
showonepreset	knowndrives.cpp	/^static int showonepreset(const drive_settings * dbentry)$/;"	f	file:
showpresets	smartd.cpp	/^  bool showpresets;                       \/\/ Show database entry for this device$/;"	m	struct:dev_config	file:
sift_ctx_init	regex/regexec.c	/^sift_ctx_init (sctx, sifted_sts, limited_sts, last_node, last_str_idx,$/;"	f	file:
sift_states_backward	regex/regexec.c	/^sift_states_backward (preg, mctx, sctx)$/;"	f	file:
sift_states_bkref	regex/regexec.c	/^sift_states_bkref (preg, mctx, sctx, str_idx, dest_nodes)$/;"	f	file:
sift_states_iter_mb	regex/regexec.c	/^sift_states_iter_mb (preg, mctx, sctx, node_idx, str_idx, max_str_idx)$/;"	f	file:
sifted_states	regex/regex_internal.h	/^  re_dfastate_t **sifted_states;$/;"	m	struct:__anon126
sig_event	os_win32/daemon_win32.cpp	/^static int sig_event(int sig)$/;"	f	file:
sig_events	os_win32/daemon_win32.cpp	/^static HANDLE sig_events[MAX_SIG_HANDLERS];$/;"	v	file:
sig_handler	os_win32/daemon_win32.cpp	/^static void sig_handler(int sig)$/;"	f	file:
sig_handlers	os_win32/daemon_win32.cpp	/^static sigfunc_t sig_handlers[MAX_SIG_HANDLERS];$/;"	v	file:
sig_numbers	os_win32/daemon_win32.cpp	/^static int sig_numbers[MAX_SIG_HANDLERS];$/;"	v	file:
sigbreak_handle	os_win32/daemon_win32.cpp	/^static HANDLE sighup_handle, sigint_handle, sigbreak_handle;$/;"	v	file:
sigfunc_t	os_win32/daemon_win32.cpp	/^typedef void (*sigfunc_t)(int);$/;"	t	file:
sighandler	smartd.cpp	/^static void sighandler(int sig)$/;"	f	file:
sighup_handle	os_win32/daemon_win32.cpp	/^static HANDLE sighup_handle, sigint_handle, sigbreak_handle;$/;"	v	file:
sigint_handle	os_win32/daemon_win32.cpp	/^static HANDLE sighup_handle, sigint_handle, sigbreak_handle;$/;"	v	file:
sigterm_handle	os_win32/daemon_win32.cpp	/^static HANDLE sigterm_handle, sigusr1_handle;$/;"	v	file:
sigusr1_handle	os_win32/daemon_win32.cpp	/^static HANDLE sigterm_handle, sigusr1_handle;$/;"	v	file:
sisc_cmnd_io	os_linux.cpp	/^static int sisc_cmnd_io(int dev_fd, struct scsi_cmnd_io * iop, int report)$/;"	f	namespace:os_linux
size	ataprint.cpp	/^  short size; \/\/ #bytes of value, -1 for signed char$/;"	m	struct:devstat_entry_info	file:
size	dev_interface.h	/^  unsigned size() const$/;"	f	class:smart_device_list
size	dev_interface.h	/^  unsigned size; \/\/\/< Size of buffer$/;"	m	struct:ata_cmd_in
size	dev_interface.h	/^  unsigned size; \/\/\/< Size of buffer$/;"	m	struct:nvme_cmd_in
size	knowndrives.cpp	/^  unsigned size() const$/;"	f	class:drive_database
size	megaraid.h	/^  u32 size;$/;"	m	struct:megasas_pd_list
size	os_freebsd.h	/^	TW_UINT8	size;$/;"	m	struct:tw_cl_command_download_firmware
size	os_freebsd.h	/^	TW_UINT8	size;$/;"	m	struct:tw_cl_command_generic
size	os_freebsd.h	/^	TW_UINT8	size;$/;"	m	struct:tw_cl_command_init_connect
size	os_freebsd.h	/^	TW_UINT8	size;$/;"	m	struct:tw_cl_command_param
size	os_freebsd.h	/^	TW_UINT8	size;$/;"	m	struct:tw_cl_command_reset_firmware
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon10
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon2
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon3
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon4
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon5
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon6
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon7
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon8
size	os_freebsd.h	/^    u_int8_t	size;$/;"	m	struct:__anon9
size	os_linux.h	/^  unsigned char size;$/;"	m	struct:TAG_TW_Passthru
size	os_linux.h	/^  unsigned char size;$/;"	m	struct:TW_Command
size	os_linux.h	/^  unsigned char size;$/;"	m	struct:TW_Command_9000
size	utility.h	/^  unsigned size() const$/;"	f	class:raw_buffer
size_header	os_freebsd.h	/^		TW_UINT8	size_header;$/;"	m	struct:tw_cl_command_header::__anon15
size_sense	os_freebsd.h	/^		TW_UINT8	size_sense;$/;"	m	struct:tw_cl_command_header::__anon15
skip_white	knowndrives.cpp	/^static parse_ptr skip_white(parse_ptr src, const char * path, int & line)$/;"	f	file:
skipdev	os_win32.cpp	/^static const char * skipdev(const char * s)$/;"	f	namespace:os_win32
sks	os_qnxnto.h	/^	uchar_t		sks;				\/\/ Sense Key Specific$/;"	m	struct:_scsi_sense
sks_data	os_qnxnto.h	/^	ushort_t	sks_data;			\/\/ Sense Key Specific Data (16bit big-endian)$/;"	m	struct:_scsi_sense
sl_hevtsrc	os_win32/syslog_win32.cpp	/^static HANDLE sl_hevtsrc;$/;"	v	file:
sl_ident	os_win32/syslog_win32.cpp	/^static char sl_ident[100];$/;"	v	file:
sl_logfile	os_win32/syslog_win32.cpp	/^static FILE * sl_logfile;$/;"	v	file:
sl_logpath	os_win32/syslog_win32.cpp	/^static char sl_logpath[sizeof(sl_ident) + sizeof("0.log")-1];$/;"	v	file:
sl_pidstr	os_win32/syslog_win32.cpp	/^static char sl_pidstr[16];$/;"	v	file:
slba	linux_nvme_ioctl.h	/^	__u64	slba;$/;"	m	struct:nvme_user_io
sleep	smartd.cpp	95;"	d	file:
slot	os_qnxnto.h	/^		uchar_t		slot;$/;"	m	struct:_cdb::__anon74
slot_number	megaraid.h	/^  u8 slot_number;$/;"	m	struct:megasas_pd_address
smartIf	os_darwin.cpp	/^  IOATASMARTInterface **smartIf;$/;"	m	struct:__anon95	file:
smart_auto_offl_disable	ataprint.h	/^  bool smart_auto_offl_disable, smart_auto_offl_enable;$/;"	m	struct:ata_print_options
smart_auto_offl_enable	ataprint.h	/^  bool smart_auto_offl_disable, smart_auto_offl_enable;$/;"	m	struct:ata_print_options
smart_auto_save_disable	ataprint.h	/^  bool smart_auto_save_disable, smart_auto_save_enable;$/;"	m	struct:ata_print_options
smart_auto_save_disable	scsiprint.h	/^  bool smart_auto_save_disable, smart_auto_save_enable;$/;"	m	struct:scsi_print_options
smart_auto_save_enable	ataprint.h	/^  bool smart_auto_save_disable, smart_auto_save_enable;$/;"	m	struct:ata_print_options
smart_auto_save_enable	scsiprint.h	/^  bool smart_auto_save_disable, smart_auto_save_enable;$/;"	m	struct:scsi_print_options
smart_background_log	scsiprint.h	/^  bool smart_background_log;$/;"	m	struct:scsi_print_options
smart_capability	atacmds.h	/^  unsigned short int smart_capability;$/;"	m	struct:ata_smart_values
smart_check_status	ataprint.h	/^  bool smart_check_status;$/;"	m	struct:ata_print_options
smart_check_status	nvmeprint.h	/^  bool smart_check_status;$/;"	m	struct:nvme_print_options
smart_check_status	scsiprint.h	/^  bool smart_check_status;$/;"	m	struct:scsi_print_options
smart_command_set	atacmds.h	/^} smart_command_set;$/;"	t	typeref:enum:__anon48
smart_default_selftest	scsiprint.h	/^  bool smart_default_selftest;$/;"	m	struct:scsi_print_options
smart_device	dev_interface.cpp	/^smart_device::smart_device(do_not_use_in_implementation_classes)$/;"	f	class:smart_device
smart_device	dev_interface.cpp	/^smart_device::smart_device(smart_interface * intf, const char * dev_name,$/;"	f	class:smart_device
smart_device	dev_interface.h	/^class smart_device$/;"	c
smart_device_auto_ptr	dev_interface.h	/^typedef any_device_auto_ptr<smart_device> smart_device_auto_ptr;$/;"	t
smart_device_list	dev_interface.h	/^  smart_device_list()$/;"	f	class:smart_device_list
smart_device_list	dev_interface.h	/^class smart_device_list$/;"	c
smart_devtype_list	dev_interface.h	/^typedef std::vector<std::string> smart_devtype_list;$/;"	t
smart_disable	ataprint.h	/^  bool smart_disable, smart_enable;$/;"	m	struct:ata_print_options
smart_disable	scsiprint.h	/^  bool smart_disable, smart_enable;$/;"	m	struct:scsi_print_options
smart_disable_auto_save	os_solaris.h	57;"	d
smart_enable	ataprint.h	/^  bool smart_disable, smart_enable;$/;"	m	struct:ata_print_options
smart_enable	scsiprint.h	/^  bool smart_disable, smart_enable;$/;"	m	struct:scsi_print_options
smart_enable_auto_save	os_solaris.h	56;"	d
smart_error_log	ataprint.h	/^  bool smart_error_log;$/;"	m	struct:ata_print_options
smart_error_log	scsiprint.h	/^  bool smart_error_log;$/;"	m	struct:scsi_print_options
smart_ext_error_log	ataprint.h	/^  unsigned smart_ext_error_log;$/;"	m	struct:ata_print_options
smart_ext_selftest_log	ataprint.h	/^  unsigned smart_ext_selftest_log;$/;"	m	struct:ata_print_options
smart_extend_cap_selftest	scsiprint.h	/^  bool smart_extend_selftest, smart_extend_cap_selftest;$/;"	m	struct:scsi_print_options
smart_extend_selftest	scsiprint.h	/^  bool smart_extend_selftest, smart_extend_cap_selftest;$/;"	m	struct:scsi_print_options
smart_general_values	ataprint.h	/^  bool smart_general_values;$/;"	m	struct:ata_print_options
smart_get_version	os_win32.cpp	/^static int smart_get_version(HANDLE hdevice, GETVERSIONINPARAMS_EX * ata_version_ex = 0)$/;"	f	namespace:os_win32
smart_interface	dev_interface.h	/^  smart_interface()$/;"	f	class:smart_interface
smart_interface	dev_interface.h	/^class smart_interface$/;"	c
smart_ioctl	os_win32.cpp	/^static int smart_ioctl(HANDLE hdevice, IDEREGS * regs, char * data, unsigned datasize, int port)$/;"	f	namespace:os_win32
smart_logdir	ataprint.h	/^  bool gp_logdir, smart_logdir;$/;"	m	struct:ata_print_options
smart_selective_args	ataprint.h	/^  ata_selective_selftest_args smart_selective_args; \/\/ Extra args for selective self-test$/;"	m	struct:ata_print_options
smart_selective_selftest_log	ataprint.h	/^  bool smart_selective_selftest_log;$/;"	m	struct:ata_print_options
smart_selftest_abort	scsiprint.h	/^  bool smart_selftest_abort;$/;"	m	struct:scsi_print_options
smart_selftest_force	ataprint.h	/^  bool smart_selftest_force; \/\/ Ignore already running test$/;"	m	struct:ata_print_options
smart_selftest_force	scsiprint.h	/^  bool smart_selftest_force; \/\/ Ignore already running test$/;"	m	struct:scsi_print_options
smart_selftest_log	ataprint.h	/^  bool smart_selftest_log;$/;"	m	struct:ata_print_options
smart_selftest_log	scsiprint.h	/^  bool smart_selftest_log;$/;"	m	struct:scsi_print_options
smart_selftest_type	ataprint.h	/^  int smart_selftest_type; \/\/ OFFLINE_FULL_SCAN, ..., see atacmds.h. -1 for no test$/;"	m	struct:ata_print_options
smart_short_cap_selftest	scsiprint.h	/^  bool smart_short_selftest, smart_short_cap_selftest;$/;"	m	struct:scsi_print_options
smart_short_selftest	scsiprint.h	/^  bool smart_short_selftest, smart_short_cap_selftest;$/;"	m	struct:scsi_print_options
smart_ss_media_log	scsiprint.h	/^  bool smart_ss_media_log;$/;"	m	struct:scsi_print_options
smart_status	atacmds.h	/^  unsigned short smart_status;      \/\/ 214-215: LBA(32:8) of SMART RETURN STATUS (0, 0x2cf4, 0xc24f) (ACS-4)$/;"	m	struct:ata_sct_status_response
smart_vendor_attrib	ataprint.h	/^  bool smart_vendor_attrib;$/;"	m	struct:ata_print_options
smart_vendor_attrib	nvmeprint.h	/^  bool smart_vendor_attrib;$/;"	m	struct:nvme_print_options
smart_vendor_attrib	scsiprint.h	/^  bool smart_vendor_attrib;$/;"	m	struct:scsi_print_options
smartcheck	smartd.cpp	/^  bool smartcheck;                        \/\/ Check SMART status$/;"	m	struct:dev_config	file:
smartcommandhandler	atacmds.cpp	/^int smartcommandhandler(ata_device * device, smart_command_set command, int select, char *data){$/;"	f
smartctl_DEPENDENCIES	Makefile	/^smartctl_DEPENDENCIES = $(os_deps) $(am__append_8)$/;"	m
smartctl_LDADD	Makefile	/^smartctl_LDADD = $(os_deps) $(os_libs) $(am__append_7) \\$/;"	m
smartctl_OBJECTS	Makefile	/^smartctl_OBJECTS = $(am_smartctl_OBJECTS)$/;"	m
smartctl_SOURCES	Makefile	/^smartctl_SOURCES = smartctl.cpp smartctl.h atacmdnames.cpp \\$/;"	m
smartctl_cpp_cvsid	smartctl.cpp	/^const char * smartctl_cpp_cvsid = "$Id: smartctl.cpp 4311 2016-04-27 21:03:01Z chrfranke $"$/;"	v
smartctl_examples	os_darwin.cpp	/^static const char  smartctl_examples[] =$/;"	v	file:
smartctl_examples	os_freebsd.cpp	/^static const char  smartctl_examples[] =$/;"	m	namespace:os_freebsd	file:
smartctl_examples	os_linux.cpp	/^static const char  smartctl_examples[] =$/;"	m	namespace:os_linux	file:
smartd_DEPENDENCIES	Makefile	/^smartd_DEPENDENCIES = $(os_deps) $(am__append_11)$/;"	m
smartd_LDADD	Makefile	/^smartd_LDADD = $(os_deps) $(os_libs) $(CAPNG_LDADD) $(am__append_10) \\$/;"	m
smartd_OBJECTS	Makefile	/^smartd_OBJECTS = $(am_smartd_OBJECTS)$/;"	m
smartd_SOURCES	Makefile	/^smartd_SOURCES = smartd.cpp atacmdnames.cpp atacmdnames.h atacmds.cpp \\$/;"	m
smartd_cpp_cvsid	smartd.cpp	/^const char * smartd_cpp_cvsid = "$Id: smartd.cpp 4308 2016-04-24 13:36:10Z chrfranke $"$/;"	v
smartd_prestart	smartd.freebsd.initd.in	/^smartd_prestart()$/;"	f
smartd_reload	smartd.freebsd.initd.in	/^smartd_reload()$/;"	f
smartd_report	smartd.freebsd.initd.in	/^smartd_report()$/;"	f
smartd_suffix	Makefile	/^smartd_suffix = $/;"	m
smartdplugindir	Makefile	/^smartdplugindir = ${smartdscriptdir}\/smartd_warning.d$/;"	m
smartdscript_SCRIPTS	Makefile	/^smartdscript_SCRIPTS = smartd_warning.sh$/;"	m
smartdscriptdir	Makefile	/^smartdscriptdir = ${sysconfdir}$/;"	m
smartmontools	nvmecmds.h	/^namespace smartmontools {$/;"	n
smartmontools_release_date	Makefile	/^smartmontools_release_date = 2016-05-07$/;"	m
smartmontools_release_time	Makefile	/^smartmontools_release_time = 11:17:46 UTC$/;"	m
smartthres	smartd.cpp	/^  ata_smart_thresholds_pvt smartthres;    \/\/ SMART thresholds$/;"	m	struct:temp_dev_state	file:
smartval	smartd.cpp	/^  ata_smart_values smartval;              \/\/ SMART data$/;"	m	struct:temp_dev_state	file:
smi	dev_interface.h	/^  const smart_interface * smi() const$/;"	f	class:smart_device
smi	dev_interface.h	/^  smart_interface * smi()$/;"	f	class:smart_device
smi	dev_interface.h	/^inline smart_interface * smi()$/;"	f
sn	nvmecmds.h	/^  char            sn[20];$/;"	m	struct:smartmontools::nvme_id_ctrl
snprintf	os_win32/syslog_win32.cpp	41;"	d	file:
snprintf	utility.h	68;"	d
space	os_qnxnto.h	/^	} space;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon88
span	atacmds.h	/^  span_args span[5];  \/\/ Range and mode for 5 spans$/;"	m	struct:ata_selective_selftest_args
span	atacmds.h	/^  struct test_span   span[5];$/;"	m	struct:ata_selective_self_test_log	typeref:struct:ata_selective_self_test_log::test_span
span_args	atacmds.h	/^    span_args()$/;"	f	struct:ata_selective_selftest_args::span_args
span_args	atacmds.h	/^  struct span_args$/;"	s	struct:ata_selective_selftest_args
spare_buff	scsicmds.cpp	/^static char spare_buff[128];$/;"	v	file:
spare_thresh	nvmecmds.h	/^  unsigned char  spare_thresh;$/;"	m	struct:smartmontools::nvme_smart_log
split_selective_arg	utility.cpp	/^int split_selective_arg(char *s, uint64_t *start,$/;"	f
spt	os_win32.cpp	/^  SCSI_PASS_THROUGH_DIRECT spt;$/;"	m	struct:os_win32::__anon94	file:
sqes	nvmecmds.h	/^  unsigned char   sqes;$/;"	m	struct:smartmontools::nvme_id_ctrl
sqhd	freebsd_nvme_ioctl.h	/^	uint16_t		sqhd;	\/* submission queue head pointer *\/$/;"	m	struct:nvme_completion
sqid	freebsd_nvme_ioctl.h	/^	uint16_t		sqid;	\/* submission queue identifier *\/$/;"	m	struct:nvme_completion
sqid	nvmecmds.h	/^  unsigned short  sqid;$/;"	m	struct:smartmontools::nvme_error_log_page
srb_status	aacraid.h	/^  uint32_t srb_status;$/;"	m	struct:__anon143
srbioctl	dev_areca.h	/^  sARCMSR_IO_HDR  srbioctl;$/;"	m	struct:_SRB_BUFFER
src	regex/regex_internal.h	/^     const bitset src;$/;"	v
src_unit	os_freebsd.h	/^    u_int8_t	src_unit:4;$/;"	m	struct:__anon8
srcdir	Makefile	/^srcdir = .$/;"	m
ssvid	nvmecmds.h	/^  unsigned short  ssvid;$/;"	m	struct:smartmontools::nvme_id_ctrl
stack	regex/regex_internal.h	/^  struct re_fail_stack_ent_t *stack;$/;"	m	struct:re_fail_stack_t	typeref:struct:re_fail_stack_t::re_fail_stack_ent_t
standby_disable_state	smartd.cpp	/^static int standby_disable_state = 0;$/;"	v	file:
start	atacmds.h	/^    uint64_t start;   \/\/ First block$/;"	m	struct:ata_selective_selftest_args::span_args
start	atacmds.h	/^  uint64_t start;$/;"	m	struct:test_span
start	regex/regex.h	/^  regoff_t *start;$/;"	m	struct:re_registers
start	regex/regex_internal.h	/^  int start;$/;"	m	struct:__anon121
start	regex/regexec.c	/^    int length, start, range;$/;"	v
start	regex/regexec.c	/^    int length, start;$/;"	v
start	regex/regexec.c	/^    int length1, length2, start, range, stop;$/;"	v
start	regex/regexec.c	/^    int length1, length2, start, stop;$/;"	v
start	smartd.initd	/^    start()$/;"	f
start	smartd.initd.in	/^    start()$/;"	f
start_address	os_qnxnto.h	/^		uchar_t		start_address[4];$/;"	m	struct:_cdb::__anon71
start_event_logger	os_win32/syslog_win32.cpp	/^static int start_event_logger()$/;"	f	file:
start_frame	os_qnxnto.h	/^		uchar_t		start_frame;$/;"	m	struct:_cdb::__anon69
start_frame	os_qnxnto.h	/^		uchar_t		start_frame;$/;"	m	struct:_cdb::__anon81
start_index	os_qnxnto.h	/^		uchar_t		start_index;$/;"	m	struct:_cdb::__anon70
start_minute	os_qnxnto.h	/^		uchar_t		start_minute;$/;"	m	struct:_cdb::__anon69
start_minute	os_qnxnto.h	/^		uchar_t		start_minute;$/;"	m	struct:_cdb::__anon81
start_second	os_qnxnto.h	/^		uchar_t		start_second;$/;"	m	struct:_cdb::__anon69
start_second	os_qnxnto.h	/^		uchar_t		start_second;$/;"	m	struct:_cdb::__anon81
start_track	os_qnxnto.h	/^		uchar_t		start_track;$/;"	m	struct:_cdb::__anon70
start_track	os_qnxnto.h	/^		uchar_t		start_track;$/;"	m	struct:_cdb::__anon72
state	atacmds.h	/^  unsigned char state;$/;"	m	struct:ata_smart_errorlog_error_struct
state	atacmds.h	/^  unsigned char state;$/;"	m	struct:ata_smart_exterrlog_error
state	atacmds.h	/^  unsigned short state;             \/\/ Interval$/;"	m	struct:ata_sct_feature_control_command
state_array_t	regex/regex_internal.h	/^} state_array_t;$/;"	t	typeref:struct:__anon122
state_file	smartd.cpp	/^  std::string state_file;                 \/\/ Path of the persistent state file, empty if none$/;"	m	struct:dev_config	file:
state_hash_mask	regex/regex_internal.h	/^  unsigned int state_hash_mask;$/;"	m	struct:re_dfa_t
state_log	regex/regex_internal.h	/^  re_dfastate_t **state_log;$/;"	m	struct:__anon125
state_log_top	regex/regex_internal.h	/^  int state_log_top;$/;"	m	struct:__anon125
state_path_prefix	smartd.cpp	/^static std::string state_path_prefix$/;"	v	file:
state_table	regex/regex_internal.h	/^  struct re_state_table_entry *state_table;$/;"	m	struct:re_dfa_t	typeref:struct:re_dfa_t::re_state_table_entry
states_alloc	regex/regex_internal.h	/^  int states_alloc;$/;"	m	struct:re_dfa_t
status	aacraid.h	/^  uint32_t status;$/;"	m	struct:__anon143
status	atacmds.h	/^  unsigned char status;$/;"	m	struct:ata_smart_errorlog_error_struct
status	dev_interface.h	/^   unsigned short status; \/\/\/< Status Field (DW3 31:17)$/;"	m	struct:nvme_cmd_out
status	dev_interface.h	/^  ata_register status;$/;"	m	struct:ata_out_regs
status	dev_interface.h	/^  bool error, sector_count, lba_low, lba_mid, lba_high, device, status;$/;"	m	struct:ata_out_regs_flags
status	freebsd_nvme_ioctl.h	/^	struct nvme_status	status;$/;"	m	struct:nvme_completion	typeref:struct:nvme_completion::nvme_status
status	megaraid.h	/^  uint8_t   status;$/;"	m	struct:__anon42
status	os_freebsd.h	/^	TW_UINT32	status;$/;"	m	struct:tw_cl_driver_packet
status	os_freebsd.h	/^	TW_UINT8	status;$/;"	m	struct:tw_cl_command_9k
status	os_freebsd.h	/^	TW_UINT8	status;$/;"	m	struct:tw_cl_command_download_firmware
status	os_freebsd.h	/^	TW_UINT8	status;$/;"	m	struct:tw_cl_command_generic
status	os_freebsd.h	/^	TW_UINT8	status;$/;"	m	struct:tw_cl_command_init_connect
status	os_freebsd.h	/^	TW_UINT8	status;$/;"	m	struct:tw_cl_command_param
status	os_freebsd.h	/^	TW_UINT8	status;$/;"	m	struct:tw_cl_command_reset_firmware
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon10
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon2
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon3
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon4
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon5
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon6
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon7
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon8
status	os_freebsd.h	/^    u_int8_t	status;$/;"	m	struct:__anon9
status	os_linux.h	/^    unsigned char status;$/;"	m	struct:TAG_TW_Command_Apache_Header::__anon29
status	os_linux.h	/^  unsigned char status;  \/\/ On return, contains 3ware STATUS register$/;"	m	struct:TAG_TW_Passthru
status	os_linux.h	/^  unsigned char status;$/;"	m	struct:TW_Command
status	os_linux.h	/^  unsigned char status;$/;"	m	struct:TW_Command_9000
status	os_linux.h	/^  unsigned int status;$/;"	m	struct:TAG_TW_Ioctl_Driver_Command_9000
status	os_qnxnto.h	/^	uchar_t			status;$/;"	m	struct:_ata_status_descriptor
status_block	os_freebsd.h	/^	} status_block;$/;"	m	struct:tw_cl_command_header	typeref:struct:tw_cl_command_header::__anon14
status_block	os_linux.h	/^  } status_block;$/;"	m	struct:TAG_TW_Command_Apache_Header	typeref:struct:TAG_TW_Command_Apache_Header::__anon29
status_command	os_linux.h	/^    unsigned status_command	: 1;$/;"	m	struct:ide_reg_valid_s::__anon40
status_field	nvmecmds.h	/^  unsigned short  status_field;$/;"	m	struct:smartmontools::nvme_error_log_page
status_flags	atacmds.h	/^  unsigned int status_flags;        \/\/ 6-9: Status flags (Bit 0: Segment initialized, Bits 1-31: reserved)$/;"	m	struct:ata_sct_status_response
status_register	atacmds.h	/^  unsigned char status_register;$/;"	m	struct:ata_smart_exterrlog_error
status_valid	dev_interface.h	/^   bool status_valid; \/\/\/< true if status is valid$/;"	m	struct:nvme_cmd_out
stdin_iterator	knowndrives.cpp	/^  explicit stdin_iterator(FILE * f)$/;"	f	class:stdin_iterator
stdin_iterator	knowndrives.cpp	/^class stdin_iterator$/;"	c	file:
stdio_file	utility.h	/^  explicit stdio_file(FILE * f = 0, bool owner = false)$/;"	f	class:stdio_file
stdio_file	utility.h	/^  stdio_file(const char * name, const char * mode)$/;"	f	class:stdio_file
stdio_file	utility.h	/^class stdio_file$/;"	c
stop	regex/regex_internal.h	/^  int stop;$/;"	m	struct:re_string_t
stop	regex/regexec.c	/^    int length1, length2, start, range, stop;$/;"	v
stop	regex/regexec.c	/^    int length1, length2, start, stop;$/;"	v
stop	smartd.initd	/^    stop()$/;"	f
stop	smartd.initd.in	/^    stop()$/;"	f
storage_predict_failure_ioctl	os_win32.cpp	/^static int storage_predict_failure_ioctl(HANDLE hdevice, char * data = 0)$/;"	f	namespace:os_win32
storage_query_property_ioctl	os_win32.cpp	/^static int storage_query_property_ioctl(HANDLE hdevice, STORAGE_DEVICE_DESCRIPTOR_DATA * data)$/;"	f	namespace:os_win32
str_idx	regex/regex_internal.h	/^  int str_idx; \/* The position NODE match at.  *\/$/;"	m	struct:__anon123
str_idx	regex/regex_internal.h	/^  int str_idx;$/;"	m	struct:__anon124
str_idx	regex/regex_internal.h	/^  int str_idx;$/;"	m	struct:re_backref_cache_entry
str_starts_with	utility.h	/^inline bool str_starts_with(const char * str, const char * prefix)$/;"	f
str_starts_with	utility.h	/^inline bool str_starts_with(const std::string & str, const char * prefix)$/;"	f
str_tree	regex/regex_internal.h	/^  bin_tree_t *str_tree;$/;"	m	struct:re_dfa_t
stricmp	os_win32.cpp	111;"	d	file:
strnicmp	os_win32.cpp	112;"	d	file:
strprintf	utility.cpp	/^std::string strprintf(const char * fmt, ...)$/;"	f
strs_for_asc_5d	scsicmds.cpp	/^static const char * strs_for_asc_5d[] = {$/;"	v	file:
strs_for_asc_b	scsicmds.cpp	/^static const char * strs_for_asc_b[] = {$/;"	v	file:
strsignal	smartd.cpp	94;"	d	file:
strtok_dequote	smartd.cpp	/^static const char * strtok_dequote(const char * delimiters)$/;"	f	file:
strtoull	utility.cpp	/^uint64_t strtoull(const char * p, char * * endp, int base)$/;"	f
sub_epsilon_src_nodes	regex/regexec.c	/^sub_epsilon_src_nodes (dfa, node, dest_nodes, candidates)$/;"	f	file:
sub_tops	regex/regex_internal.h	/^  re_sub_match_top_t **sub_tops;$/;"	m	struct:__anon125
subch_selection	os_qnxnto.h	/^		uchar_t		subch_selection;$/;"	m	struct:_cdb::__anon80
subch_selection	os_qnxnto.h	/^		uchar_t		subch_selection;$/;"	m	struct:_cdb::__anon81
subdir	Makefile	/^subdir = .$/;"	m
subexp_from	regex/regex_internal.h	/^  int subexp_from;$/;"	m	struct:re_backref_cache_entry
subexp_to	regex/regex_internal.h	/^  int subexp_to;$/;"	m	struct:re_backref_cache_entry
subexps	regex/regex_internal.h	/^  re_subexp_t *subexps;$/;"	m	struct:re_dfa_t
subexps_alloc	regex/regex_internal.h	/^  int subexps_alloc;$/;"	m	struct:re_dfa_t
subopcode	megaraid.h	/^      uint8_t  subopcode;$/;"	m	struct:uioctl_t::__anon44::__anon45
subopcode	megaraid.h	/^  uint8_t   subopcode;$/;"	m	struct:__anon42
subpage	os_qnxnto.h	/^		uchar_t		subpage;$/;"	m	struct:_cdb::__anon62
subpage	os_qnxnto.h	/^		uchar_t		subpage;$/;"	m	struct:_cdb::_mode_sense10
substatus_block	os_linux.h	/^    } substatus_block;$/;"	m	struct:TAG_TW_Command_Apache_Header::__anon29	typeref:struct:TAG_TW_Command_Apache_Header::__anon29::__anon30
supported_vpd_pages	scsicmds.cpp	/^supported_vpd_pages::supported_vpd_pages(scsi_device * device) : num_valid(0)$/;"	f	class:supported_vpd_pages
supported_vpd_pages	scsicmds.h	/^class supported_vpd_pages$/;"	c
supported_vpd_pages_p	scsicmds.cpp	/^supported_vpd_pages * supported_vpd_pages_p = NULL;$/;"	v
supports_48bit	dev_interface.h	/^    supports_48bit = 0x20, \/\/ all 48-bit commands$/;"	e	enum:ata_device::__anon133
supports_48bit_hi_null	dev_interface.h	/^    supports_48bit_hi_null = 0x10, \/\/ 48-bit commands with null high bytes only$/;"	e	enum:ata_device::__anon133
supports_data_out	dev_interface.h	/^    supports_data_out = 0x01, \/\/ PIO DATA OUT$/;"	e	enum:ata_device::__anon133
supports_multi_sector	dev_interface.h	/^    supports_multi_sector = 0x08, \/\/ more than one sector (1 DRQ\/sector variant)$/;"	e	enum:ata_device::__anon133
supports_output_regs	dev_interface.h	/^    supports_output_regs = 0x04, \/\/ read output registers for all commands$/;"	e	enum:ata_device::__anon133
supports_smart_status	dev_interface.h	/^    supports_smart_status = 0x02, \/\/ read output registers for SMART STATUS only$/;"	e	enum:ata_device::__anon133
svc_handle	os_win32/daemon_win32.cpp	/^static SERVICE_STATUS_HANDLE svc_handle;$/;"	v	file:
svc_main_argc	os_win32/daemon_win32.cpp	/^static int svc_main_argc;$/;"	v	file:
svc_main_argv	os_win32/daemon_win32.cpp	/^static char ** svc_main_argv;$/;"	v	file:
svc_main_func	os_win32/daemon_win32.cpp	/^static int (*svc_main_func)(int, char **);$/;"	v	file:
svc_mode	os_win32/daemon_win32.cpp	/^static int svc_mode;   \/\/ Running as service?$/;"	v	file:
svc_paused	os_win32/daemon_win32.cpp	/^static int svc_paused; \/\/ Service paused?$/;"	v	file:
svc_status	os_win32/daemon_win32.cpp	/^static SERVICE_STATUS svc_status;$/;"	v	file:
svcadm_main	os_win32/daemon_win32.cpp	/^static int svcadm_main(const char * ident, const daemon_winsvc_options * svc_opts,$/;"	f	file:
svcname	os_win32/daemon_win32.h	/^	const char * svcname;  \/\/ Service name$/;"	m	struct:daemon_winsvc_options_s
svn_deps	Makefile	/^svn_deps = $/;"	m
svnid	os_win32/runcmd.c	/^char svnid[] = "$Id: runcmd.c 4120 2015-08-27 16:12:21Z samm2 $";$/;"	v
svnid	os_win32/wtssendmsg.c	/^char svnid[] = "$Id: wtssendmsg.c 4120 2015-08-27 16:12:21Z samm2 $";$/;"	v
swap2	atacmds.cpp	/^void swap2(char *location){$/;"	f
swap4	atacmds.cpp	/^void swap4(char *location){$/;"	f
swap8	atacmds.cpp	/^void swap8(char *location){$/;"	f
swap_sector	os_solaris.cpp	/^static void swap_sector(void *p)$/;"	f	file:
swapbytes	atacmds.cpp	/^static void swapbytes(char * out, const char * in, size_t n)$/;"	f	file:
swapx	atacmds.h	/^inline void swapx(uint64_t * p)$/;"	f
swapx	atacmds.h	/^inline void swapx(unsigned int * p)$/;"	f
swapx	atacmds.h	/^inline void swapx(unsigned short * p)$/;"	f
synchronize_cache	os_qnxnto.h	/^	} synchronize_cache;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon66
syntax	regex/regex.h	/^  reg_syntax_t syntax;$/;"	m	struct:re_pattern_buffer
sysconf_DATA	Makefile	/^sysconf_DATA = smartd.conf$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
syserror	utility.cpp	/^void syserror(const char *message){$/;"	f
syslog	os_win32/syslog_win32.cpp	/^void syslog(int priority, const char *message, ...)$/;"	f
syslog_win32_cpp_cvsid	os_win32/syslog_win32.cpp	/^const char *syslog_win32_cpp_cvsid = "$Id: syslog_win32.cpp 4149 2015-10-17 15:38:01Z chrfranke $"$/;"	v
systemdenvfile	Makefile	/^systemdenvfile = ${sysconfdir}\/default\/smartmontools$/;"	m
systemdsystemunit_DATA	Makefile	/^systemdsystemunit_DATA = smartd.service$/;"	m
systemdsystemunitdir	Makefile	/^systemdsystemunitdir = ${prefix}\/lib\/systemd\/system$/;"	m
szDescription	csmisas.h	/^   __u8  szDescription[81];$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
szName	csmisas.h	/^   __u8  szName[81];$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
szSerialNumber	csmisas.h	/^   __u8  szSerialNumber[81];$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
table_id	atacmds.h	/^  unsigned short table_id;          \/\/ 2 = Temperature History$/;"	m	struct:ata_sct_data_table_command
table_id	os_linux.h	/^  unsigned short table_id;$/;"	m	struct:TAG_TW_Ioctl
tag_WBEM_CONNECT_OPTIONS	os_win32/wbemcli_small.h	/^  typedef enum tag_WBEM_CONNECT_OPTIONS {$/;"	g
tag_WBEM_GENERIC_FLAG_TYPE	os_win32/wbemcli_small.h	/^  typedef enum tag_WBEM_GENERIC_FLAG_TYPE {$/;"	g
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target	megaraid.h	/^  uint8_t  target;$/;"	m	struct:__anon41
target_alias	Makefile	/^target_alias = $/;"	m
target_id	megaraid.h	/^  u8 target_id;      \/*04h *\/$/;"	m	struct:megasas_pthru_frame
target_id	megaraid.h	/^  u8 target_id;     \/*04h *\/$/;"	m	struct:megasas_header
target_status	os_freebsd.h	/^    u_int16_t	target_status;		\/* set low byte to target request's ID *\/$/;"	m	struct:__anon6
task_ioreg_t	os_linux.h	/^typedef unsigned char task_ioreg_t;$/;"	t
task_struct_t	os_linux.h	/^} task_struct_t;$/;"	t	typeref:struct:hd_drive_task_hdr
temp_dev_state	smartd.cpp	/^struct temp_dev_state$/;"	s	file:
temp_dev_state	smartd.cpp	/^temp_dev_state::temp_dev_state()$/;"	f	class:temp_dev_state
temp_sensor	nvmecmds.h	/^  unsigned short temp_sensor[8];$/;"	m	struct:smartmontools::nvme_smart_log
tempcrit	smartd.cpp	/^  unsigned char tempinfo, tempcrit;       \/\/ Track Temperatures >= these limits as LOG_INFO, LOG_CRIT+mail$/;"	m	struct:dev_config	file:
tempdiff	smartd.cpp	/^  unsigned char tempdiff;                 \/\/ Track Temperature changes >= this limit$/;"	m	struct:dev_config	file:
temperature	nvmecmds.h	/^  unsigned char  temperature[2];$/;"	m	struct:smartmontools::nvme_smart_log
temperature	smartd.cpp	/^  unsigned char temperature;              \/\/ last recorded Temperature (in Celsius)$/;"	m	struct:temp_dev_state	file:
tempinfo	smartd.cpp	/^  unsigned char tempinfo, tempcrit;       \/\/ Track Temperatures >= these limits as LOG_INFO, LOG_CRIT+mail$/;"	m	struct:dev_config	file:
tempmax	smartd.cpp	/^  unsigned char tempmin, tempmax;         \/\/ Min\/Max Temperatures$/;"	m	struct:persistent_dev_state	file:
tempmin	smartd.cpp	/^  unsigned char tempmin, tempmax;         \/\/ Min\/Max Temperatures$/;"	m	struct:persistent_dev_state	file:
tempmin_delay	smartd.cpp	/^  time_t tempmin_delay;                   \/\/ time where Min Temperature tracking will start$/;"	m	struct:temp_dev_state	file:
test_exit	os_win32/daemon_win32.cpp	/^static void test_exit(void)$/;"	f	file:
test_main	os_win32/daemon_win32.cpp	/^int test_main(int argc, char **argv)$/;"	f
test_regex	smartd.cpp	/^  regular_expression test_regex;          \/\/ Regex for scheduled testing$/;"	m	struct:dev_config	file:
test_span	atacmds.h	/^struct test_span {$/;"	s
test_type_chars	smartd.cpp	/^static const char test_type_chars[] = "LncrSCO";$/;"	v	file:
thres_entries	atacmds.h	/^  struct ata_smart_threshold_entry thres_entries[NUMBER_ATA_SMART_ATTRIBUTES];$/;"	m	struct:ata_smart_thresholds_pvt	typeref:struct:ata_smart_thresholds_pvt::ata_smart_threshold_entry
threshold	atacmds.h	/^  unsigned char threshold;$/;"	m	struct:ata_smart_threshold_entry
threshold	os_qnxnto.h	/^  int  threshold;$/;"	m	struct:_drive_attribute
time_limit	atacmds.h	/^  unsigned short time_limit;        \/\/ If set: Recovery time limit in 100ms units$/;"	m	struct:ata_sct_error_recovery_control_command
time_remaining_msec	os_freebsd.h	/^	TW_UINT32	time_remaining_msec;$/;"	m	struct:tw_cl_lock_packet
time_stamp_sec	os_freebsd.h	/^	TW_UINT32	time_stamp_sec;$/;"	m	struct:tw_cl_event_packet
timeout	aacraid.h	/^  uint32_t timeout;$/;"	m	struct:__anon141
timeout	aacraid.h	/^  uint32_t timeout;$/;"	m	struct:__anon142
timeout	megaraid.h	/^  u16 timeout;       \/*12h *\/$/;"	m	struct:megasas_pthru_frame
timeout	megaraid.h	/^  u16 timeout;      \/*12h *\/$/;"	m	struct:megasas_header
timeout	megaraid.h	/^  u16 timeout;  \/*12h *\/$/;"	m	struct:megasas_dcmd_frame
timeout	megaraid.h	/^  uint8_t  timeout : 3;$/;"	m	struct:__anon41
timeout	scsicmds.h	/^    unsigned timeout;   \/* [in]: seconds, 0-> default timeout (60 seconds?) *\/$/;"	m	struct:scsi_cmnd_io
timeout_ms	linux_nvme_ioctl.h	/^	__u32	timeout_ms;$/;"	m	struct:nvme_passthru_cmd
timeout_msec	os_freebsd.h	/^	TW_UINT32	timeout_msec;$/;"	m	struct:tw_cl_lock_packet
timestamp	atacmds.h	/^  unsigned int timestamp;$/;"	m	struct:ata_smart_errorlog_command_struct
timestamp	atacmds.h	/^  unsigned int timestamp;$/;"	m	struct:ata_smart_exterrlog_command
timestamp	atacmds.h	/^  unsigned short int timestamp;$/;"	m	struct:ata_smart_selftestlog_struct
timestamp	atacmds.h	/^  unsigned short timestamp;$/;"	m	struct:ata_smart_errorlog_error_struct
timestamp	atacmds.h	/^  unsigned short timestamp;$/;"	m	struct:ata_smart_exterrlog_error
timestamp	atacmds.h	/^  unsigned short timestamp;$/;"	m	struct:ata_smart_extselftestlog_desc
tip_context	regex/regex_internal.h	/^  unsigned int tip_context;$/;"	m	struct:re_string_t
tnvmcap	nvmecmds.h	/^  unsigned char   tnvmcap[16];$/;"	m	struct:smartmontools::nvme_id_ctrl
to_ata	dev_interface.h	/^  ata_device * to_ata()$/;"	f	class:smart_device
to_ata	dev_interface.h	/^  const ata_device * to_ata() const$/;"	f	class:smart_device
to_nvme	dev_interface.h	/^  const nvme_device * to_nvme() const$/;"	f	class:smart_device
to_nvme	dev_interface.h	/^  nvme_device * to_nvme()$/;"	f	class:smart_device
to_scsi	dev_interface.h	/^  const scsi_device * to_scsi() const$/;"	f	class:smart_device
to_scsi	dev_interface.h	/^  scsi_device * to_scsi()$/;"	f	class:smart_device
to_str	os_win32/wmiquery.cpp	/^bool com_bstr::to_str(const BSTR & bstr, std::string & str)$/;"	f	class:com_bstr
token_info	knowndrives.cpp	/^  token_info() : type(0), line(0) { }$/;"	f	struct:token_info
token_info	knowndrives.cpp	/^struct token_info$/;"	s	file:
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
total_time_to_complete_off_line	atacmds.h	/^  unsigned short int total_time_to_complete_off_line; \/\/ IBM different$/;"	m	struct:ata_smart_values
track	os_qnxnto.h	/^		uchar_t		track;$/;"	m	struct:_cdb::__anon79
track_addr	os_qnxnto.h	/^        uchar_t         track_addr;$/;"	m	struct:_cdb::_format_unit_old
track_num	os_qnxnto.h	/^        uchar_t         track_num;$/;"	m	struct:_cdb::_format_unit
trans	regex/regex_internal.h	/^  RE_TRANSLATE_TYPE trans;$/;"	m	struct:re_string_t
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len;$/;"	m	struct:_cdb::__anon53
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len;$/;"	m	struct:_cdb::__anon56
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len[2];$/;"	m	struct:_cdb::__anon54
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len[2];$/;"	m	struct:_cdb::__anon57
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len[3];$/;"	m	struct:_cdb::__anon80
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len[3];$/;"	m	struct:_cdb::__anon86
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len[4];$/;"	m	struct:_cdb::__anon55
transfer_len	os_qnxnto.h	/^		uchar_t		transfer_len[4];$/;"	m	struct:_cdb::__anon58
transfer_length	os_qnxnto.h	/^		uchar_t		transfer_length[2];$/;"	m	struct:_cdb::__anon91
transfer_length	os_qnxnto.h	/^		uchar_t		transfer_length[3];$/;"	m	struct:_cdb::__anon89
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transit_state	regex/regexec.c	/^transit_state (err, preg, mctx, state, fl_search)$/;"	f	file:
transit_state_bkref	regex/regexec.c	/^transit_state_bkref (preg, nodes, mctx)$/;"	f	file:
transit_state_mb	regex/regexec.c	/^transit_state_mb (preg, pstate, mctx)$/;"	f	file:
transit_state_sb	regex/regexec.c	/^transit_state_sb (err, preg, state, fl_search, mctx)$/;"	f	file:
translate	regex/regex.h	/^  RE_TRANSLATE_TYPE translate;$/;"	m	struct:re_pattern_buffer
transport_proto_arr	scsiprint.cpp	/^static const char * transport_proto_arr[] = {$/;"	v	file:
trim	atacmds.cpp	/^static void trim(char * out, const char * in)$/;"	f	file:
trtable	regex/regex_internal.h	/^  struct re_dfastate_t **trtable;$/;"	m	struct:re_dfastate_t	typeref:struct:re_dfastate_t::re_dfastate_t
trtable_search	regex/regex_internal.h	/^  struct re_dfastate_t **trtable_search;$/;"	m	struct:re_dfastate_t	typeref:struct:re_dfastate_t::re_dfastate_t
tu_command	os_freebsd.h	/^    TWE_Command	tu_command;	\/* command ready for the controller *\/$/;"	m	struct:twe_usercommand
tu_data	os_freebsd.h	/^    void	*tu_data;	\/* pointer to data in userspace *\/$/;"	m	struct:twe_usercommand
tu_size	os_freebsd.h	/^    size_t	tu_size;	\/* userspace data length *\/$/;"	m	struct:twe_usercommand
tunnel_device_type	dev_tunnelled.h	/^  typedef TunnelDev tunnel_device_type;$/;"	t	class:tunnelled_device
tunnelled_device	dev_tunnelled.h	/^  explicit tunnelled_device(tunnel_device_type * tunnel_dev)$/;"	f	class:tunnelled_device
tunnelled_device	dev_tunnelled.h	/^class tunnelled_device$/;"	c
tunnelled_device_base	dev_interface.cpp	/^tunnelled_device_base::tunnelled_device_base(smart_device * tunnel_dev)$/;"	f	class:tunnelled_device_base
tunnelled_device_base	dev_tunnelled.h	/^class tunnelled_device_base$/;"	c
tw_cl_command_7k	os_freebsd.h	/^union tw_cl_command_7k {$/;"	u
tw_cl_command_9k	os_freebsd.h	/^struct tw_cl_command_9k {$/;"	s
tw_cl_command_download_firmware	os_freebsd.h	/^struct tw_cl_command_download_firmware {$/;"	s
tw_cl_command_generic	os_freebsd.h	/^struct tw_cl_command_generic {$/;"	s
tw_cl_command_header	os_freebsd.h	/^struct tw_cl_command_header {$/;"	s
tw_cl_command_init_connect	os_freebsd.h	/^struct tw_cl_command_init_connect {$/;"	s
tw_cl_command_packet	os_freebsd.h	/^struct tw_cl_command_packet {$/;"	s
tw_cl_command_param	os_freebsd.h	/^struct tw_cl_command_param {$/;"	s
tw_cl_command_reset_firmware	os_freebsd.h	/^struct tw_cl_command_reset_firmware {$/;"	s
tw_cl_compatibility_packet	os_freebsd.h	/^struct tw_cl_compatibility_packet {$/;"	s
tw_cl_driver_packet	os_freebsd.h	/^struct tw_cl_driver_packet {$/;"	s
tw_cl_event_packet	os_freebsd.h	/^struct tw_cl_event_packet {$/;"	s
tw_cl_lock_packet	os_freebsd.h	/^struct tw_cl_lock_packet {$/;"	s
tw_osli_ioctl_no_data_buf	os_freebsd.h	/^typedef struct tw_osli_ioctl_no_data_buf {$/;"	s
tw_osli_ioctl_with_payload	os_freebsd.h	/^typedef struct tw_osli_ioctl_with_payload {$/;"	s
twe_usercommand	os_freebsd.h	/^struct twe_usercommand {$/;"	s
type	knowndrives.cpp	/^  char type;$/;"	m	struct:token_info	file:
type	os_qnxnto.h	/^		uchar_t		type;$/;"	m	struct:_cdb::__anon71
type	regex/regex_internal.h	/^  bracket_elem_type type;$/;"	m	struct:__anon128
type	regex/regex_internal.h	/^  re_token_type_t type : 8;$/;"	m	struct:__anon119
type	regex/regex_internal.h	/^  re_token_type_t type;$/;"	m	struct:__anon119
type	regex/regex_internal.h	/^  re_token_type_t type;$/;"	m	struct:bin_tree_t
u	os_freebsd.h	/^    } u;$/;"	m	union:__anon12	typeref:struct:__anon12::__anon13
u16	megaraid.h	256;"	d
u16	megaraid.h	6;"	d
u32	megaraid.h	257;"	d
u32	megaraid.h	3;"	d
u32	megaraid.h	7;"	d
u32	os_linux.h	53;"	d
u64	megaraid.h	258;"	d
u64	megaraid.h	8;"	d
u8	megaraid.h	255;"	d
u8	megaraid.h	5;"	d
uAdditionalRaidSetIndex	csmisas.h	/^   __u32 uAdditionalRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
uBaseIoAddress	csmisas.h	/^   __u32 uBaseIoAddress;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
uBay	csmisas.h	/^   __u32 uBay;$/;"	m	struct:_CSMI_SAS_DRIVE_LOCATION
uBoardID	csmisas.h	/^   __u32 uBoardID;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
uBufferLength	csmisas.h	/^   __u32 uBufferLength;$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD
uCapacity	csmisas.h	/^   __u32 uCapacity;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
uChangeCount	csmisas.h	/^   __u32 uChangeCount;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
uChangeCount	csmisas.h	/^   __u32 uChangeCount;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
uChangeCount	csmisas.h	/^   __u32 uChangeCount;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
uChangeCount	csmisas.h	/^   __u32 uChangeCount;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
uChangeCount	csmisas.h	/^   __u32 uChangeCount;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uChangeCount	csmisas.h	/^   __u32 uChangeCount;$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION
uControllerFlags	csmisas.h	/^   __u32 uControllerFlags;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
uDataBytes	csmisas.h	/^   __u32 uDataBytes;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU_STATUS
uDataBytes	csmisas.h	/^   __u32 uDataBytes;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_STATUS
uDataLength	csmisas.h	/^   __u32 uDataLength;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
uDataLength	csmisas.h	/^   __u32 uDataLength;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
uDownloadFlags	csmisas.h	/^   __u32 uDownloadFlags;$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD
uDriveCount	csmisas.h	/^   __u32 uDriveCount;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
uDriveCount	csmisas.h	/^   __u32 uDriveCount;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO
uDriveCount	csmisas.h	/^   __u32 uDriveCount;$/;"	m	struct:_CSMI_SAS_RAID_SET_SPARE_INFO
uDriveIndex	csmisas.h	/^   __u32 uDriveIndex;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO
uDriveIndex	csmisas.h	/^   __u32 uDriveIndex;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
uDriveIndex	csmisas.h	/^   __u32 uDriveIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_DRIVE_LIST
uElementIndex	csmisas.h	/^   __u32 uElementIndex;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
uEnumerationType	csmisas.h	/^   __u32 uEnumerationType;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
uFailureCode	csmisas.h	/^   __u32 uFailureCode;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
uFailureCode	csmisas.h	/^   __u32 uFailureCode;$/;"	m	struct:_CSMI_SAS_RAID_CONTROL
uFailureCode	csmisas.h	/^   __u32 uFailureCode;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
uFailureCode	csmisas.h	/^   __u32 uFailureCode;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
uFailureCode	csmisas.h	/^   __u32 uFailureCode;$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION
uFeatures	csmisas.h	/^   __u32 uFeatures;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
uFlags	csmisas.h	/^   __u32 uFlags;$/;"	m	struct:_CSMI_SAS_SSP_PASSTHRU
uFlags	csmisas.h	/^   __u32 uFlags;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
uFlags	csmisas.h	/^   __u32 uFlags;$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU
uFunction	csmisas.h	/^   __u32 uFunction;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG::__anon144
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO::__anon151
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO::__anon152
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES::__anon147
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_INFO::__anon145
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_INFO::__anon146
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA::__anon148
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA::__anon149
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO::__anon156
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO::__anon157
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO::__anon154
uHighPart	csmisas.h	/^      __u32 uHighPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO::__anon155
uInformation	csmisas.h	/^   __u32 uInformation;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
uInvalidDwordCount	csmisas.h	/^   __u32 uInvalidDwordCount;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS
uLinkFlags	csmisas.h	/^   __u32 uLinkFlags;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
uLossOfDwordSyncCount	csmisas.h	/^   __u32 uLossOfDwordSyncCount;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG::__anon144
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO::__anon151
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO::__anon152
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES::__anon147
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_INFO::__anon145
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_INFO::__anon146
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA::__anon148
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA::__anon149
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO::__anon156
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO::__anon157
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO::__anon154
uLowPart	csmisas.h	/^      __u32 uLowPart;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO::__anon155
uMaxDrivesPerSet	csmisas.h	/^   __u32 uMaxDrivesPerSet;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uMaxExtents	csmisas.h	/^   __u32 uMaxExtents;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uMaxModules	csmisas.h	/^   __u32 uMaxModules;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uMaxPhysicalDrives	csmisas.h	/^   __u32 uMaxPhysicalDrives;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uMaxRaidSets	csmisas.h	/^   __u32 uMaxRaidSets;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uMaxTransformationMemory	csmisas.h	/^   __u32 uMaxTransformationMemory;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uNumElements	csmisas.h	/^   __u32 uNumElements;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
uNumRaidSets	csmisas.h	/^   __u32 uNumRaidSets;$/;"	m	struct:_CSMI_SAS_RAID_INFO
uNumberOfHeads	csmisas.h	/^   __u32 uNumberOfHeads;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
uNumberOfHeads	csmisas.h	/^   __u32 uNumberOfHeads;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
uNumberOfTracks	csmisas.h	/^   __u32 uNumberOfTracks;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
uNumberOfTracks	csmisas.h	/^   __u32 uNumberOfTracks;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
uOfflineReason	csmisas.h	/^   __u32 uOfflineReason;$/;"	m	struct:_CSMI_SAS_CNTLR_STATUS
uOperationType	csmisas.h	/^   __u32 uOperationType;$/;"	m	struct:_CSMI_SAS_RAID_SET_OPERATION
uPatternFlags	csmisas.h	/^   __u32 uPatternFlags;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
uPhyResetProblemCount	csmisas.h	/^   __u32 uPhyResetProblemCount;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS
uPinout	csmisas.h	/^   __u32 uPinout;$/;"	m	struct:_CSMI_SAS_GET_CONNECTOR_INFO
uQueueTag	csmisas.h	/^   __u32 uQueueTag;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
uRaidSetCount	csmisas.h	/^   __u32 uRaidSetCount;$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_CACHE_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_DELETE_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_LABEL_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_LIST
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_ONLINE_STATE_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_SPARE_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_TRANSFORM_INFO
uRaidSetIndex	csmisas.h	/^   __u32 uRaidSetIndex;$/;"	m	struct:_CSMI_SAS_RAID_SET_WRITE_PROTECT_INFO
uRaidSetTransformationRules	csmisas.h	/^   __u32 uRaidSetTransformationRules;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
uReceiverFlags	csmisas.h	/^   __u32 uReceiverFlags;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
uRequestLength	csmisas.h	/^   __u32 uRequestLength;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
uReserved	csmisas.h	/^   __u32 uReserved;$/;"	m	struct:_CSMI_SAS_SSP_TASK_IU
uReserved	csmisas.h	/^   __u32 uReserved[11];$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
uResponseBytes	csmisas.h	/^   __u32 uResponseBytes;$/;"	m	struct:_CSMI_SAS_SMP_PASSTHRU
uRunningDisparityErrorCount	csmisas.h	/^   __u32 uRunningDisparityErrorCount;$/;"	m	struct:_CSMI_SAS_LINK_ERRORS
uSCR	csmisas.h	/^   __u32 uSCR[16];$/;"	m	struct:_CSMI_SAS_STP_PASSTHRU_STATUS
uSectorsPerTrack	csmisas.h	/^   __u32 uSectorsPerTrack;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
uStatus	csmisas.h	/^   __u32 uStatus;$/;"	m	struct:_CSMI_SAS_CNTLR_STATUS
uStripeSize	csmisas.h	/^   __u32 uStripeSize;$/;"	m	struct:_CSMI_SAS_RAID_CONFIG
uStripeSize	csmisas.h	/^   __u32 uStripeSize;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
uStripeSize	csmisas.h	/^   __u32 uStripeSize;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO
uStripeSizeInBlocks	csmisas.h	/^   __u32 uStripeSizeInBlocks;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
uSubElementIndex	csmisas.h	/^   __u32 uSubElementIndex;$/;"	m	struct:_CSMI_SAS_RAID_ELEMENT
uSupportedStripeSizeMap	csmisas.h	/^  __u32 uSupportedStripeSizeMap;$/;"	m	struct:_CSMI_SAS_RAID_TYPE_DESCRIPTION
uTrackSectorCount	csmisas.h	/^   __u32 uTrackSectorCount;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO
uTransmitterFlags	csmisas.h	/^   __u32 uTransmitterFlags;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
uVendorUnique	csmisas.h	/^   __u32 uVendorUnique[8];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL
uVendorUnique	csmisas.h	/^   __u32 uVendorUnique[8];$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
ucSenseBuf	os_win32.cpp	/^  UCHAR           ucSenseBuf[64];$/;"	m	struct:os_win32::__anon94	file:
ui	megaraid.h	/^  } __attribute__((packed)) ui;$/;"	m	struct:uioctl_t	typeref:union:uioctl_t::__anon44
uint64_t	int64.h	/^typedef unsigned __int64   uint64_t;$/;"	t
uint64_t	int64.h	/^typedef unsigned long long uint64_t;$/;"	t
uioctl_t	megaraid.h	/^struct uioctl_t$/;"	s
ulExtentBlocks	csmisas.h	/^   } ulExtentBlocks;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO	typeref:struct:_CSMI_SAS_DRIVE_EXTENT_INFO::__anon152
ulExtentOffset	csmisas.h	/^   } ulExtentOffset;$/;"	m	struct:_CSMI_SAS_DRIVE_EXTENT_INFO	typeref:struct:_CSMI_SAS_DRIVE_EXTENT_INFO::__anon151
ulMaxRaidSetBlocks	csmisas.h	/^   } ulMaxRaidSetBlocks;$/;"	m	struct:_CSMI_SAS_RAID_INFO	typeref:struct:_CSMI_SAS_RAID_INFO::__anon146
ulMinRaidSetBlocks	csmisas.h	/^   } ulMinRaidSetBlocks;$/;"	m	struct:_CSMI_SAS_RAID_INFO	typeref:struct:_CSMI_SAS_RAID_INFO::__anon145
ulRaidSetBlocks	csmisas.h	/^   } ulRaidSetBlocks;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA	typeref:struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA::__anon149
ulRaidSetBlocks	csmisas.h	/^   } ulRaidSetBlocks;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO	typeref:struct:_CSMI_SAS_RAID_SET_CREATE_INFO::__anon156
ulRaidSetBlocks	csmisas.h	/^   } ulRaidSetBlocks;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO	typeref:struct:_CSMI_SAS_RAID_SET_MODIFY_INFO::__anon154
ulRaidSetExtentOffset	csmisas.h	/^   } ulRaidSetExtentOffset;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA	typeref:struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA::__anon148
ulRaidSetExtentOffset	csmisas.h	/^   } ulRaidSetExtentOffset;$/;"	m	struct:_CSMI_SAS_RAID_SET_CREATE_INFO	typeref:struct:_CSMI_SAS_RAID_SET_CREATE_INFO::__anon157
ulRaidSetExtentOffset	csmisas.h	/^   } ulRaidSetExtentOffset;$/;"	m	struct:_CSMI_SAS_RAID_SET_MODIFY_INFO	typeref:struct:_CSMI_SAS_RAID_SET_MODIFY_INFO::__anon155
ulTotalUserBlocks	csmisas.h	/^   } ulTotalUserBlocks;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES	typeref:struct:_CSMI_SAS_RAID_DRIVES::__anon147
undefined_1	os_freebsd.h	/^	u_int32_t	undefined_1:4;$/;"	m	struct:__anon12::__anon13
undefined_2	os_freebsd.h	/^	u_int32_t	undefined_2:20;$/;"	m	struct:__anon12::__anon13
under_limit	atacmds.h	/^  signed char under_limit;          \/\/ 9: Minimum temperature limit$/;"	m	struct:ata_sct_temperature_history_table
under_limit_count	atacmds.h	/^  unsigned int under_limit_count;   \/\/ 210-213: # intervals since last reset with temperature < Min Op Limit$/;"	m	struct:ata_sct_status_response
unimplemented	os_solaris.cpp	/^char *unimplemented[2]={$/;"	v
uninst_evtmsg	os_win32/daemon_win32.cpp	/^static void uninst_evtmsg(const char * ident)$/;"	f	file:
unique_id	os_freebsd.h	/^	TW_UINT32	unique_id;$/;"	m	struct:tw_cl_driver_packet
unique_id	os_linux.h	/^  unsigned int unique_id;$/;"	m	struct:TAG_TW_Ioctl_Driver_Command_9000
unit	os_freebsd.h	/^	TW_UINT8	unit;$/;"	m	struct:tw_cl_command_9k
unit	os_freebsd.h	/^	TW_UINT8	unit;$/;"	m	struct:tw_cl_command_download_firmware
unit	os_freebsd.h	/^	TW_UINT8	unit;$/;"	m	struct:tw_cl_command_reset_firmware
unit	os_freebsd.h	/^    u_int8_t	unit:4;$/;"	m	struct:__anon10
unit	os_freebsd.h	/^    u_int8_t	unit:4;$/;"	m	struct:__anon3
unit	os_freebsd.h	/^    u_int8_t	unit:4;$/;"	m	struct:__anon4
unit	os_freebsd.h	/^    u_int8_t	unit:4;$/;"	m	struct:__anon5
unit	os_freebsd.h	/^    u_int8_t	unit:4;$/;"	m	struct:__anon6
unit	os_freebsd.h	/^    u_int8_t	unit:4;$/;"	m	struct:__anon7
unit	os_freebsd.h	/^    u_int8_t	unit;$/;"	m	struct:__anon9
unit	os_linux.h	/^    unsigned char unit:4;$/;"	m	struct:TW_Command::__anon33
unit	os_linux.h	/^    unsigned char unit:4;$/;"	m	struct:TW_Command_9000::__anon21
unit	os_linux.h	/^  unsigned char   unit;$/;"	m	struct:TAG_TW_Command_Apache
unit	os_linux.h	/^  unsigned char unit;$/;"	m	struct:TAG_TW_Passthru
unit_index	os_linux.h	/^  unsigned char unit_index;$/;"	m	struct:TAG_TW_Ioctl
unsafe_shutdowns	nvmecmds.h	/^  unsigned char  unsafe_shutdowns[16];$/;"	m	struct:smartmontools::nvme_smart_log
unsupported	os_generic.cpp	/^static void unsupported(){$/;"	f	file:
unsupported	os_qnxnto.cpp	/^static void unsupported(){$/;"	f	file:
unvmcap	nvmecmds.h	/^  unsigned char   unvmcap[16];$/;"	m	struct:smartmontools::nvme_id_ctrl
update_3ware_devicemap_ioctl	os_win32.cpp	/^static int update_3ware_devicemap_ioctl(HANDLE hdevice)$/;"	f	namespace:os_win32
update_cur_sifted_state	regex/regexec.c	/^update_cur_sifted_state (preg, mctx, sctx, str_idx, dest_nodes)$/;"	f	file:
update_persistent_state	smartd.cpp	/^void dev_state::update_persistent_state()$/;"	f	class:dev_state
update_regs	regex/regexec.c	/^update_regs (dfa, pmatch, cur_node, cur_idx, nmatch)$/;"	f	file:
update_temp_state	smartd.cpp	/^void dev_state::update_temp_state()$/;"	f	class:dev_state
usBIOSBuildRevision	csmisas.h	/^   __u16 usBIOSBuildRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usBIOSMajorRevision	csmisas.h	/^   __u16 usBIOSMajorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usBIOSMinorRevision	csmisas.h	/^   __u16 usBIOSMinorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usBIOSReleaseRevision	csmisas.h	/^   __u16 usBIOSReleaseRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usBlockSize	csmisas.h	/^   __u16 usBlockSize;$/;"	m	struct:_CSMI_SAS_RAID_DRIVES
usBlockSize	csmisas.h	/^   __u16 usBlockSize;$/;"	m	struct:_CSMI_SAS_RAID_SET_ADDITIONAL_DATA
usBuildRevision	csmisas.h	/^   __u16 usBuildRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usBuildRevision	csmisas.h	/^   __u16 usBuildRevision;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
usCSMIMajorRevision	csmisas.h	/^   __u16 usCSMIMajorRevision;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
usCSMIMinorRevision	csmisas.h	/^   __u16 usCSMIMinorRevision;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
usLengthOfControl	csmisas.h	/^   __u16 usLengthOfControl;$/;"	m	struct:_CSMI_SAS_PHY_CONTROL_BUFFER
usMajorRevision	csmisas.h	/^   __u16 usMajorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usMajorRevision	csmisas.h	/^   __u16 usMajorRevision;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
usMinorRevision	csmisas.h	/^   __u16 usMinorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usMinorRevision	csmisas.h	/^   __u16 usMinorRevision;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
usReleaseRevision	csmisas.h	/^   __u16 usReleaseRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usReleaseRevision	csmisas.h	/^   __u16 usReleaseRevision;$/;"	m	struct:_CSMI_SAS_DRIVER_INFO
usReserved	csmisas.h	/^   __u16 usReserved;$/;"	m	struct:_CSMI_SAS_RAID_FEATURES
usRromBIOSBuildRevision	csmisas.h	/^   __u16 usRromBIOSBuildRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usRromBIOSMajorRevision	csmisas.h	/^   __u16 usRromBIOSMajorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usRromBIOSMinorRevision	csmisas.h	/^   __u16 usRromBIOSMinorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usRromBIOSReleaseRevision	csmisas.h	/^   __u16 usRromBIOSReleaseRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usRromBuildRevision	csmisas.h	/^   __u16 usRromBuildRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usRromMajorRevision	csmisas.h	/^   __u16 usRromMajorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usRromMinorRevision	csmisas.h	/^   __u16 usRromMinorRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usRromReleaseRevision	csmisas.h	/^   __u16 usRromReleaseRevision;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usSeverity	csmisas.h	/^   __u16 usSeverity;$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD
usSlotNumber	csmisas.h	/^   __u16 usSlotNumber;$/;"	m	struct:_CSMI_SAS_CNTLR_CONFIG
usStatus	csmisas.h	/^   __u16 usStatus;$/;"	m	struct:_CSMI_SAS_FIRMWARE_DOWNLOAD
usage	os_win32/wtssendmsg.c	/^static int usage()$/;"	f	file:
usage	smartd.cpp	/^  bool usage;                             \/\/ Track changes in Usage Attributes$/;"	m	struct:dev_config	file:
usage	update-smart-drivedb	/^usage()$/;"	f
usage	update-smart-drivedb.in	/^usage()$/;"	f
usagefailed	smartd.cpp	/^  bool usagefailed;                       \/\/ Check for failed Usage Attributes$/;"	m	struct:dev_config	file:
usb_bridge	knowndrives.h	/^  std::string usb_bridge; \/\/ USB bridge name, empty if unknown$/;"	m	struct:usb_dev_info
usb_dev_info	knowndrives.h	/^struct usb_dev_info$/;"	s
usb_device	knowndrives.h	/^  std::string usb_device; \/\/ Device name, empty if unknown$/;"	m	struct:usb_dev_info
usb_type	knowndrives.h	/^  std::string usb_type;   \/\/ Type string ('-d' option).$/;"	m	struct:usb_dev_info
usbcypress_device	scsiata.cpp	/^class usbcypress_device$/;"	c	namespace:sat	file:
usbcypress_device	scsiata.cpp	/^usbcypress_device::usbcypress_device(smart_interface * intf, scsi_device * scsidev,$/;"	f	class:sat::usbcypress_device
usbdevinfo	os_freebsd.cpp	/^static int usbdevinfo(int f, int a, int rec, int busno, unsigned short & vendor_id,$/;"	f	namespace:os_freebsd
usbdevlist	os_freebsd.cpp	/^static int usbdevlist(int busno,unsigned short & vendor_id,$/;"	f	namespace:os_freebsd
usbjmicron_device	scsiata.cpp	/^class usbjmicron_device$/;"	c	namespace:sat	file:
usbjmicron_device	scsiata.cpp	/^usbjmicron_device::usbjmicron_device(smart_interface * intf, scsi_device * scsidev,$/;"	f	class:sat::usbjmicron_device
usbprolific_device	scsiata.cpp	/^class usbprolific_device$/;"	c	namespace:sat	file:
usbprolific_device	scsiata.cpp	/^usbprolific_device::usbprolific_device(smart_interface * intf, scsi_device * scsidev,$/;"	f	class:sat::usbprolific_device
usbsunplus_device	scsiata.cpp	/^class usbsunplus_device$/;"	c	namespace:sat	file:
usbsunplus_device	scsiata.cpp	/^usbsunplus_device::usbsunplus_device(smart_interface * intf, scsi_device * scsidev,$/;"	f	class:sat::usbsunplus_device
uscsidrvrs	os_solaris.cpp	/^static const char *uscsidrvrs[] = {$/;"	v	file:
used	regex/regex.h	/^  unsigned long int used;$/;"	m	struct:re_pattern_buffer
used_bkref_map	regex/regex_internal.h	/^  unsigned int used_bkref_map;$/;"	m	struct:re_dfa_t
user_aac_reply	aacraid.h	/^  }  user_aac_reply;$/;"	t	typeref:struct:__anon143
user_aac_srb32	aacraid.h	/^  }  user_aac_srb32;$/;"	t	typeref:struct:__anon142
user_aac_srb64	aacraid.h	/^  }  user_aac_srb64;$/;"	t	typeref:struct:__anon141
user_sgentry32	aacraid.h	/^  }  user_sgentry32;$/;"	t	typeref:struct:__anon137
user_sgentry64	aacraid.h	/^  }  user_sgentry64;$/;"	t	typeref:struct:__anon136
user_sgmap32	aacraid.h	/^  }  user_sgmap32;$/;"	t	typeref:struct:__anon139
user_sgmap64	aacraid.h	/^  }  user_sgmap64;$/;"	t	typeref:struct:__anon138
utility_cpp_cvsid	utility.cpp	/^const char * utility_cpp_cvsid = "$Id: utility.cpp 4309 2016-04-24 14:59:15Z chrfranke $"$/;"	v
val	dev_interface.h	/^  uint64_t val() const$/;"	f	class:ata_reg_alias_48
val	dev_interface.h	/^  unsigned char val() const$/;"	f	class:ata_register
val	dev_interface.h	/^  unsigned short val() const$/;"	f	class:ata_reg_alias_16
val	getopt/getopt.h	/^  int val;$/;"	m	struct:option
val	smartd.cpp	/^    unsigned char val;$/;"	m	struct:persistent_dev_state::ata_attribute	file:
valid_len	regex/regex_internal.h	/^  int valid_len;$/;"	m	struct:re_string_t
value	knowndrives.cpp	/^  std::string value;$/;"	m	struct:token_info	file:
value	os_freebsd.h	/^    u_int32_t	value;$/;"	m	union:__anon12
vecho	update-smart-drivedb	/^vecho()$/;"	f
vecho	update-smart-drivedb.in	/^vecho()$/;"	f
vendor_attributes	atacmds.h	/^  struct ata_smart_attribute vendor_attributes [NUMBER_ATA_SMART_ATTRIBUTES];$/;"	m	struct:ata_smart_values	typeref:struct:ata_smart_values::ata_smart_attribute
vendor_specifc	atacmds.h	/^  unsigned char vendor_specifc[2];$/;"	m	struct:ata_smart_extselftestlog
vendor_specific	atacmds.h	/^  unsigned char vendor_specific[32];\/\/ 480-511: vendor specific$/;"	m	struct:ata_sct_status_response
vendor_specific	scsicmds.cpp	/^static const char * vendor_specific = "<vendor specific>";$/;"	v	file:
vendor_specific1	atacmds.h	/^  unsigned char      vendor_specific1[491-338+1];$/;"	m	struct:ata_selective_self_test_log
vendor_specific2	atacmds.h	/^  unsigned char      vendor_specific2[507-504+1];$/;"	m	struct:ata_selective_self_test_log
vendor_specific_366	atacmds.h	/^  unsigned char vendor_specific_366; \/\/ Maxtor & IBM curent segment pointer$/;"	m	struct:ata_smart_values
vendor_specific_371	atacmds.h	/^  unsigned char vendor_specific_371;  \/\/ Maxtor, IBM: self-test failure checkpoint see below!$/;"	m	struct:ata_smart_values
vendor_specific_386_510	atacmds.h	/^  unsigned char vendor_specific_386_510[125]; \/\/ Maxtor bytes 508-509 Attribute\/Threshold Revision #$/;"	m	struct:ata_smart_values
vendorspecific	atacmds.h	/^  unsigned char vendorspecific[15];$/;"	m	struct:ata_smart_extselftestlog_desc
vendorspecific	atacmds.h	/^  unsigned char vendorspecific[15];$/;"	m	struct:ata_smart_selftestlog_struct
vendorspecific	atacmds.h	/^  unsigned char vendorspecific[2];$/;"	m	struct:ata_smart_selftestlog
ver	nvmecmds.h	/^  unsigned int    ver;$/;"	m	struct:smartmontools::nvme_id_ctrl
version	atacmds.h	/^  unsigned char version;$/;"	m	struct:ata_smart_exterrlog
version	atacmds.h	/^  unsigned char version;$/;"	m	struct:ata_smart_extselftestlog
version	os_linux.h	/^      char version[504];$/;"	m	struct:TW_Command::__anon35::__anon39
version	os_linux.h	/^      char version[504];$/;"	m	struct:TW_Command_9000::__anon23::__anon27
vid	nvmecmds.h	/^  unsigned short  vid;$/;"	m	struct:smartmontools::nvme_id_ctrl
vquery	os_win32/wmiquery.cpp	/^bool wbem_services::vquery(wbem_enumerator & result, const char * qstr, va_list args) \/*const*\/$/;"	f	class:wbem_services
vquery1	os_win32/wmiquery.cpp	/^bool wbem_services::vquery1(wbem_object & obj, const char * qstr, va_list args) \/*const*\/$/;"	f	class:wbem_services
vrun	update-smart-drivedb	/^vrun()$/;"	f
vrun	update-smart-drivedb.in	/^vrun()$/;"	f
vrun2	update-smart-drivedb	/^vrun2()$/;"	f
vrun2	update-smart-drivedb.in	/^vrun2()$/;"	f
vs	nvmecmds.h	/^  unsigned char   vs;$/;"	m	struct:smartmontools::nvme_error_log_page
vs	nvmecmds.h	/^  unsigned char   vs[1024];$/;"	m	struct:smartmontools::nvme_id_ctrl
vs	nvmecmds.h	/^  unsigned char   vs[3712];$/;"	m	struct:smartmontools::nvme_id_ns
vsnprintf	os_win32/syslog_win32.cpp	42;"	d	file:
vsnprintf	utility.cpp	759;"	d	file:
vsnprintf	utility.cpp	761;"	d	file:
vsnprintf	utility.h	69;"	d
vstrprintf	utility.cpp	/^std::string vstrprintf(const char * fmt, va_list ap)$/;"	f
vsyslog	os_win32/syslog_win32.cpp	/^void vsyslog(int priority, const char * message, va_list args)$/;"	f
vsyslog_lines	smartd.cpp	/^static void vsyslog_lines(int priority, const char * fmt, va_list ap)$/;"	f	file:
vsyslog_lines	smartd.cpp	1217;"	d	file:
vwc	nvmecmds.h	/^  unsigned char   vwc;$/;"	m	struct:smartmontools::nvme_id_ctrl
w	megaraid.h	/^    u32 w[3];$/;"	m	union:megasas_dcmd_frame::__anon46
wControllerId	os_win32.cpp	/^  WORD wControllerId;   \/\/ 3ware specific: Controller ID (0,1,...)$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
wIdentifier	os_win32.cpp	/^  WORD wIdentifier;     \/\/ Vendor specific identifier$/;"	m	struct:_GETVERSIONINPARAMS_EX	file:
wIdentifier	os_win32.cpp	/^  WORD wIdentifier;     \/\/ Vendor specific identifier$/;"	m	struct:_SENDCMDINPARAMS_EX	file:
wait_evt_running	os_win32/daemon_win32.cpp	/^static int wait_evt_running(int seconds, int exists)$/;"	f	file:
wait_signaled	os_win32/daemon_win32.cpp	/^static int wait_signaled(HANDLE h, int seconds)$/;"	f	file:
warning	update-smart-drivedb	/^warning()$/;"	f
warning	update-smart-drivedb.in	/^warning()$/;"	f
warning_script	smartd.cpp	/^static std::string warning_script;$/;"	v	file:
warning_temp_time	nvmecmds.h	/^  unsigned int   warning_temp_time;$/;"	m	struct:smartmontools::nvme_smart_log
warningmsg	knowndrives.h	/^  const char * warningmsg;$/;"	m	struct:drive_settings
warnings	os_netbsd.cpp	/^enum warnings {$/;"	g	file:
warnings	os_openbsd.cpp	/^enum warnings {$/;"	g	file:
wbem_enumerator	os_win32/wmiquery.h	/^class wbem_enumerator$/;"	c
wbem_object	os_win32/wmiquery.h	/^class wbem_object$/;"	c
wbem_services	os_win32/wmiquery.h	/^class wbem_services$/;"	c
wch	regex/regex_internal.h	/^    wchar_t wch;$/;"	m	union:__anon128::__anon129
wcs	regex/regex_internal.h	/^  wint_t *wcs;$/;"	m	struct:re_string_t
wctemp	nvmecmds.h	/^  unsigned short  wctemp;$/;"	m	struct:smartmontools::nvme_id_ctrl
weak_alias	regex/regcomp.c	/^weak_alias (__re_compile_pattern, re_compile_pattern)$/;"	f
weak_alias	regex/regcomp.c	/^weak_alias (__re_set_syntax, re_set_syntax)$/;"	f
weak_alias	regex/regexec.c	/^weak_alias (__re_set_registers, re_set_registers)$/;"	f
win_aacraid_device	os_win32.cpp	/^class win_aacraid_device$/;"	c	namespace:os_win32	file:
win_aacraid_device	os_win32.cpp	/^win_aacraid_device::win_aacraid_device(smart_interface * intf,$/;"	f	class:os_win32::win_aacraid_device
win_areca_ata_device	os_win32.cpp	/^class win_areca_ata_device$/;"	c	namespace:os_win32	file:
win_areca_ata_device	os_win32.cpp	/^win_areca_ata_device::win_areca_ata_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:os_win32::win_areca_ata_device
win_areca_scsi_device	os_win32.cpp	/^class win_areca_scsi_device$/;"	c	namespace:os_win32	file:
win_areca_scsi_device	os_win32.cpp	/^win_areca_scsi_device::win_areca_scsi_device(smart_interface * intf, const char * dev_name, int disknum, int encnum)$/;"	f	class:os_win32::win_areca_scsi_device
win_ata_device	os_win32.cpp	/^class win_ata_device$/;"	c	namespace:os_win32	file:
win_ata_device	os_win32.cpp	/^win_ata_device::win_ata_device(smart_interface * intf, const char * dev_name, const char * req_type)$/;"	f	class:os_win32::win_ata_device
win_csmi_device	os_win32.cpp	/^class win_csmi_device$/;"	c	namespace:os_win32	file:
win_csmi_device	os_win32.cpp	/^win_csmi_device::win_csmi_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_win32::win_csmi_device
win_dev_type	os_win32.cpp	/^enum win_dev_type { DEV_UNKNOWN = 0, DEV_ATA, DEV_SCSI, DEV_SAT, DEV_USB };$/;"	g	namespace:os_win32	file:
win_nvme_device	os_win32.cpp	/^class win_nvme_device$/;"	c	namespace:os_win32	file:
win_nvme_device	os_win32.cpp	/^win_nvme_device::win_nvme_device(smart_interface * intf, const char * dev_name,$/;"	f	class:os_win32::win_nvme_device
win_scsi_device	os_win32.cpp	/^class win_scsi_device$/;"	c	namespace:os_win32	file:
win_scsi_device	os_win32.cpp	/^win_scsi_device::win_scsi_device(smart_interface * intf,$/;"	f	class:os_win32::win_scsi_device
win_smart_device	os_win32.cpp	/^  win_smart_device()$/;"	f	class:os_win32::win_smart_device
win_smart_device	os_win32.cpp	/^class win_smart_device$/;"	c	namespace:os_win32	file:
win_smart_interface	os_win32.cpp	/^class win_smart_interface$/;"	c	namespace:os_win32	file:
win_tw_cli_device	os_win32.cpp	/^class win_tw_cli_device$/;"	c	namespace:os_win32	file:
win_tw_cli_device	os_win32.cpp	/^win_tw_cli_device::win_tw_cli_device(smart_interface * intf, const char * dev_name, const char * req_type)$/;"	f	class:os_win32::win_tw_cli_device
with_nvme_devicescan	Makefile	/^with_nvme_devicescan = $/;"	m
with_selinux	Makefile	/^with_selinux = $/;"	m
with_update_smart_drivedb	Makefile	/^with_update_smart_drivedb = yes$/;"	m
wmiquery_cpp_cvsid	os_win32/wmiquery.cpp	/^const char * wmiquery_cpp_cvsid = "$Id: wmiquery.cpp 4120 2015-08-27 16:12:21Z samm2 $"$/;"	v
word086	atacmds.h	/^  unsigned short word086;$/;"	m	struct:ata_identify_device
word_char	regex/regex_internal.h	/^  re_bitset_ptr_t word_char;$/;"	m	struct:re_dfa_t
words000_009	atacmds.h	/^  unsigned short words000_009[10];$/;"	m	struct:ata_identify_device
words003_255	atacmds.h	/^  unsigned short words003_255[253]; \/\/ reserved$/;"	m	struct:ata_sct_data_table_command
words004_255	atacmds.h	/^  unsigned short words004_255[252]; \/\/ reserved$/;"	m	struct:ata_sct_error_recovery_control_command
words005_255	atacmds.h	/^  unsigned short words005_255[251]; \/\/ reserved$/;"	m	struct:ata_sct_feature_control_command
words020_022	atacmds.h	/^  unsigned short words020_022[3];$/;"	m	struct:ata_identify_device
words047_079	atacmds.h	/^  unsigned short words047_079[33];$/;"	m	struct:ata_identify_device
words088_255	atacmds.h	/^  unsigned short words088_255[168];$/;"	m	struct:ata_identify_device
working_branch	os_freebsd.h	/^	TW_UINT16	working_branch;	\/* branch # of the firmware that the$/;"	m	struct:tw_cl_compatibility_packet
working_build	os_freebsd.h	/^	TW_UINT16	working_build;	\/* build # of the firmware that the$/;"	m	struct:tw_cl_compatibility_packet
working_srl	os_freebsd.h	/^	TW_UINT16	working_srl;	\/* driver & firmware negotiated srl *\/$/;"	m	struct:tw_cl_compatibility_packet
worst	atacmds.h	/^  unsigned char worst;$/;"	m	struct:ata_smart_attribute
worst	smartd.cpp	/^    unsigned char worst; \/\/ Byte needed for 'raw64' attribute only.$/;"	m	struct:persistent_dev_state::ata_attribute	file:
write_all_dev_attrlogs	smartd.cpp	/^static void write_all_dev_attrlogs(const dev_config_vector & configs,$/;"	f	file:
write_all_dev_states	smartd.cpp	/^static void write_all_dev_states(const dev_config_vector & configs,$/;"	f	file:
write_dev_attrlog	smartd.cpp	/^static bool write_dev_attrlog(const char * path, const dev_state & state)$/;"	f	file:
write_dev_state	smartd.cpp	/^static bool write_dev_state(const char * path, const persistent_dev_state & state)$/;"	f	file:
write_dev_state_line	smartd.cpp	/^static void write_dev_state_line(FILE * f, const char * name, uint64_t val)$/;"	f	file:
write_dev_state_line	smartd.cpp	/^static void write_dev_state_line(FILE * f, const char * name1, int id, const char * name2, uint64_t val)$/;"	f	file:
write_event_log	os_win32/syslog_win32.cpp	/^static void write_event_log(int priority, const char * lines)$/;"	f	file:
write_filemarks	os_qnxnto.h	/^	} write_filemarks;$/;"	m	union:_cdb	typeref:struct:_cdb::__anon89
write_lat	nvmecmds.h	/^  unsigned char   write_lat;$/;"	m	struct:smartmontools::nvme_id_power_state
write_logfile	os_win32/syslog_win32.cpp	/^static void write_logfile(FILE * f, int priority, const char * lines)$/;"	f	file:
write_speed	os_qnxnto.h	/^		uchar_t		write_speed[2];$/;"	m	struct:_cdb::__anon78
write_tput	nvmecmds.h	/^  unsigned char   write_tput;$/;"	m	struct:smartmontools::nvme_id_power_state
wtssend	os_win32/smartd_warning.cmd	/^if "%first%" == "active"    set wtssend=-a$/;"	v
wtssend	os_win32/smartd_warning.cmd	/^if "%first%" == "connected" set wtssend=-s$/;"	v
wtssend	os_win32/smartd_warning.cmd	/^if "%first%" == "console"   set wtssend=-c$/;"	v
wtssend	os_win32/smartd_warning.cmd	/^set wtssend=$/;"	v
xCLSID_WbemLocator	os_win32/wmiquery.cpp	/^const CLSID xCLSID_WbemLocator = {0x4590f811, 0x1d3a, 0x11d0, {0x89, 0x1f, 0x00, 0xaa, 0x00, 0x4b, 0x2e, 0x24}};$/;"	v
xIID_IWbemLocator	os_win32/wmiquery.cpp	/^const IID   xIID_IWbemLocator  = {0xdc12a687, 0x737f, 0x11cf, {0x88, 0x4d, 0x00, 0xaa, 0x00, 0x4b, 0x2e, 0x24}};$/;"	v
xerrorlog	smartd.cpp	/^  bool xerrorlog;                         \/\/ Monitor number of ATA errors (Extended Comprehensive error log)$/;"	m	struct:dev_config	file:
xferaddr	megaraid.h	/^  uint32_t  xferaddr;$/;"	m	struct:__anon42
~any_device_auto_ptr	dev_interface.h	/^  ~any_device_auto_ptr() throw()$/;"	f	class:any_device_auto_ptr
~areca_ata_device	dev_areca.cpp	/^areca_ata_device::~areca_ata_device() throw()$/;"	f	class:areca_ata_device
~areca_scsi_device	dev_areca.cpp	/^areca_scsi_device::~areca_scsi_device() throw()$/;"	f	class:areca_scsi_device
~com_bstr	os_win32/wmiquery.h	/^  ~com_bstr()$/;"	f	class:com_bstr
~com_intf_ptr	os_win32/wmiquery.h	/^  ~com_intf_ptr()$/;"	f	class:com_intf_ptr
~darwin_smart_device	os_darwin.cpp	/^darwin_smart_device::~darwin_smart_device() throw()$/;"	f	class:os::darwin_smart_device
~drive_database	knowndrives.cpp	/^drive_database::~drive_database()$/;"	f	class:drive_database
~freebsd_smart_device	os_freebsd.cpp	/^freebsd_smart_device::~freebsd_smart_device() throw()$/;"	f	class:os_freebsd::freebsd_smart_device
~generic_areca_device	dev_areca.cpp	/^generic_areca_device::~generic_areca_device() throw()$/;"	f	class:generic_areca_device
~legacy_smart_device	dev_legacy.cpp	/^legacy_smart_device::~legacy_smart_device() throw()$/;"	f	class:os::legacy_smart_device
~linux_aacraid_device	os_linux.cpp	/^linux_aacraid_device::~linux_aacraid_device() throw()$/;"	f	class:os_linux::linux_aacraid_device
~linux_megaraid_device	os_linux.cpp	/^linux_megaraid_device::~linux_megaraid_device() throw()$/;"	f	class:os_linux::linux_megaraid_device
~linux_smart_device	os_linux.cpp	/^linux_smart_device::~linux_smart_device() throw()$/;"	f	class:os_linux::linux_smart_device
~parsed_ata_device	atacmds.cpp	/^parsed_ata_device::~parsed_ata_device() throw()$/;"	f	class:__anon51::parsed_ata_device
~raw_buffer	utility.h	/^  ~raw_buffer()$/;"	f	class:raw_buffer
~regular_expression	utility.cpp	/^regular_expression::~regular_expression()$/;"	f	class:regular_expression
~sat_device	scsiata.cpp	/^sat_device::~sat_device() throw()$/;"	f	class:sat::sat_device
~smart_device	dev_interface.cpp	/^smart_device::~smart_device() throw()$/;"	f	class:smart_device
~smart_device_list	dev_interface.h	/^  ~smart_device_list() throw()$/;"	f	class:smart_device_list
~smart_interface	dev_interface.h	/^  virtual ~smart_interface() throw()$/;"	f	class:smart_interface
~stdio_file	utility.h	/^  ~stdio_file()$/;"	f	class:stdio_file
~supported_vpd_pages	scsicmds.h	/^    ~supported_vpd_pages() { num_valid = 0; }$/;"	f	class:supported_vpd_pages
~tunnelled_device_base	dev_interface.cpp	/^tunnelled_device_base::~tunnelled_device_base() throw()$/;"	f	class:tunnelled_device_base
~usbcypress_device	scsiata.cpp	/^usbcypress_device::~usbcypress_device() throw()$/;"	f	class:sat::usbcypress_device
~usbjmicron_device	scsiata.cpp	/^usbjmicron_device::~usbjmicron_device() throw()$/;"	f	class:sat::usbjmicron_device
~usbprolific_device	scsiata.cpp	/^usbprolific_device::~usbprolific_device() throw()$/;"	f	class:sat::usbprolific_device
~usbsunplus_device	scsiata.cpp	/^usbsunplus_device::~usbsunplus_device() throw()$/;"	f	class:sat::usbsunplus_device
~win_aacraid_device	os_win32.cpp	/^win_aacraid_device::~win_aacraid_device() throw()$/;"	f	class:os_win32::win_aacraid_device
~win_ata_device	os_win32.cpp	/^win_ata_device::~win_ata_device() throw()$/;"	f	class:os_win32::win_ata_device
~win_csmi_device	os_win32.cpp	/^win_csmi_device::~win_csmi_device() throw()$/;"	f	class:os_win32::win_csmi_device
~win_smart_device	os_win32.cpp	/^win_smart_device::~win_smart_device() throw()$/;"	f	class:os_win32::win_smart_device
